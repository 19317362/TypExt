// Factory for ExtJS 5.1.1
// Forked Project: http://www.sencha.com/products/extjs/
// Generated by Jeremie Turbet @IPBS - Toulouse
// 2016-f√©vr.-22 12:50:44 PM

module TypExt {
  export class Object {
    static create(className: string, config: any, extraArgs?: any) {
      if (extraArgs == null)
        return Ext.create(className, config);
      else
        return Ext.create(className, Ext.Object.merge(config, extraArgs));
    }
  }
}

module TypExt {
	export class AbstractManager {
		static create(config: TypExt.IAbstractManagerConfig, extraArgs?: any) : Ext.IAbstractManager {
			return TypExt.Object.create("Ext.AbstractManager", config, extraArgs );
		}
	}
}

module TypExt {
	export class Action {
		static create(config: TypExt.IActionConfig, extraArgs?: any) : Ext.IAction {
			return TypExt.Object.create("Ext.Action", config, extraArgs );
		}
	}
}

module TypExt {
	export class Ajax {
		static create(config: TypExt.IAjaxConfig, extraArgs?: any) : Ext.IAjax {
			return TypExt.Object.create("Ext.Ajax", config, extraArgs );
		}
	}
}

module TypExt {
	export class AnimationQueue {
		static create(config: TypExt.IAnimationQueueConfig, extraArgs?: any) : Ext.IAnimationQueue {
			return TypExt.Object.create("Ext.AnimationQueue", config, extraArgs );
		}
	}
}

module TypExt.app {
	export class Application {
		static create(config: TypExt.app.IApplicationConfig, extraArgs?: any) : Ext.app.IApplication {
			return TypExt.Object.create("Ext.app.Application", config, extraArgs );
		}
	}
}

module TypExt.app {
	export class BaseController {
		static create(config: TypExt.app.IBaseControllerConfig, extraArgs?: any) : Ext.app.IBaseController {
			return TypExt.Object.create("Ext.app.BaseController", config, extraArgs );
		}
	}
}

module TypExt.app.bind {
	export class AbstractStub {
		static create(config: TypExt.app.bind.IAbstractStubConfig, extraArgs?: any) : Ext.app.bind.IAbstractStub {
			return TypExt.Object.create("Ext.app.bind.AbstractStub", config, extraArgs );
		}
	}
}

module TypExt.app.bind {
	export class BaseBinding {
		static create(config: TypExt.app.bind.IBaseBindingConfig, extraArgs?: any) : Ext.app.bind.IBaseBinding {
			return TypExt.Object.create("Ext.app.bind.BaseBinding", config, extraArgs );
		}
	}
}

module TypExt.app.bind {
	export class Binding {
		static create(config: TypExt.app.bind.IBindingConfig, extraArgs?: any) : Ext.app.bind.IBinding {
			return TypExt.Object.create("Ext.app.bind.Binding", config, extraArgs );
		}
	}
}

module TypExt.app.bind {
	export class Formula {
		static create(config: TypExt.app.bind.IFormulaConfig, extraArgs?: any) : Ext.app.bind.IFormula {
			return TypExt.Object.create("Ext.app.bind.Formula", config, extraArgs );
		}
	}
}

module TypExt.app.bind {
	export class LinkStub {
		static create(config: TypExt.app.bind.ILinkStubConfig, extraArgs?: any) : Ext.app.bind.ILinkStub {
			return TypExt.Object.create("Ext.app.bind.LinkStub", config, extraArgs );
		}
	}
}

module TypExt.app.bind {
	export class Multi {
		static create(config: TypExt.app.bind.IMultiConfig, extraArgs?: any) : Ext.app.bind.IMulti {
			return TypExt.Object.create("Ext.app.bind.Multi", config, extraArgs );
		}
	}
}

module TypExt.app.bind {
	export class RootStub {
		static create(config: TypExt.app.bind.IRootStubConfig, extraArgs?: any) : Ext.app.bind.IRootStub {
			return TypExt.Object.create("Ext.app.bind.RootStub", config, extraArgs );
		}
	}
}

module TypExt.app.bind {
	export class Stub {
		static create(config: TypExt.app.bind.IStubConfig, extraArgs?: any) : Ext.app.bind.IStub {
			return TypExt.Object.create("Ext.app.bind.Stub", config, extraArgs );
		}
	}
}

module TypExt.app.bind {
	export class Template {
		static create(config: TypExt.app.bind.ITemplateConfig, extraArgs?: any) : Ext.app.bind.ITemplate {
			return TypExt.Object.create("Ext.app.bind.Template", config, extraArgs );
		}
	}
}

module TypExt.app.bind {
	export class TemplateBinding {
		static create(config: TypExt.app.bind.ITemplateBindingConfig, extraArgs?: any) : Ext.app.bind.ITemplateBinding {
			return TypExt.Object.create("Ext.app.bind.TemplateBinding", config, extraArgs );
		}
	}
}

module TypExt.app.bindinspector {
	export class Environment {
		static create(config: TypExt.app.bindinspector.IEnvironmentConfig, extraArgs?: any) : Ext.app.bindinspector.IEnvironment {
			return TypExt.Object.create("Ext.app.bindinspector.Environment", config, extraArgs );
		}
	}
}

module TypExt.app.bindinspector {
	export class Util {
		static create(config: TypExt.app.bindinspector.IUtilConfig, extraArgs?: any) : Ext.app.bindinspector.IUtil {
			return TypExt.Object.create("Ext.app.bindinspector.Util", config, extraArgs );
		}
	}
}

module TypExt.app {
	export class Controller {
		static create(config: TypExt.app.IControllerConfig, extraArgs?: any) : Ext.app.IController {
			return TypExt.Object.create("Ext.app.Controller", config, extraArgs );
		}
	}
}

module TypExt.app.domain {
	export class Component {
		static create(config: TypExt.app.domain.IComponentConfig, extraArgs?: any) : Ext.app.domain.IComponent {
			return TypExt.Object.create("Ext.app.domain.Component", config, extraArgs );
		}
	}
}

module TypExt.app.domain {
	export class Controller {
		static create(config: TypExt.app.domain.IControllerConfig, extraArgs?: any) : Ext.app.domain.IController {
			return TypExt.Object.create("Ext.app.domain.Controller", config, extraArgs );
		}
	}
}

module TypExt.app.domain {
	export class Direct {
		static create(config: TypExt.app.domain.IDirectConfig, extraArgs?: any) : Ext.app.domain.IDirect {
			return TypExt.Object.create("Ext.app.domain.Direct", config, extraArgs );
		}
	}
}

module TypExt.app.domain {
	export class Global {
		static create(config: TypExt.app.domain.IGlobalConfig, extraArgs?: any) : Ext.app.domain.IGlobal {
			return TypExt.Object.create("Ext.app.domain.Global", config, extraArgs );
		}
	}
}

module TypExt.app.domain {
	export class Store {
		static create(config: TypExt.app.domain.IStoreConfig, extraArgs?: any) : Ext.app.domain.IStore {
			return TypExt.Object.create("Ext.app.domain.Store", config, extraArgs );
		}
	}
}

module TypExt.app.domain {
	export class View {
		static create(config: TypExt.app.domain.IViewConfig, extraArgs?: any) : Ext.app.domain.IView {
			return TypExt.Object.create("Ext.app.domain.View", config, extraArgs );
		}
	}
}

module TypExt.app {
	export class EventBus {
		static create(config: TypExt.app.IEventBusConfig, extraArgs?: any) : Ext.app.IEventBus {
			return TypExt.Object.create("Ext.app.EventBus", config, extraArgs );
		}
	}
}

module TypExt.app {
	export class EventDomain {
		static create(config: TypExt.app.IEventDomainConfig, extraArgs?: any) : Ext.app.IEventDomain {
			return TypExt.Object.create("Ext.app.EventDomain", config, extraArgs );
		}
	}
}

module TypExt.app {
	export class Profile {
		static create(config: TypExt.app.IProfileConfig, extraArgs?: any) : Ext.app.IProfile {
			return TypExt.Object.create("Ext.app.Profile", config, extraArgs );
		}
	}
}

module TypExt.app.route {
	export class Queue {
		static create(config: TypExt.app.route.IQueueConfig, extraArgs?: any) : Ext.app.route.IQueue {
			return TypExt.Object.create("Ext.app.route.Queue", config, extraArgs );
		}
	}
}

module TypExt.app.route {
	export class Route {
		static create(config: TypExt.app.route.IRouteConfig, extraArgs?: any) : Ext.app.route.IRoute {
			return TypExt.Object.create("Ext.app.route.Route", config, extraArgs );
		}
	}
}

module TypExt.app.route {
	export class Router {
		static create(config: TypExt.app.route.IRouterConfig, extraArgs?: any) : Ext.app.route.IRouter {
			return TypExt.Object.create("Ext.app.route.Router", config, extraArgs );
		}
	}
}

module TypExt.app {
	export class Util {
		static create(config: TypExt.app.IUtilConfig, extraArgs?: any) : Ext.app.IUtil {
			return TypExt.Object.create("Ext.app.Util", config, extraArgs );
		}
	}
}

module TypExt.app {
	export class ViewController {
		static create(config: TypExt.app.IViewControllerConfig, extraArgs?: any) : Ext.app.IViewController {
			return TypExt.Object.create("Ext.app.ViewController", config, extraArgs );
		}
	}
}

module TypExt.app {
	export class ViewModel {
		static create(config: TypExt.app.IViewModelConfig, extraArgs?: any) : Ext.app.IViewModel {
			return TypExt.Object.create("Ext.app.ViewModel", config, extraArgs );
		}
	}
}

module TypExt {
	export class Array {
		static create(config: TypExt.IArrayConfig, extraArgs?: any) : Ext.IArray {
			return TypExt.Object.create("Ext.Array", config, extraArgs );
		}
	}
}

module TypExt {
	export class Assert {
		static create(config: TypExt.IAssertConfig, extraArgs?: any) : Ext.IAssert {
			return TypExt.Object.create("Ext.Assert", config, extraArgs );
		}
	}
}

module TypExt {
	export class Base {
		static create(config: TypExt.IBaseConfig, extraArgs?: any) : Ext.IBase {
			return TypExt.Object.create("Ext.Base", config, extraArgs );
		}
	}
}

module TypExt {
	export class Browser {
		static create(config: TypExt.IBrowserConfig, extraArgs?: any) : Ext.IBrowser {
			return TypExt.Object.create("Ext.Browser", config, extraArgs );
		}
	}
}

module TypExt.button {
	export class Button {
		static create(config: TypExt.button.IButtonConfig, extraArgs?: any) : Ext.button.IButton {
			return TypExt.Object.create("Ext.button.Button", config, extraArgs );
		}
	}
}

module TypExt {
	export class Button {
		static create(config: TypExt.IButtonConfig, extraArgs?: any) : Ext.IButton {
			return TypExt.Object.create("Ext.Button", config, extraArgs );
		}
	}
}

module TypExt.button {
	export class Cycle {
		static create(config: TypExt.button.ICycleConfig, extraArgs?: any) : Ext.button.ICycle {
			return TypExt.Object.create("Ext.button.Cycle", config, extraArgs );
		}
	}
}

module TypExt {
	export class CycleButton {
		static create(config: TypExt.ICycleButtonConfig, extraArgs?: any) : Ext.ICycleButton {
			return TypExt.Object.create("Ext.CycleButton", config, extraArgs );
		}
	}
}

module TypExt.button {
	export class Manager {
		static create(config: TypExt.button.IManagerConfig, extraArgs?: any) : Ext.button.IManager {
			return TypExt.Object.create("Ext.button.Manager", config, extraArgs );
		}
	}
}

module TypExt {
	export class ButtonToggleManager {
		static create(config: TypExt.IButtonToggleManagerConfig, extraArgs?: any) : Ext.IButtonToggleManager {
			return TypExt.Object.create("Ext.ButtonToggleManager", config, extraArgs );
		}
	}
}

module TypExt.button {
	export class Segmented {
		static create(config: TypExt.button.ISegmentedConfig, extraArgs?: any) : Ext.button.ISegmented {
			return TypExt.Object.create("Ext.button.Segmented", config, extraArgs );
		}
	}
}

module TypExt.button {
	export class Split {
		static create(config: TypExt.button.ISplitConfig, extraArgs?: any) : Ext.button.ISplit {
			return TypExt.Object.create("Ext.button.Split", config, extraArgs );
		}
	}
}

module TypExt {
	export class SplitButton {
		static create(config: TypExt.ISplitButtonConfig, extraArgs?: any) : Ext.ISplitButton {
			return TypExt.Object.create("Ext.SplitButton", config, extraArgs );
		}
	}
}

module TypExt.chart {
	export class AbstractChart {
		static create(config: TypExt.chart.IAbstractChartConfig, extraArgs?: any) : Ext.chart.IAbstractChart {
			return TypExt.Object.create("Ext.chart.AbstractChart", config, extraArgs );
		}
	}
}

module TypExt.chart.axis {
	export class Axis {
		static create(config: TypExt.chart.axis.IAxisConfig, extraArgs?: any) : Ext.chart.axis.IAxis {
			return TypExt.Object.create("Ext.chart.axis.Axis", config, extraArgs );
		}
	}
}

module TypExt.chart.axis {
	export class Axis3D {
		static create(config: TypExt.chart.axis.IAxis3DConfig, extraArgs?: any) : Ext.chart.axis.IAxis3D {
			return TypExt.Object.create("Ext.chart.axis.Axis3D", config, extraArgs );
		}
	}
}

module TypExt.chart.axis {
	export class Category {
		static create(config: TypExt.chart.axis.ICategoryConfig, extraArgs?: any) : Ext.chart.axis.ICategory {
			return TypExt.Object.create("Ext.chart.axis.Category", config, extraArgs );
		}
	}
}

module TypExt.chart.axis {
	export class Category3D {
		static create(config: TypExt.chart.axis.ICategory3DConfig, extraArgs?: any) : Ext.chart.axis.ICategory3D {
			return TypExt.Object.create("Ext.chart.axis.Category3D", config, extraArgs );
		}
	}
}

module TypExt.chart.axis.layout {
	export class CombineDuplicate {
		static create(config: TypExt.chart.axis.layout.ICombineDuplicateConfig, extraArgs?: any) : Ext.chart.axis.layout.ICombineDuplicate {
			return TypExt.Object.create("Ext.chart.axis.layout.CombineDuplicate", config, extraArgs );
		}
	}
}

module TypExt.chart.axis.layout {
	export class Continuous {
		static create(config: TypExt.chart.axis.layout.IContinuousConfig, extraArgs?: any) : Ext.chart.axis.layout.IContinuous {
			return TypExt.Object.create("Ext.chart.axis.layout.Continuous", config, extraArgs );
		}
	}
}

module TypExt.chart.axis.layout {
	export class Discrete {
		static create(config: TypExt.chart.axis.layout.IDiscreteConfig, extraArgs?: any) : Ext.chart.axis.layout.IDiscrete {
			return TypExt.Object.create("Ext.chart.axis.layout.Discrete", config, extraArgs );
		}
	}
}

module TypExt.chart.axis.layout {
	export class Layout {
		static create(config: TypExt.chart.axis.layout.ILayoutConfig, extraArgs?: any) : Ext.chart.axis.layout.ILayout {
			return TypExt.Object.create("Ext.chart.axis.layout.Layout", config, extraArgs );
		}
	}
}

module TypExt.chart.axis {
	export class Numeric {
		static create(config: TypExt.chart.axis.INumericConfig, extraArgs?: any) : Ext.chart.axis.INumeric {
			return TypExt.Object.create("Ext.chart.axis.Numeric", config, extraArgs );
		}
	}
}

module TypExt.chart.axis {
	export class Numeric3D {
		static create(config: TypExt.chart.axis.INumeric3DConfig, extraArgs?: any) : Ext.chart.axis.INumeric3D {
			return TypExt.Object.create("Ext.chart.axis.Numeric3D", config, extraArgs );
		}
	}
}

module TypExt.chart.axis.segmenter {
	export class Names {
		static create(config: TypExt.chart.axis.segmenter.INamesConfig, extraArgs?: any) : Ext.chart.axis.segmenter.INames {
			return TypExt.Object.create("Ext.chart.axis.segmenter.Names", config, extraArgs );
		}
	}
}

module TypExt.chart.axis.segmenter {
	export class Numeric {
		static create(config: TypExt.chart.axis.segmenter.INumericConfig, extraArgs?: any) : Ext.chart.axis.segmenter.INumeric {
			return TypExt.Object.create("Ext.chart.axis.segmenter.Numeric", config, extraArgs );
		}
	}
}

module TypExt.chart.axis.segmenter {
	export class Segmenter {
		static create(config: TypExt.chart.axis.segmenter.ISegmenterConfig, extraArgs?: any) : Ext.chart.axis.segmenter.ISegmenter {
			return TypExt.Object.create("Ext.chart.axis.segmenter.Segmenter", config, extraArgs );
		}
	}
}

module TypExt.chart.axis.segmenter {
	export class Time {
		static create(config: TypExt.chart.axis.segmenter.ITimeConfig, extraArgs?: any) : Ext.chart.axis.segmenter.ITime {
			return TypExt.Object.create("Ext.chart.axis.segmenter.Time", config, extraArgs );
		}
	}
}

module TypExt.chart.axis.sprite {
	export class Axis {
		static create(config: TypExt.chart.axis.sprite.IAxisConfig, extraArgs?: any) : Ext.chart.axis.sprite.IAxis {
			return TypExt.Object.create("Ext.chart.axis.sprite.Axis", config, extraArgs );
		}
	}
}

module TypExt.chart.axis.sprite {
	export class Axis3D {
		static create(config: TypExt.chart.axis.sprite.IAxis3DConfig, extraArgs?: any) : Ext.chart.axis.sprite.IAxis3D {
			return TypExt.Object.create("Ext.chart.axis.sprite.Axis3D", config, extraArgs );
		}
	}
}

module TypExt.chart.axis {
	export class Time {
		static create(config: TypExt.chart.axis.ITimeConfig, extraArgs?: any) : Ext.chart.axis.ITime {
			return TypExt.Object.create("Ext.chart.axis.Time", config, extraArgs );
		}
	}
}

module TypExt.chart.axis {
	export class Time3D {
		static create(config: TypExt.chart.axis.ITime3DConfig, extraArgs?: any) : Ext.chart.axis.ITime3D {
			return TypExt.Object.create("Ext.chart.axis.Time3D", config, extraArgs );
		}
	}
}

module TypExt.chart {
	export class CartesianChart {
		static create(config: TypExt.chart.ICartesianChartConfig, extraArgs?: any) : Ext.chart.ICartesianChart {
			return TypExt.Object.create("Ext.chart.CartesianChart", config, extraArgs );
		}
	}
}

module TypExt.chart {
	export class Chart {
		static create(config: TypExt.chart.IChartConfig, extraArgs?: any) : Ext.chart.IChart {
			return TypExt.Object.create("Ext.chart.Chart", config, extraArgs );
		}
	}
}

module TypExt.chart.grid {
	export class CircularGrid {
		static create(config: TypExt.chart.grid.ICircularGridConfig, extraArgs?: any) : Ext.chart.grid.ICircularGrid {
			return TypExt.Object.create("Ext.chart.grid.CircularGrid", config, extraArgs );
		}
	}
}

module TypExt.chart.grid {
	export class HorizontalGrid {
		static create(config: TypExt.chart.grid.IHorizontalGridConfig, extraArgs?: any) : Ext.chart.grid.IHorizontalGrid {
			return TypExt.Object.create("Ext.chart.grid.HorizontalGrid", config, extraArgs );
		}
	}
}

module TypExt.chart.grid {
	export class HorizontalGrid3D {
		static create(config: TypExt.chart.grid.IHorizontalGrid3DConfig, extraArgs?: any) : Ext.chart.grid.IHorizontalGrid3D {
			return TypExt.Object.create("Ext.chart.grid.HorizontalGrid3D", config, extraArgs );
		}
	}
}

module TypExt.chart.grid {
	export class RadialGrid {
		static create(config: TypExt.chart.grid.IRadialGridConfig, extraArgs?: any) : Ext.chart.grid.IRadialGrid {
			return TypExt.Object.create("Ext.chart.grid.RadialGrid", config, extraArgs );
		}
	}
}

module TypExt.chart.grid {
	export class VerticalGrid {
		static create(config: TypExt.chart.grid.IVerticalGridConfig, extraArgs?: any) : Ext.chart.grid.IVerticalGrid {
			return TypExt.Object.create("Ext.chart.grid.VerticalGrid", config, extraArgs );
		}
	}
}

module TypExt.chart.grid {
	export class VerticalGrid3D {
		static create(config: TypExt.chart.grid.IVerticalGrid3DConfig, extraArgs?: any) : Ext.chart.grid.IVerticalGrid3D {
			return TypExt.Object.create("Ext.chart.grid.VerticalGrid3D", config, extraArgs );
		}
	}
}

module TypExt.chart.interactions {
	export class Abstract {
		static create(config: TypExt.chart.interactions.IAbstractConfig, extraArgs?: any) : Ext.chart.interactions.IAbstract {
			return TypExt.Object.create("Ext.chart.interactions.Abstract", config, extraArgs );
		}
	}
}

module TypExt.chart.interactions {
	export class Crosshair {
		static create(config: TypExt.chart.interactions.ICrosshairConfig, extraArgs?: any) : Ext.chart.interactions.ICrosshair {
			return TypExt.Object.create("Ext.chart.interactions.Crosshair", config, extraArgs );
		}
	}
}

module TypExt.chart.interactions {
	export class CrossZoom {
		static create(config: TypExt.chart.interactions.ICrossZoomConfig, extraArgs?: any) : Ext.chart.interactions.ICrossZoom {
			return TypExt.Object.create("Ext.chart.interactions.CrossZoom", config, extraArgs );
		}
	}
}

module TypExt.chart.interactions {
	export class ItemHighlight {
		static create(config: TypExt.chart.interactions.IItemHighlightConfig, extraArgs?: any) : Ext.chart.interactions.IItemHighlight {
			return TypExt.Object.create("Ext.chart.interactions.ItemHighlight", config, extraArgs );
		}
	}
}

module TypExt.chart.interactions {
	export class ItemInfo {
		static create(config: TypExt.chart.interactions.IItemInfoConfig, extraArgs?: any) : Ext.chart.interactions.IItemInfo {
			return TypExt.Object.create("Ext.chart.interactions.ItemInfo", config, extraArgs );
		}
	}
}

module TypExt.chart.interactions {
	export class PanZoom {
		static create(config: TypExt.chart.interactions.IPanZoomConfig, extraArgs?: any) : Ext.chart.interactions.IPanZoom {
			return TypExt.Object.create("Ext.chart.interactions.PanZoom", config, extraArgs );
		}
	}
}

module TypExt.chart.interactions {
	export class Rotate {
		static create(config: TypExt.chart.interactions.IRotateConfig, extraArgs?: any) : Ext.chart.interactions.IRotate {
			return TypExt.Object.create("Ext.chart.interactions.Rotate", config, extraArgs );
		}
	}
}

module TypExt.chart.interactions {
	export class RotatePie3D {
		static create(config: TypExt.chart.interactions.IRotatePie3DConfig, extraArgs?: any) : Ext.chart.interactions.IRotatePie3D {
			return TypExt.Object.create("Ext.chart.interactions.RotatePie3D", config, extraArgs );
		}
	}
}

module TypExt.chart.label {
	export class Callout {
		static create(config: TypExt.chart.label.ICalloutConfig, extraArgs?: any) : Ext.chart.label.ICallout {
			return TypExt.Object.create("Ext.chart.label.Callout", config, extraArgs );
		}
	}
}

module TypExt.chart.label {
	export class Label {
		static create(config: TypExt.chart.label.ILabelConfig, extraArgs?: any) : Ext.chart.label.ILabel {
			return TypExt.Object.create("Ext.chart.label.Label", config, extraArgs );
		}
	}
}

module TypExt.chart {
	export class Legend {
		static create(config: TypExt.chart.ILegendConfig, extraArgs?: any) : Ext.chart.ILegend {
			return TypExt.Object.create("Ext.chart.Legend", config, extraArgs );
		}
	}
}

module TypExt.chart {
	export class LegendBase {
		static create(config: TypExt.chart.ILegendBaseConfig, extraArgs?: any) : Ext.chart.ILegendBase {
			return TypExt.Object.create("Ext.chart.LegendBase", config, extraArgs );
		}
	}
}

module TypExt.chart {
	export class MarkerHolder {
		static create(config: TypExt.chart.IMarkerHolderConfig, extraArgs?: any) : Ext.chart.IMarkerHolder {
			return TypExt.Object.create("Ext.chart.MarkerHolder", config, extraArgs );
		}
	}
}

module TypExt.chart {
	export class Markers {
		static create(config: TypExt.chart.IMarkersConfig, extraArgs?: any) : Ext.chart.IMarkers {
			return TypExt.Object.create("Ext.chart.Markers", config, extraArgs );
		}
	}
}

module TypExt.chart.plugin {
	export class ItemEvents {
		static create(config: TypExt.chart.plugin.IItemEventsConfig, extraArgs?: any) : Ext.chart.plugin.IItemEvents {
			return TypExt.Object.create("Ext.chart.plugin.ItemEvents", config, extraArgs );
		}
	}
}

module TypExt.chart {
	export class PolarChart {
		static create(config: TypExt.chart.IPolarChartConfig, extraArgs?: any) : Ext.chart.IPolarChart {
			return TypExt.Object.create("Ext.chart.PolarChart", config, extraArgs );
		}
	}
}

module TypExt.chart.series {
	export class Area {
		static create(config: TypExt.chart.series.IAreaConfig, extraArgs?: any) : Ext.chart.series.IArea {
			return TypExt.Object.create("Ext.chart.series.Area", config, extraArgs );
		}
	}
}

module TypExt.chart.series {
	export class Bar {
		static create(config: TypExt.chart.series.IBarConfig, extraArgs?: any) : Ext.chart.series.IBar {
			return TypExt.Object.create("Ext.chart.series.Bar", config, extraArgs );
		}
	}
}

module TypExt.chart.series {
	export class Bar3D {
		static create(config: TypExt.chart.series.IBar3DConfig, extraArgs?: any) : Ext.chart.series.IBar3D {
			return TypExt.Object.create("Ext.chart.series.Bar3D", config, extraArgs );
		}
	}
}

module TypExt.chart.series {
	export class CandleStick {
		static create(config: TypExt.chart.series.ICandleStickConfig, extraArgs?: any) : Ext.chart.series.ICandleStick {
			return TypExt.Object.create("Ext.chart.series.CandleStick", config, extraArgs );
		}
	}
}

module TypExt.chart.series {
	export class Cartesian {
		static create(config: TypExt.chart.series.ICartesianConfig, extraArgs?: any) : Ext.chart.series.ICartesian {
			return TypExt.Object.create("Ext.chart.series.Cartesian", config, extraArgs );
		}
	}
}

module TypExt.chart.series {
	export class Gauge {
		static create(config: TypExt.chart.series.IGaugeConfig, extraArgs?: any) : Ext.chart.series.IGauge {
			return TypExt.Object.create("Ext.chart.series.Gauge", config, extraArgs );
		}
	}
}

module TypExt.chart.series {
	export class Line {
		static create(config: TypExt.chart.series.ILineConfig, extraArgs?: any) : Ext.chart.series.ILine {
			return TypExt.Object.create("Ext.chart.series.Line", config, extraArgs );
		}
	}
}

module TypExt.chart.series {
	export class Pie {
		static create(config: TypExt.chart.series.IPieConfig, extraArgs?: any) : Ext.chart.series.IPie {
			return TypExt.Object.create("Ext.chart.series.Pie", config, extraArgs );
		}
	}
}

module TypExt.chart.series {
	export class Pie3D {
		static create(config: TypExt.chart.series.IPie3DConfig, extraArgs?: any) : Ext.chart.series.IPie3D {
			return TypExt.Object.create("Ext.chart.series.Pie3D", config, extraArgs );
		}
	}
}

module TypExt.chart.series {
	export class Polar {
		static create(config: TypExt.chart.series.IPolarConfig, extraArgs?: any) : Ext.chart.series.IPolar {
			return TypExt.Object.create("Ext.chart.series.Polar", config, extraArgs );
		}
	}
}

module TypExt.chart.series {
	export class Radar {
		static create(config: TypExt.chart.series.IRadarConfig, extraArgs?: any) : Ext.chart.series.IRadar {
			return TypExt.Object.create("Ext.chart.series.Radar", config, extraArgs );
		}
	}
}

module TypExt.chart.series {
	export class Scatter {
		static create(config: TypExt.chart.series.IScatterConfig, extraArgs?: any) : Ext.chart.series.IScatter {
			return TypExt.Object.create("Ext.chart.series.Scatter", config, extraArgs );
		}
	}
}

module TypExt.chart.series {
	export class Series {
		static create(config: TypExt.chart.series.ISeriesConfig, extraArgs?: any) : Ext.chart.series.ISeries {
			return TypExt.Object.create("Ext.chart.series.Series", config, extraArgs );
		}
	}
}

module TypExt.chart.series.sprite {
	export class Aggregative {
		static create(config: TypExt.chart.series.sprite.IAggregativeConfig, extraArgs?: any) : Ext.chart.series.sprite.IAggregative {
			return TypExt.Object.create("Ext.chart.series.sprite.Aggregative", config, extraArgs );
		}
	}
}

module TypExt.chart.series.sprite {
	export class Area {
		static create(config: TypExt.chart.series.sprite.IAreaConfig, extraArgs?: any) : Ext.chart.series.sprite.IArea {
			return TypExt.Object.create("Ext.chart.series.sprite.Area", config, extraArgs );
		}
	}
}

module TypExt.chart.series.sprite {
	export class Bar {
		static create(config: TypExt.chart.series.sprite.IBarConfig, extraArgs?: any) : Ext.chart.series.sprite.IBar {
			return TypExt.Object.create("Ext.chart.series.sprite.Bar", config, extraArgs );
		}
	}
}

module TypExt.chart.series.sprite {
	export class Bar3D {
		static create(config: TypExt.chart.series.sprite.IBar3DConfig, extraArgs?: any) : Ext.chart.series.sprite.IBar3D {
			return TypExt.Object.create("Ext.chart.series.sprite.Bar3D", config, extraArgs );
		}
	}
}

module TypExt.chart.series.sprite {
	export class Box {
		static create(config: TypExt.chart.series.sprite.IBoxConfig, extraArgs?: any) : Ext.chart.series.sprite.IBox {
			return TypExt.Object.create("Ext.chart.series.sprite.Box", config, extraArgs );
		}
	}
}

module TypExt.chart.series.sprite {
	export class CandleStick {
		static create(config: TypExt.chart.series.sprite.ICandleStickConfig, extraArgs?: any) : Ext.chart.series.sprite.ICandleStick {
			return TypExt.Object.create("Ext.chart.series.sprite.CandleStick", config, extraArgs );
		}
	}
}

module TypExt.chart.series.sprite {
	export class Cartesian {
		static create(config: TypExt.chart.series.sprite.ICartesianConfig, extraArgs?: any) : Ext.chart.series.sprite.ICartesian {
			return TypExt.Object.create("Ext.chart.series.sprite.Cartesian", config, extraArgs );
		}
	}
}

module TypExt.chart.series.sprite {
	export class Line {
		static create(config: TypExt.chart.series.sprite.ILineConfig, extraArgs?: any) : Ext.chart.series.sprite.ILine {
			return TypExt.Object.create("Ext.chart.series.sprite.Line", config, extraArgs );
		}
	}
}

module TypExt.chart.series.sprite {
	export class Pie3DPart {
		static create(config: TypExt.chart.series.sprite.IPie3DPartConfig, extraArgs?: any) : Ext.chart.series.sprite.IPie3DPart {
			return TypExt.Object.create("Ext.chart.series.sprite.Pie3DPart", config, extraArgs );
		}
	}
}

module TypExt.chart.series.sprite {
	export class PieSlice {
		static create(config: TypExt.chart.series.sprite.IPieSliceConfig, extraArgs?: any) : Ext.chart.series.sprite.IPieSlice {
			return TypExt.Object.create("Ext.chart.series.sprite.PieSlice", config, extraArgs );
		}
	}
}

module TypExt.chart.series.sprite {
	export class Polar {
		static create(config: TypExt.chart.series.sprite.IPolarConfig, extraArgs?: any) : Ext.chart.series.sprite.IPolar {
			return TypExt.Object.create("Ext.chart.series.sprite.Polar", config, extraArgs );
		}
	}
}

module TypExt.chart.series.sprite {
	export class Radar {
		static create(config: TypExt.chart.series.sprite.IRadarConfig, extraArgs?: any) : Ext.chart.series.sprite.IRadar {
			return TypExt.Object.create("Ext.chart.series.sprite.Radar", config, extraArgs );
		}
	}
}

module TypExt.chart.series.sprite {
	export class Scatter {
		static create(config: TypExt.chart.series.sprite.IScatterConfig, extraArgs?: any) : Ext.chart.series.sprite.IScatter {
			return TypExt.Object.create("Ext.chart.series.sprite.Scatter", config, extraArgs );
		}
	}
}

module TypExt.chart.series.sprite {
	export class StackedCartesian {
		static create(config: TypExt.chart.series.sprite.IStackedCartesianConfig, extraArgs?: any) : Ext.chart.series.sprite.IStackedCartesian {
			return TypExt.Object.create("Ext.chart.series.sprite.StackedCartesian", config, extraArgs );
		}
	}
}

module TypExt.chart.series {
	export class StackedCartesian {
		static create(config: TypExt.chart.series.IStackedCartesianConfig, extraArgs?: any) : Ext.chart.series.IStackedCartesian {
			return TypExt.Object.create("Ext.chart.series.StackedCartesian", config, extraArgs );
		}
	}
}

module TypExt.chart {
	export class SpaceFillingChart {
		static create(config: TypExt.chart.ISpaceFillingChartConfig, extraArgs?: any) : Ext.chart.ISpaceFillingChart {
			return TypExt.Object.create("Ext.chart.SpaceFillingChart", config, extraArgs );
		}
	}
}

module TypExt.chart.theme {
	export class Base {
		static create(config: TypExt.chart.theme.IBaseConfig, extraArgs?: any) : Ext.chart.theme.IBase {
			return TypExt.Object.create("Ext.chart.theme.Base", config, extraArgs );
		}
	}
}

module TypExt.chart.theme {
	export class Default {
		static create(config: TypExt.chart.theme.IDefaultConfig, extraArgs?: any) : Ext.chart.theme.IDefault {
			return TypExt.Object.create("Ext.chart.theme.Default", config, extraArgs );
		}
	}
}

module TypExt.chart {
	export class TipSurface {
		static create(config: TypExt.chart.ITipSurfaceConfig, extraArgs?: any) : Ext.chart.ITipSurface {
			return TypExt.Object.create("Ext.chart.TipSurface", config, extraArgs );
		}
	}
}

module TypExt {
	export class Class {
		static create(config: TypExt.IClassConfig, extraArgs?: any) : Ext.IClass {
			return TypExt.Object.create("Ext.Class", config, extraArgs );
		}
	}
}

module TypExt {
	export class ClassManager {
		static create(config: TypExt.IClassManagerConfig, extraArgs?: any) : Ext.IClassManager {
			return TypExt.Object.create("Ext.ClassManager", config, extraArgs );
		}
	}
}

module TypExt {
	export class Component {
		static create(config: TypExt.IComponentConfig, extraArgs?: any) : Ext.IComponent {
			return TypExt.Object.create("Ext.Component", config, extraArgs );
		}
	}
}

module TypExt {
	export class AbstractComponent {
		static create(config: TypExt.IAbstractComponentConfig, extraArgs?: any) : Ext.IAbstractComponent {
			return TypExt.Object.create("Ext.AbstractComponent", config, extraArgs );
		}
	}
}

module TypExt {
	export class ComponentLoader {
		static create(config: TypExt.IComponentLoaderConfig, extraArgs?: any) : Ext.IComponentLoader {
			return TypExt.Object.create("Ext.ComponentLoader", config, extraArgs );
		}
	}
}

module TypExt {
	export class ComponentManager {
		static create(config: TypExt.IComponentManagerConfig, extraArgs?: any) : Ext.IComponentManager {
			return TypExt.Object.create("Ext.ComponentManager", config, extraArgs );
		}
	}
}

module TypExt {
	export class ComponentMgr {
		static create(config: TypExt.IComponentMgrConfig, extraArgs?: any) : Ext.IComponentMgr {
			return TypExt.Object.create("Ext.ComponentMgr", config, extraArgs );
		}
	}
}

module TypExt {
	export class ComponentQuery {
		static create(config: TypExt.IComponentQueryConfig, extraArgs?: any) : Ext.IComponentQuery {
			return TypExt.Object.create("Ext.ComponentQuery", config, extraArgs );
		}
	}
}

module TypExt {
	export class Config {
		static create(config: TypExt.IConfigConfig, extraArgs?: any) : Ext.IConfig {
			return TypExt.Object.create("Ext.Config", config, extraArgs );
		}
	}
}

module TypExt {
	export class Configurator {
		static create(config: TypExt.IConfiguratorConfig, extraArgs?: any) : Ext.IConfigurator {
			return TypExt.Object.create("Ext.Configurator", config, extraArgs );
		}
	}
}

module TypExt.container {
	export class ButtonGroup {
		static create(config: TypExt.container.IButtonGroupConfig, extraArgs?: any) : Ext.container.IButtonGroup {
			return TypExt.Object.create("Ext.container.ButtonGroup", config, extraArgs );
		}
	}
}

module TypExt {
	export class ButtonGroup {
		static create(config: TypExt.IButtonGroupConfig, extraArgs?: any) : Ext.IButtonGroup {
			return TypExt.Object.create("Ext.ButtonGroup", config, extraArgs );
		}
	}
}

module TypExt.container {
	export class Container {
		static create(config: TypExt.container.IContainerConfig, extraArgs?: any) : Ext.container.IContainer {
			return TypExt.Object.create("Ext.container.Container", config, extraArgs );
		}
	}
}

module TypExt {
	export class Container {
		static create(config: TypExt.IContainerConfig, extraArgs?: any) : Ext.IContainer {
			return TypExt.Object.create("Ext.Container", config, extraArgs );
		}
	}
}

module TypExt {
	export class AbstractContainer {
		static create(config: TypExt.IAbstractContainerConfig, extraArgs?: any) : Ext.IAbstractContainer {
			return TypExt.Object.create("Ext.AbstractContainer", config, extraArgs );
		}
	}
}

module TypExt.container {
	export class DockingContainer {
		static create(config: TypExt.container.IDockingContainerConfig, extraArgs?: any) : Ext.container.IDockingContainer {
			return TypExt.Object.create("Ext.container.DockingContainer", config, extraArgs );
		}
	}
}

module TypExt.container {
	export class Monitor {
		static create(config: TypExt.container.IMonitorConfig, extraArgs?: any) : Ext.container.IMonitor {
			return TypExt.Object.create("Ext.container.Monitor", config, extraArgs );
		}
	}
}

module TypExt.container {
	export class Viewport {
		static create(config: TypExt.container.IViewportConfig, extraArgs?: any) : Ext.container.IViewport {
			return TypExt.Object.create("Ext.container.Viewport", config, extraArgs );
		}
	}
}

module TypExt {
	export class Viewport {
		static create(config: TypExt.IViewportConfig, extraArgs?: any) : Ext.IViewport {
			return TypExt.Object.create("Ext.Viewport", config, extraArgs );
		}
	}
}

module TypExt.dashboard {
	export class Column {
		static create(config: TypExt.dashboard.IColumnConfig, extraArgs?: any) : Ext.dashboard.IColumn {
			return TypExt.Object.create("Ext.dashboard.Column", config, extraArgs );
		}
	}
}

module TypExt.dashboard {
	export class Dashboard {
		static create(config: TypExt.dashboard.IDashboardConfig, extraArgs?: any) : Ext.dashboard.IDashboard {
			return TypExt.Object.create("Ext.dashboard.Dashboard", config, extraArgs );
		}
	}
}

module TypExt.dashboard {
	export class DropZone {
		static create(config: TypExt.dashboard.IDropZoneConfig, extraArgs?: any) : Ext.dashboard.IDropZone {
			return TypExt.Object.create("Ext.dashboard.DropZone", config, extraArgs );
		}
	}
}

module TypExt.dashboard {
	export class Panel {
		static create(config: TypExt.dashboard.IPanelConfig, extraArgs?: any) : Ext.dashboard.IPanel {
			return TypExt.Object.create("Ext.dashboard.Panel", config, extraArgs );
		}
	}
}

module TypExt.dashboard {
	export class Part {
		static create(config: TypExt.dashboard.IPartConfig, extraArgs?: any) : Ext.dashboard.IPart {
			return TypExt.Object.create("Ext.dashboard.Part", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class AbstractStore {
		static create(config: TypExt.data.IAbstractStoreConfig, extraArgs?: any) : Ext.data.IAbstractStore {
			return TypExt.Object.create("Ext.data.AbstractStore", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class ArrayStore {
		static create(config: TypExt.data.IArrayStoreConfig, extraArgs?: any) : Ext.data.IArrayStore {
			return TypExt.Object.create("Ext.data.ArrayStore", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class SimpleStore {
		static create(config: TypExt.data.ISimpleStoreConfig, extraArgs?: any) : Ext.data.ISimpleStore {
			return TypExt.Object.create("Ext.data.SimpleStore", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class Batch {
		static create(config: TypExt.data.IBatchConfig, extraArgs?: any) : Ext.data.IBatch {
			return TypExt.Object.create("Ext.data.Batch", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class BufferedStore {
		static create(config: TypExt.data.IBufferedStoreConfig, extraArgs?: any) : Ext.data.IBufferedStore {
			return TypExt.Object.create("Ext.data.BufferedStore", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class ChainedStore {
		static create(config: TypExt.data.IChainedStoreConfig, extraArgs?: any) : Ext.data.IChainedStore {
			return TypExt.Object.create("Ext.data.ChainedStore", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class Connection {
		static create(config: TypExt.data.IConnectionConfig, extraArgs?: any) : Ext.data.IConnection {
			return TypExt.Object.create("Ext.data.Connection", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class DirectStore {
		static create(config: TypExt.data.IDirectStoreConfig, extraArgs?: any) : Ext.data.IDirectStore {
			return TypExt.Object.create("Ext.data.DirectStore", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class Error {
		static create(config: TypExt.data.IErrorConfig, extraArgs?: any) : Ext.data.IError {
			return TypExt.Object.create("Ext.data.Error", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class ErrorCollection {
		static create(config: TypExt.data.IErrorCollectionConfig, extraArgs?: any) : Ext.data.IErrorCollection {
			return TypExt.Object.create("Ext.data.ErrorCollection", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class Errors {
		static create(config: TypExt.data.IErrorsConfig, extraArgs?: any) : Ext.data.IErrors {
			return TypExt.Object.create("Ext.data.Errors", config, extraArgs );
		}
	}
}

module TypExt.data.field {
	export class Boolean {
		static create(config: TypExt.data.field.IBooleanConfig, extraArgs?: any) : Ext.data.field.IBoolean {
			return TypExt.Object.create("Ext.data.field.Boolean", config, extraArgs );
		}
	}
}

module TypExt.data.field {
	export class Date {
		static create(config: TypExt.data.field.IDateConfig, extraArgs?: any) : Ext.data.field.IDate {
			return TypExt.Object.create("Ext.data.field.Date", config, extraArgs );
		}
	}
}

module TypExt.data.field {
	export class Field {
		static create(config: TypExt.data.field.IFieldConfig, extraArgs?: any) : Ext.data.field.IField {
			return TypExt.Object.create("Ext.data.field.Field", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class Field {
		static create(config: TypExt.data.IFieldConfig, extraArgs?: any) : Ext.data.IField {
			return TypExt.Object.create("Ext.data.Field", config, extraArgs );
		}
	}
}

module TypExt.data.field {
	export class Integer {
		static create(config: TypExt.data.field.IIntegerConfig, extraArgs?: any) : Ext.data.field.IInteger {
			return TypExt.Object.create("Ext.data.field.Integer", config, extraArgs );
		}
	}
}

module TypExt.data.field {
	export class Number {
		static create(config: TypExt.data.field.INumberConfig, extraArgs?: any) : Ext.data.field.INumber {
			return TypExt.Object.create("Ext.data.field.Number", config, extraArgs );
		}
	}
}

module TypExt.data.field {
	export class String {
		static create(config: TypExt.data.field.IStringConfig, extraArgs?: any) : Ext.data.field.IString {
			return TypExt.Object.create("Ext.data.field.String", config, extraArgs );
		}
	}
}

module TypExt.data.flash {
	export class BinaryXhr {
		static create(config: TypExt.data.flash.IBinaryXhrConfig, extraArgs?: any) : Ext.data.flash.IBinaryXhr {
			return TypExt.Object.create("Ext.data.flash.BinaryXhr", config, extraArgs );
		}
	}
}

module TypExt.data.identifier {
	export class Generator {
		static create(config: TypExt.data.identifier.IGeneratorConfig, extraArgs?: any) : Ext.data.identifier.IGenerator {
			return TypExt.Object.create("Ext.data.identifier.Generator", config, extraArgs );
		}
	}
}

module TypExt.data.identifier {
	export class Negative {
		static create(config: TypExt.data.identifier.INegativeConfig, extraArgs?: any) : Ext.data.identifier.INegative {
			return TypExt.Object.create("Ext.data.identifier.Negative", config, extraArgs );
		}
	}
}

module TypExt.data.identifier {
	export class Sequential {
		static create(config: TypExt.data.identifier.ISequentialConfig, extraArgs?: any) : Ext.data.identifier.ISequential {
			return TypExt.Object.create("Ext.data.identifier.Sequential", config, extraArgs );
		}
	}
}

module TypExt.data.identifier {
	export class Uuid {
		static create(config: TypExt.data.identifier.IUuidConfig, extraArgs?: any) : Ext.data.identifier.IUuid {
			return TypExt.Object.create("Ext.data.identifier.Uuid", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class JsonP {
		static create(config: TypExt.data.IJsonPConfig, extraArgs?: any) : Ext.data.IJsonP {
			return TypExt.Object.create("Ext.data.JsonP", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class JsonPStore {
		static create(config: TypExt.data.IJsonPStoreConfig, extraArgs?: any) : Ext.data.IJsonPStore {
			return TypExt.Object.create("Ext.data.JsonPStore", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class JsonStore {
		static create(config: TypExt.data.IJsonStoreConfig, extraArgs?: any) : Ext.data.IJsonStore {
			return TypExt.Object.create("Ext.data.JsonStore", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class LocalStore {
		static create(config: TypExt.data.ILocalStoreConfig, extraArgs?: any) : Ext.data.ILocalStore {
			return TypExt.Object.create("Ext.data.LocalStore", config, extraArgs );
		}
	}
}

module TypExt.data.matrix {
	export class Matrix {
		static create(config: TypExt.data.matrix.IMatrixConfig, extraArgs?: any) : Ext.data.matrix.IMatrix {
			return TypExt.Object.create("Ext.data.matrix.Matrix", config, extraArgs );
		}
	}
}

module TypExt.data.matrix {
	export class Side {
		static create(config: TypExt.data.matrix.ISideConfig, extraArgs?: any) : Ext.data.matrix.ISide {
			return TypExt.Object.create("Ext.data.matrix.Side", config, extraArgs );
		}
	}
}

module TypExt.data.matrix {
	export class Slice {
		static create(config: TypExt.data.matrix.ISliceConfig, extraArgs?: any) : Ext.data.matrix.ISlice {
			return TypExt.Object.create("Ext.data.matrix.Slice", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class Model {
		static create(config: TypExt.data.IModelConfig, extraArgs?: any) : Ext.data.IModel {
			return TypExt.Object.create("Ext.data.Model", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class Record {
		static create(config: TypExt.data.IRecordConfig, extraArgs?: any) : Ext.data.IRecord {
			return TypExt.Object.create("Ext.data.Record", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class ModelManager {
		static create(config: TypExt.data.IModelManagerConfig, extraArgs?: any) : Ext.data.IModelManager {
			return TypExt.Object.create("Ext.data.ModelManager", config, extraArgs );
		}
	}
}

module TypExt {
	export class ModelMgr {
		static create(config: TypExt.IModelMgrConfig, extraArgs?: any) : Ext.IModelMgr {
			return TypExt.Object.create("Ext.ModelMgr", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class NodeInterface {
		static create(config: TypExt.data.INodeInterfaceConfig, extraArgs?: any) : Ext.data.INodeInterface {
			return TypExt.Object.create("Ext.data.NodeInterface", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class NodeStore {
		static create(config: TypExt.data.INodeStoreConfig, extraArgs?: any) : Ext.data.INodeStore {
			return TypExt.Object.create("Ext.data.NodeStore", config, extraArgs );
		}
	}
}

module TypExt.data.operation {
	export class Create {
		static create(config: TypExt.data.operation.ICreateConfig, extraArgs?: any) : Ext.data.operation.ICreate {
			return TypExt.Object.create("Ext.data.operation.Create", config, extraArgs );
		}
	}
}

module TypExt.data.operation {
	export class Destroy {
		static create(config: TypExt.data.operation.IDestroyConfig, extraArgs?: any) : Ext.data.operation.IDestroy {
			return TypExt.Object.create("Ext.data.operation.Destroy", config, extraArgs );
		}
	}
}

module TypExt.data.operation {
	export class Operation {
		static create(config: TypExt.data.operation.IOperationConfig, extraArgs?: any) : Ext.data.operation.IOperation {
			return TypExt.Object.create("Ext.data.operation.Operation", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class Operation {
		static create(config: TypExt.data.IOperationConfig, extraArgs?: any) : Ext.data.IOperation {
			return TypExt.Object.create("Ext.data.Operation", config, extraArgs );
		}
	}
}

module TypExt.data.operation {
	export class Read {
		static create(config: TypExt.data.operation.IReadConfig, extraArgs?: any) : Ext.data.operation.IRead {
			return TypExt.Object.create("Ext.data.operation.Read", config, extraArgs );
		}
	}
}

module TypExt.data.operation {
	export class Update {
		static create(config: TypExt.data.operation.IUpdateConfig, extraArgs?: any) : Ext.data.operation.IUpdate {
			return TypExt.Object.create("Ext.data.operation.Update", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class PageMap {
		static create(config: TypExt.data.IPageMapConfig, extraArgs?: any) : Ext.data.IPageMap {
			return TypExt.Object.create("Ext.data.PageMap", config, extraArgs );
		}
	}
}

module TypExt.data.proxy {
	export class Ajax {
		static create(config: TypExt.data.proxy.IAjaxConfig, extraArgs?: any) : Ext.data.proxy.IAjax {
			return TypExt.Object.create("Ext.data.proxy.Ajax", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class HttpProxy {
		static create(config: TypExt.data.IHttpProxyConfig, extraArgs?: any) : Ext.data.IHttpProxy {
			return TypExt.Object.create("Ext.data.HttpProxy", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class AjaxProxy {
		static create(config: TypExt.data.IAjaxProxyConfig, extraArgs?: any) : Ext.data.IAjaxProxy {
			return TypExt.Object.create("Ext.data.AjaxProxy", config, extraArgs );
		}
	}
}

module TypExt.data.proxy {
	export class Client {
		static create(config: TypExt.data.proxy.IClientConfig, extraArgs?: any) : Ext.data.proxy.IClient {
			return TypExt.Object.create("Ext.data.proxy.Client", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class ClientProxy {
		static create(config: TypExt.data.IClientProxyConfig, extraArgs?: any) : Ext.data.IClientProxy {
			return TypExt.Object.create("Ext.data.ClientProxy", config, extraArgs );
		}
	}
}

module TypExt.data.proxy {
	export class Direct {
		static create(config: TypExt.data.proxy.IDirectConfig, extraArgs?: any) : Ext.data.proxy.IDirect {
			return TypExt.Object.create("Ext.data.proxy.Direct", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class DirectProxy {
		static create(config: TypExt.data.IDirectProxyConfig, extraArgs?: any) : Ext.data.IDirectProxy {
			return TypExt.Object.create("Ext.data.DirectProxy", config, extraArgs );
		}
	}
}

module TypExt.data.proxy {
	export class JsonP {
		static create(config: TypExt.data.proxy.IJsonPConfig, extraArgs?: any) : Ext.data.proxy.IJsonP {
			return TypExt.Object.create("Ext.data.proxy.JsonP", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class ScriptTagProxy {
		static create(config: TypExt.data.IScriptTagProxyConfig, extraArgs?: any) : Ext.data.IScriptTagProxy {
			return TypExt.Object.create("Ext.data.ScriptTagProxy", config, extraArgs );
		}
	}
}

module TypExt.data.proxy {
	export class LocalStorage {
		static create(config: TypExt.data.proxy.ILocalStorageConfig, extraArgs?: any) : Ext.data.proxy.ILocalStorage {
			return TypExt.Object.create("Ext.data.proxy.LocalStorage", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class LocalStorageProxy {
		static create(config: TypExt.data.ILocalStorageProxyConfig, extraArgs?: any) : Ext.data.ILocalStorageProxy {
			return TypExt.Object.create("Ext.data.LocalStorageProxy", config, extraArgs );
		}
	}
}

module TypExt.data.proxy {
	export class Memory {
		static create(config: TypExt.data.proxy.IMemoryConfig, extraArgs?: any) : Ext.data.proxy.IMemory {
			return TypExt.Object.create("Ext.data.proxy.Memory", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class MemoryProxy {
		static create(config: TypExt.data.IMemoryProxyConfig, extraArgs?: any) : Ext.data.IMemoryProxy {
			return TypExt.Object.create("Ext.data.MemoryProxy", config, extraArgs );
		}
	}
}

module TypExt.data.proxy {
	export class Proxy {
		static create(config: TypExt.data.proxy.IProxyConfig, extraArgs?: any) : Ext.data.proxy.IProxy {
			return TypExt.Object.create("Ext.data.proxy.Proxy", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class DataProxy {
		static create(config: TypExt.data.IDataProxyConfig, extraArgs?: any) : Ext.data.IDataProxy {
			return TypExt.Object.create("Ext.data.DataProxy", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class Proxy {
		static create(config: TypExt.data.IProxyConfig, extraArgs?: any) : Ext.data.IProxy {
			return TypExt.Object.create("Ext.data.Proxy", config, extraArgs );
		}
	}
}

module TypExt.data.proxy {
	export class Rest {
		static create(config: TypExt.data.proxy.IRestConfig, extraArgs?: any) : Ext.data.proxy.IRest {
			return TypExt.Object.create("Ext.data.proxy.Rest", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class RestProxy {
		static create(config: TypExt.data.IRestProxyConfig, extraArgs?: any) : Ext.data.IRestProxy {
			return TypExt.Object.create("Ext.data.RestProxy", config, extraArgs );
		}
	}
}

module TypExt.data.proxy {
	export class Server {
		static create(config: TypExt.data.proxy.IServerConfig, extraArgs?: any) : Ext.data.proxy.IServer {
			return TypExt.Object.create("Ext.data.proxy.Server", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class ServerProxy {
		static create(config: TypExt.data.IServerProxyConfig, extraArgs?: any) : Ext.data.IServerProxy {
			return TypExt.Object.create("Ext.data.ServerProxy", config, extraArgs );
		}
	}
}

module TypExt.data.proxy {
	export class SessionStorage {
		static create(config: TypExt.data.proxy.ISessionStorageConfig, extraArgs?: any) : Ext.data.proxy.ISessionStorage {
			return TypExt.Object.create("Ext.data.proxy.SessionStorage", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class SessionStorageProxy {
		static create(config: TypExt.data.ISessionStorageProxyConfig, extraArgs?: any) : Ext.data.ISessionStorageProxy {
			return TypExt.Object.create("Ext.data.SessionStorageProxy", config, extraArgs );
		}
	}
}

module TypExt.data.proxy {
	export class Sql {
		static create(config: TypExt.data.proxy.ISqlConfig, extraArgs?: any) : Ext.data.proxy.ISql {
			return TypExt.Object.create("Ext.data.proxy.Sql", config, extraArgs );
		}
	}
}

module TypExt.data.proxy {
	export class WebStorage {
		static create(config: TypExt.data.proxy.IWebStorageConfig, extraArgs?: any) : Ext.data.proxy.IWebStorage {
			return TypExt.Object.create("Ext.data.proxy.WebStorage", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class WebStorageProxy {
		static create(config: TypExt.data.IWebStorageProxyConfig, extraArgs?: any) : Ext.data.IWebStorageProxy {
			return TypExt.Object.create("Ext.data.WebStorageProxy", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class ProxyStore {
		static create(config: TypExt.data.IProxyStoreConfig, extraArgs?: any) : Ext.data.IProxyStore {
			return TypExt.Object.create("Ext.data.ProxyStore", config, extraArgs );
		}
	}
}

module TypExt.data.reader {
	export class Array {
		static create(config: TypExt.data.reader.IArrayConfig, extraArgs?: any) : Ext.data.reader.IArray {
			return TypExt.Object.create("Ext.data.reader.Array", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class ArrayReader {
		static create(config: TypExt.data.IArrayReaderConfig, extraArgs?: any) : Ext.data.IArrayReader {
			return TypExt.Object.create("Ext.data.ArrayReader", config, extraArgs );
		}
	}
}

module TypExt.data.reader {
	export class Json {
		static create(config: TypExt.data.reader.IJsonConfig, extraArgs?: any) : Ext.data.reader.IJson {
			return TypExt.Object.create("Ext.data.reader.Json", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class JsonReader {
		static create(config: TypExt.data.IJsonReaderConfig, extraArgs?: any) : Ext.data.IJsonReader {
			return TypExt.Object.create("Ext.data.JsonReader", config, extraArgs );
		}
	}
}

module TypExt.data.reader {
	export class Reader {
		static create(config: TypExt.data.reader.IReaderConfig, extraArgs?: any) : Ext.data.reader.IReader {
			return TypExt.Object.create("Ext.data.reader.Reader", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class Reader {
		static create(config: TypExt.data.IReaderConfig, extraArgs?: any) : Ext.data.IReader {
			return TypExt.Object.create("Ext.data.Reader", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class DataReader {
		static create(config: TypExt.data.IDataReaderConfig, extraArgs?: any) : Ext.data.IDataReader {
			return TypExt.Object.create("Ext.data.DataReader", config, extraArgs );
		}
	}
}

module TypExt.data.reader {
	export class Xml {
		static create(config: TypExt.data.reader.IXmlConfig, extraArgs?: any) : Ext.data.reader.IXml {
			return TypExt.Object.create("Ext.data.reader.Xml", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class XmlReader {
		static create(config: TypExt.data.IXmlReaderConfig, extraArgs?: any) : Ext.data.IXmlReader {
			return TypExt.Object.create("Ext.data.XmlReader", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class Request {
		static create(config: TypExt.data.IRequestConfig, extraArgs?: any) : Ext.data.IRequest {
			return TypExt.Object.create("Ext.data.Request", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class ResultSet {
		static create(config: TypExt.data.IResultSetConfig, extraArgs?: any) : Ext.data.IResultSet {
			return TypExt.Object.create("Ext.data.ResultSet", config, extraArgs );
		}
	}
}

module TypExt.data.schema {
	export class Association {
		static create(config: TypExt.data.schema.IAssociationConfig, extraArgs?: any) : Ext.data.schema.IAssociation {
			return TypExt.Object.create("Ext.data.schema.Association", config, extraArgs );
		}
	}
}

module TypExt.data.schema {
	export class ManyToMany {
		static create(config: TypExt.data.schema.IManyToManyConfig, extraArgs?: any) : Ext.data.schema.IManyToMany {
			return TypExt.Object.create("Ext.data.schema.ManyToMany", config, extraArgs );
		}
	}
}

module TypExt.data.schema {
	export class ManyToOne {
		static create(config: TypExt.data.schema.IManyToOneConfig, extraArgs?: any) : Ext.data.schema.IManyToOne {
			return TypExt.Object.create("Ext.data.schema.ManyToOne", config, extraArgs );
		}
	}
}

module TypExt.data.schema {
	export class Namer {
		static create(config: TypExt.data.schema.INamerConfig, extraArgs?: any) : Ext.data.schema.INamer {
			return TypExt.Object.create("Ext.data.schema.Namer", config, extraArgs );
		}
	}
}

module TypExt.data.schema {
	export class OneToOne {
		static create(config: TypExt.data.schema.IOneToOneConfig, extraArgs?: any) : Ext.data.schema.IOneToOne {
			return TypExt.Object.create("Ext.data.schema.OneToOne", config, extraArgs );
		}
	}
}

module TypExt.data.schema {
	export class Role {
		static create(config: TypExt.data.schema.IRoleConfig, extraArgs?: any) : Ext.data.schema.IRole {
			return TypExt.Object.create("Ext.data.schema.Role", config, extraArgs );
		}
	}
}

module TypExt.data.schema {
	export class Schema {
		static create(config: TypExt.data.schema.ISchemaConfig, extraArgs?: any) : Ext.data.schema.ISchema {
			return TypExt.Object.create("Ext.data.schema.Schema", config, extraArgs );
		}
	}
}

module TypExt.data.session {
	export class BatchVisitor {
		static create(config: TypExt.data.session.IBatchVisitorConfig, extraArgs?: any) : Ext.data.session.IBatchVisitor {
			return TypExt.Object.create("Ext.data.session.BatchVisitor", config, extraArgs );
		}
	}
}

module TypExt.data.session {
	export class ChangesVisitor {
		static create(config: TypExt.data.session.IChangesVisitorConfig, extraArgs?: any) : Ext.data.session.IChangesVisitor {
			return TypExt.Object.create("Ext.data.session.ChangesVisitor", config, extraArgs );
		}
	}
}

module TypExt.data.session {
	export class ChildChangesVisitor {
		static create(config: TypExt.data.session.IChildChangesVisitorConfig, extraArgs?: any) : Ext.data.session.IChildChangesVisitor {
			return TypExt.Object.create("Ext.data.session.ChildChangesVisitor", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class Session {
		static create(config: TypExt.data.ISessionConfig, extraArgs?: any) : Ext.data.ISession {
			return TypExt.Object.create("Ext.data.Session", config, extraArgs );
		}
	}
}

module TypExt.data.soap {
	export class Proxy {
		static create(config: TypExt.data.soap.IProxyConfig, extraArgs?: any) : Ext.data.soap.IProxy {
			return TypExt.Object.create("Ext.data.soap.Proxy", config, extraArgs );
		}
	}
}

module TypExt.data.soap {
	export class Reader {
		static create(config: TypExt.data.soap.IReaderConfig, extraArgs?: any) : Ext.data.soap.IReader {
			return TypExt.Object.create("Ext.data.soap.Reader", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class SortTypes {
		static create(config: TypExt.data.ISortTypesConfig, extraArgs?: any) : Ext.data.ISortTypes {
			return TypExt.Object.create("Ext.data.SortTypes", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class Store {
		static create(config: TypExt.data.IStoreConfig, extraArgs?: any) : Ext.data.IStore {
			return TypExt.Object.create("Ext.data.Store", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class StoreManager {
		static create(config: TypExt.data.IStoreManagerConfig, extraArgs?: any) : Ext.data.IStoreManager {
			return TypExt.Object.create("Ext.data.StoreManager", config, extraArgs );
		}
	}
}

module TypExt {
	export class StoreMgr {
		static create(config: TypExt.IStoreMgrConfig, extraArgs?: any) : Ext.IStoreMgr {
			return TypExt.Object.create("Ext.StoreMgr", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class StoreMgr {
		static create(config: TypExt.data.IStoreMgrConfig, extraArgs?: any) : Ext.data.IStoreMgr {
			return TypExt.Object.create("Ext.data.StoreMgr", config, extraArgs );
		}
	}
}

module TypExt {
	export class StoreManager {
		static create(config: TypExt.IStoreManagerConfig, extraArgs?: any) : Ext.IStoreManager {
			return TypExt.Object.create("Ext.StoreManager", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class TreeModel {
		static create(config: TypExt.data.ITreeModelConfig, extraArgs?: any) : Ext.data.ITreeModel {
			return TypExt.Object.create("Ext.data.TreeModel", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class TreeStore {
		static create(config: TypExt.data.ITreeStoreConfig, extraArgs?: any) : Ext.data.ITreeStore {
			return TypExt.Object.create("Ext.data.TreeStore", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class Types {
		static create(config: TypExt.data.ITypesConfig, extraArgs?: any) : Ext.data.ITypes {
			return TypExt.Object.create("Ext.data.Types", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class Validation {
		static create(config: TypExt.data.IValidationConfig, extraArgs?: any) : Ext.data.IValidation {
			return TypExt.Object.create("Ext.data.Validation", config, extraArgs );
		}
	}
}

module TypExt.data.validator {
	export class Bound {
		static create(config: TypExt.data.validator.IBoundConfig, extraArgs?: any) : Ext.data.validator.IBound {
			return TypExt.Object.create("Ext.data.validator.Bound", config, extraArgs );
		}
	}
}

module TypExt.data.validator {
	export class Email {
		static create(config: TypExt.data.validator.IEmailConfig, extraArgs?: any) : Ext.data.validator.IEmail {
			return TypExt.Object.create("Ext.data.validator.Email", config, extraArgs );
		}
	}
}

module TypExt.data.validator {
	export class Exclusion {
		static create(config: TypExt.data.validator.IExclusionConfig, extraArgs?: any) : Ext.data.validator.IExclusion {
			return TypExt.Object.create("Ext.data.validator.Exclusion", config, extraArgs );
		}
	}
}

module TypExt.data.validator {
	export class Format {
		static create(config: TypExt.data.validator.IFormatConfig, extraArgs?: any) : Ext.data.validator.IFormat {
			return TypExt.Object.create("Ext.data.validator.Format", config, extraArgs );
		}
	}
}

module TypExt.data.validator {
	export class Inclusion {
		static create(config: TypExt.data.validator.IInclusionConfig, extraArgs?: any) : Ext.data.validator.IInclusion {
			return TypExt.Object.create("Ext.data.validator.Inclusion", config, extraArgs );
		}
	}
}

module TypExt.data.validator {
	export class Length {
		static create(config: TypExt.data.validator.ILengthConfig, extraArgs?: any) : Ext.data.validator.ILength {
			return TypExt.Object.create("Ext.data.validator.Length", config, extraArgs );
		}
	}
}

module TypExt.data.validator {
	export class List {
		static create(config: TypExt.data.validator.IListConfig, extraArgs?: any) : Ext.data.validator.IList {
			return TypExt.Object.create("Ext.data.validator.List", config, extraArgs );
		}
	}
}

module TypExt.data.validator {
	export class Presence {
		static create(config: TypExt.data.validator.IPresenceConfig, extraArgs?: any) : Ext.data.validator.IPresence {
			return TypExt.Object.create("Ext.data.validator.Presence", config, extraArgs );
		}
	}
}

module TypExt.data.validator {
	export class Range {
		static create(config: TypExt.data.validator.IRangeConfig, extraArgs?: any) : Ext.data.validator.IRange {
			return TypExt.Object.create("Ext.data.validator.Range", config, extraArgs );
		}
	}
}

module TypExt.data.validator {
	export class Validator {
		static create(config: TypExt.data.validator.IValidatorConfig, extraArgs?: any) : Ext.data.validator.IValidator {
			return TypExt.Object.create("Ext.data.validator.Validator", config, extraArgs );
		}
	}
}

module TypExt.data.writer {
	export class Json {
		static create(config: TypExt.data.writer.IJsonConfig, extraArgs?: any) : Ext.data.writer.IJson {
			return TypExt.Object.create("Ext.data.writer.Json", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class JsonWriter {
		static create(config: TypExt.data.IJsonWriterConfig, extraArgs?: any) : Ext.data.IJsonWriter {
			return TypExt.Object.create("Ext.data.JsonWriter", config, extraArgs );
		}
	}
}

module TypExt.data.writer {
	export class Writer {
		static create(config: TypExt.data.writer.IWriterConfig, extraArgs?: any) : Ext.data.writer.IWriter {
			return TypExt.Object.create("Ext.data.writer.Writer", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class DataWriter {
		static create(config: TypExt.data.IDataWriterConfig, extraArgs?: any) : Ext.data.IDataWriter {
			return TypExt.Object.create("Ext.data.DataWriter", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class Writer {
		static create(config: TypExt.data.IWriterConfig, extraArgs?: any) : Ext.data.IWriter {
			return TypExt.Object.create("Ext.data.Writer", config, extraArgs );
		}
	}
}

module TypExt.data.writer {
	export class Xml {
		static create(config: TypExt.data.writer.IXmlConfig, extraArgs?: any) : Ext.data.writer.IXml {
			return TypExt.Object.create("Ext.data.writer.Xml", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class XmlWriter {
		static create(config: TypExt.data.IXmlWriterConfig, extraArgs?: any) : Ext.data.IXmlWriter {
			return TypExt.Object.create("Ext.data.XmlWriter", config, extraArgs );
		}
	}
}

module TypExt.data {
	export class XmlStore {
		static create(config: TypExt.data.IXmlStoreConfig, extraArgs?: any) : Ext.data.IXmlStore {
			return TypExt.Object.create("Ext.data.XmlStore", config, extraArgs );
		}
	}
}

module TypExt {
	export class Date {
		static create(config: TypExt.IDateConfig, extraArgs?: any) : Ext.IDate {
			return TypExt.Object.create("Ext.Date", config, extraArgs );
		}
	}
}

module TypExt.dd {
	export class DD {
		static create(config: TypExt.dd.IDDConfig, extraArgs?: any) : Ext.dd.IDD {
			return TypExt.Object.create("Ext.dd.DD", config, extraArgs );
		}
	}
}

module TypExt.dd {
	export class DDProxy {
		static create(config: TypExt.dd.IDDProxyConfig, extraArgs?: any) : Ext.dd.IDDProxy {
			return TypExt.Object.create("Ext.dd.DDProxy", config, extraArgs );
		}
	}
}

module TypExt.dd {
	export class DDTarget {
		static create(config: TypExt.dd.IDDTargetConfig, extraArgs?: any) : Ext.dd.IDDTarget {
			return TypExt.Object.create("Ext.dd.DDTarget", config, extraArgs );
		}
	}
}

module TypExt.dd {
	export class DragDrop {
		static create(config: TypExt.dd.IDragDropConfig, extraArgs?: any) : Ext.dd.IDragDrop {
			return TypExt.Object.create("Ext.dd.DragDrop", config, extraArgs );
		}
	}
}

module TypExt.dd {
	export class DragDropElement {
		static create(config: TypExt.dd.IDragDropElementConfig, extraArgs?: any) : Ext.dd.IDragDropElement {
			return TypExt.Object.create("Ext.dd.DragDropElement", config, extraArgs );
		}
	}
}

module TypExt.dd.dragdropmanager {
	export class ElementWrapper {
		static create(config: TypExt.dd.dragdropmanager.IElementWrapperConfig, extraArgs?: any) : Ext.dd.dragdropmanager.IElementWrapper {
			return TypExt.Object.create("Ext.dd.dragdropmanager.ElementWrapper", config, extraArgs );
		}
	}
}

module TypExt.dd {
	export class DragDropManager {
		static create(config: TypExt.dd.IDragDropManagerConfig, extraArgs?: any) : Ext.dd.IDragDropManager {
			return TypExt.Object.create("Ext.dd.DragDropManager", config, extraArgs );
		}
	}
}

module TypExt.dd {
	export class DragDropMgr {
		static create(config: TypExt.dd.IDragDropMgrConfig, extraArgs?: any) : Ext.dd.IDragDropMgr {
			return TypExt.Object.create("Ext.dd.DragDropMgr", config, extraArgs );
		}
	}
}

module TypExt.dd {
	export class DDM {
		static create(config: TypExt.dd.IDDMConfig, extraArgs?: any) : Ext.dd.IDDM {
			return TypExt.Object.create("Ext.dd.DDM", config, extraArgs );
		}
	}
}

module TypExt.dd {
	export class DragSource {
		static create(config: TypExt.dd.IDragSourceConfig, extraArgs?: any) : Ext.dd.IDragSource {
			return TypExt.Object.create("Ext.dd.DragSource", config, extraArgs );
		}
	}
}

module TypExt.dd {
	export class DragTracker {
		static create(config: TypExt.dd.IDragTrackerConfig, extraArgs?: any) : Ext.dd.IDragTracker {
			return TypExt.Object.create("Ext.dd.DragTracker", config, extraArgs );
		}
	}
}

module TypExt.dd {
	export class DragZone {
		static create(config: TypExt.dd.IDragZoneConfig, extraArgs?: any) : Ext.dd.IDragZone {
			return TypExt.Object.create("Ext.dd.DragZone", config, extraArgs );
		}
	}
}

module TypExt.dd {
	export class DropTarget {
		static create(config: TypExt.dd.IDropTargetConfig, extraArgs?: any) : Ext.dd.IDropTarget {
			return TypExt.Object.create("Ext.dd.DropTarget", config, extraArgs );
		}
	}
}

module TypExt.dd {
	export class DropZone {
		static create(config: TypExt.dd.IDropZoneConfig, extraArgs?: any) : Ext.dd.IDropZone {
			return TypExt.Object.create("Ext.dd.DropZone", config, extraArgs );
		}
	}
}

module TypExt.dd {
	export class Registry {
		static create(config: TypExt.dd.IRegistryConfig, extraArgs?: any) : Ext.dd.IRegistry {
			return TypExt.Object.create("Ext.dd.Registry", config, extraArgs );
		}
	}
}

module TypExt.dd {
	export class ScrollManager {
		static create(config: TypExt.dd.IScrollManagerConfig, extraArgs?: any) : Ext.dd.IScrollManager {
			return TypExt.Object.create("Ext.dd.ScrollManager", config, extraArgs );
		}
	}
}

module TypExt.dd {
	export class StatusProxy {
		static create(config: TypExt.dd.IStatusProxyConfig, extraArgs?: any) : Ext.dd.IStatusProxy {
			return TypExt.Object.create("Ext.dd.StatusProxy", config, extraArgs );
		}
	}
}

module TypExt.direct {
	export class Event {
		static create(config: TypExt.direct.IEventConfig, extraArgs?: any) : Ext.direct.IEvent {
			return TypExt.Object.create("Ext.direct.Event", config, extraArgs );
		}
	}
}

module TypExt.direct {
	export class ExceptionEvent {
		static create(config: TypExt.direct.IExceptionEventConfig, extraArgs?: any) : Ext.direct.IExceptionEvent {
			return TypExt.Object.create("Ext.direct.ExceptionEvent", config, extraArgs );
		}
	}
}

module TypExt.direct {
	export class JsonProvider {
		static create(config: TypExt.direct.IJsonProviderConfig, extraArgs?: any) : Ext.direct.IJsonProvider {
			return TypExt.Object.create("Ext.direct.JsonProvider", config, extraArgs );
		}
	}
}

module TypExt.direct {
	export class Manager {
		static create(config: TypExt.direct.IManagerConfig, extraArgs?: any) : Ext.direct.IManager {
			return TypExt.Object.create("Ext.direct.Manager", config, extraArgs );
		}
	}
}

module TypExt {
	export class Direct {
		static create(config: TypExt.IDirectConfig, extraArgs?: any) : Ext.IDirect {
			return TypExt.Object.create("Ext.Direct", config, extraArgs );
		}
	}
}

module TypExt.direct {
	export class PollingProvider {
		static create(config: TypExt.direct.IPollingProviderConfig, extraArgs?: any) : Ext.direct.IPollingProvider {
			return TypExt.Object.create("Ext.direct.PollingProvider", config, extraArgs );
		}
	}
}

module TypExt.direct {
	export class Provider {
		static create(config: TypExt.direct.IProviderConfig, extraArgs?: any) : Ext.direct.IProvider {
			return TypExt.Object.create("Ext.direct.Provider", config, extraArgs );
		}
	}
}

module TypExt.direct {
	export class RemotingEvent {
		static create(config: TypExt.direct.IRemotingEventConfig, extraArgs?: any) : Ext.direct.IRemotingEvent {
			return TypExt.Object.create("Ext.direct.RemotingEvent", config, extraArgs );
		}
	}
}

module TypExt.direct {
	export class RemotingMethod {
		static create(config: TypExt.direct.IRemotingMethodConfig, extraArgs?: any) : Ext.direct.IRemotingMethod {
			return TypExt.Object.create("Ext.direct.RemotingMethod", config, extraArgs );
		}
	}
}

module TypExt.direct {
	export class RemotingProvider {
		static create(config: TypExt.direct.IRemotingProviderConfig, extraArgs?: any) : Ext.direct.IRemotingProvider {
			return TypExt.Object.create("Ext.direct.RemotingProvider", config, extraArgs );
		}
	}
}

module TypExt.direct {
	export class Transaction {
		static create(config: TypExt.direct.ITransactionConfig, extraArgs?: any) : Ext.direct.ITransaction {
			return TypExt.Object.create("Ext.direct.Transaction", config, extraArgs );
		}
	}
}

module TypExt.dom {
	export class ButtonElement {
		static create(config: TypExt.dom.IButtonElementConfig, extraArgs?: any) : Ext.dom.IButtonElement {
			return TypExt.Object.create("Ext.dom.ButtonElement", config, extraArgs );
		}
	}
}

module TypExt.dom {
	export class CompositeElement {
		static create(config: TypExt.dom.ICompositeElementConfig, extraArgs?: any) : Ext.dom.ICompositeElement {
			return TypExt.Object.create("Ext.dom.CompositeElement", config, extraArgs );
		}
	}
}

module TypExt {
	export class CompositeElement {
		static create(config: TypExt.ICompositeElementConfig, extraArgs?: any) : Ext.ICompositeElement {
			return TypExt.Object.create("Ext.CompositeElement", config, extraArgs );
		}
	}
}

module TypExt.dom {
	export class CompositeElementLite {
		static create(config: TypExt.dom.ICompositeElementLiteConfig, extraArgs?: any) : Ext.dom.ICompositeElementLite {
			return TypExt.Object.create("Ext.dom.CompositeElementLite", config, extraArgs );
		}
	}
}

module TypExt {
	export class CompositeElementLite {
		static create(config: TypExt.ICompositeElementLiteConfig, extraArgs?: any) : Ext.ICompositeElementLite {
			return TypExt.Object.create("Ext.CompositeElementLite", config, extraArgs );
		}
	}
}

module TypExt.dom {
	export class Element {
		static create(config: TypExt.dom.IElementConfig, extraArgs?: any) : Ext.dom.IElement {
			return TypExt.Object.create("Ext.dom.Element", config, extraArgs );
		}
	}
}

module TypExt {
	export class Element {
		static create(config: TypExt.IElementConfig, extraArgs?: any) : Ext.IElement {
			return TypExt.Object.create("Ext.Element", config, extraArgs );
		}
	}
}

module TypExt.dom {
	export class ElementEvent {
		static create(config: TypExt.dom.IElementEventConfig, extraArgs?: any) : Ext.dom.IElementEvent {
			return TypExt.Object.create("Ext.dom.ElementEvent", config, extraArgs );
		}
	}
}

module TypExt.dom {
	export class Fly {
		static create(config: TypExt.dom.IFlyConfig, extraArgs?: any) : Ext.dom.IFly {
			return TypExt.Object.create("Ext.dom.Fly", config, extraArgs );
		}
	}
}

module TypExt.dom.element {
	export class Fly {
		static create(config: TypExt.dom.element.IFlyConfig, extraArgs?: any) : Ext.dom.element.IFly {
			return TypExt.Object.create("Ext.dom.element.Fly", config, extraArgs );
		}
	}
}

module TypExt.dom {
	export class GarbageCollector {
		static create(config: TypExt.dom.IGarbageCollectorConfig, extraArgs?: any) : Ext.dom.IGarbageCollector {
			return TypExt.Object.create("Ext.dom.GarbageCollector", config, extraArgs );
		}
	}
}

module TypExt.dom {
	export class Helper {
		static create(config: TypExt.dom.IHelperConfig, extraArgs?: any) : Ext.dom.IHelper {
			return TypExt.Object.create("Ext.dom.Helper", config, extraArgs );
		}
	}
}

module TypExt {
	export class DomHelper {
		static create(config: TypExt.IDomHelperConfig, extraArgs?: any) : Ext.IDomHelper {
			return TypExt.Object.create("Ext.DomHelper", config, extraArgs );
		}
	}
}

module TypExt.dom {
	export class Layer {
		static create(config: TypExt.dom.ILayerConfig, extraArgs?: any) : Ext.dom.ILayer {
			return TypExt.Object.create("Ext.dom.Layer", config, extraArgs );
		}
	}
}

module TypExt {
	export class Layer {
		static create(config: TypExt.ILayerConfig, extraArgs?: any) : Ext.ILayer {
			return TypExt.Object.create("Ext.Layer", config, extraArgs );
		}
	}
}

module TypExt.dom {
	export class Query {
		static create(config: TypExt.dom.IQueryConfig, extraArgs?: any) : Ext.dom.IQuery {
			return TypExt.Object.create("Ext.dom.Query", config, extraArgs );
		}
	}
}

module TypExt {
	export class DomQuery {
		static create(config: TypExt.IDomQueryConfig, extraArgs?: any) : Ext.IDomQuery {
			return TypExt.Object.create("Ext.DomQuery", config, extraArgs );
		}
	}
}

module TypExt.core {
	export class DomQuery {
		static create(config: TypExt.core.IDomQueryConfig, extraArgs?: any) : Ext.core.IDomQuery {
			return TypExt.Object.create("Ext.core.DomQuery", config, extraArgs );
		}
	}
}

module TypExt.dom {
	export class Shadow {
		static create(config: TypExt.dom.IShadowConfig, extraArgs?: any) : Ext.dom.IShadow {
			return TypExt.Object.create("Ext.dom.Shadow", config, extraArgs );
		}
	}
}

module TypExt {
	export class Shadow {
		static create(config: TypExt.IShadowConfig, extraArgs?: any) : Ext.IShadow {
			return TypExt.Object.create("Ext.Shadow", config, extraArgs );
		}
	}
}

module TypExt.dom {
	export class Shim {
		static create(config: TypExt.dom.IShimConfig, extraArgs?: any) : Ext.dom.IShim {
			return TypExt.Object.create("Ext.dom.Shim", config, extraArgs );
		}
	}
}

module TypExt.dom {
	export class Underlay {
		static create(config: TypExt.dom.IUnderlayConfig, extraArgs?: any) : Ext.dom.IUnderlay {
			return TypExt.Object.create("Ext.dom.Underlay", config, extraArgs );
		}
	}
}

module TypExt.dom {
	export class UnderlayPool {
		static create(config: TypExt.dom.IUnderlayPoolConfig, extraArgs?: any) : Ext.dom.IUnderlayPool {
			return TypExt.Object.create("Ext.dom.UnderlayPool", config, extraArgs );
		}
	}
}

module TypExt.draw {
	export class Animator {
		static create(config: TypExt.draw.IAnimatorConfig, extraArgs?: any) : Ext.draw.IAnimator {
			return TypExt.Object.create("Ext.draw.Animator", config, extraArgs );
		}
	}
}

module TypExt.draw {
	export class Color {
		static create(config: TypExt.draw.IColorConfig, extraArgs?: any) : Ext.draw.IColor {
			return TypExt.Object.create("Ext.draw.Color", config, extraArgs );
		}
	}
}

module TypExt.draw {
	export class Container {
		static create(config: TypExt.draw.IContainerConfig, extraArgs?: any) : Ext.draw.IContainer {
			return TypExt.Object.create("Ext.draw.Container", config, extraArgs );
		}
	}
}

module TypExt.draw {
	export class Component {
		static create(config: TypExt.draw.IComponentConfig, extraArgs?: any) : Ext.draw.IComponent {
			return TypExt.Object.create("Ext.draw.Component", config, extraArgs );
		}
	}
}

module TypExt.draw {
	export class ContainerBase {
		static create(config: TypExt.draw.IContainerBaseConfig, extraArgs?: any) : Ext.draw.IContainerBase {
			return TypExt.Object.create("Ext.draw.ContainerBase", config, extraArgs );
		}
	}
}

module TypExt.draw {
	export class Draw {
		static create(config: TypExt.draw.IDrawConfig, extraArgs?: any) : Ext.draw.IDraw {
			return TypExt.Object.create("Ext.draw.Draw", config, extraArgs );
		}
	}
}

module TypExt.draw.engine {
	export class Canvas {
		static create(config: TypExt.draw.engine.ICanvasConfig, extraArgs?: any) : Ext.draw.engine.ICanvas {
			return TypExt.Object.create("Ext.draw.engine.Canvas", config, extraArgs );
		}
	}
}

module TypExt.draw.engine {
	export class Excanvas {
		static create(config: TypExt.draw.engine.IExcanvasConfig, extraArgs?: any) : Ext.draw.engine.IExcanvas {
			return TypExt.Object.create("Ext.draw.engine.Excanvas", config, extraArgs );
		}
	}
}

module TypExt.draw.engine {
	export class Svg {
		static create(config: TypExt.draw.engine.ISvgConfig, extraArgs?: any) : Ext.draw.engine.ISvg {
			return TypExt.Object.create("Ext.draw.engine.Svg", config, extraArgs );
		}
	}
}

module TypExt.draw.engine.svgcontext {
	export class Gradient {
		static create(config: TypExt.draw.engine.svgcontext.IGradientConfig, extraArgs?: any) : Ext.draw.engine.svgcontext.IGradient {
			return TypExt.Object.create("Ext.draw.engine.svgcontext.Gradient", config, extraArgs );
		}
	}
}

module TypExt.draw.engine {
	export class SvgContext {
		static create(config: TypExt.draw.engine.ISvgContextConfig, extraArgs?: any) : Ext.draw.engine.ISvgContext {
			return TypExt.Object.create("Ext.draw.engine.SvgContext", config, extraArgs );
		}
	}
}

module TypExt.draw.gradient {
	export class Gradient {
		static create(config: TypExt.draw.gradient.IGradientConfig, extraArgs?: any) : Ext.draw.gradient.IGradient {
			return TypExt.Object.create("Ext.draw.gradient.Gradient", config, extraArgs );
		}
	}
}

module TypExt.draw.gradient {
	export class GradientDefinition {
		static create(config: TypExt.draw.gradient.IGradientDefinitionConfig, extraArgs?: any) : Ext.draw.gradient.IGradientDefinition {
			return TypExt.Object.create("Ext.draw.gradient.GradientDefinition", config, extraArgs );
		}
	}
}

module TypExt.draw.gradient {
	export class Linear {
		static create(config: TypExt.draw.gradient.ILinearConfig, extraArgs?: any) : Ext.draw.gradient.ILinear {
			return TypExt.Object.create("Ext.draw.gradient.Linear", config, extraArgs );
		}
	}
}

module TypExt.draw.gradient {
	export class Radial {
		static create(config: TypExt.draw.gradient.IRadialConfig, extraArgs?: any) : Ext.draw.gradient.IRadial {
			return TypExt.Object.create("Ext.draw.gradient.Radial", config, extraArgs );
		}
	}
}

module TypExt.draw {
	export class LimitedCache {
		static create(config: TypExt.draw.ILimitedCacheConfig, extraArgs?: any) : Ext.draw.ILimitedCache {
			return TypExt.Object.create("Ext.draw.LimitedCache", config, extraArgs );
		}
	}
}

module TypExt.draw {
	export class Matrix {
		static create(config: TypExt.draw.IMatrixConfig, extraArgs?: any) : Ext.draw.IMatrix {
			return TypExt.Object.create("Ext.draw.Matrix", config, extraArgs );
		}
	}
}

module TypExt.draw.modifier {
	export class Animation {
		static create(config: TypExt.draw.modifier.IAnimationConfig, extraArgs?: any) : Ext.draw.modifier.IAnimation {
			return TypExt.Object.create("Ext.draw.modifier.Animation", config, extraArgs );
		}
	}
}

module TypExt.draw.modifier {
	export class Highlight {
		static create(config: TypExt.draw.modifier.IHighlightConfig, extraArgs?: any) : Ext.draw.modifier.IHighlight {
			return TypExt.Object.create("Ext.draw.modifier.Highlight", config, extraArgs );
		}
	}
}

module TypExt.draw.modifier {
	export class Modifier {
		static create(config: TypExt.draw.modifier.IModifierConfig, extraArgs?: any) : Ext.draw.modifier.IModifier {
			return TypExt.Object.create("Ext.draw.modifier.Modifier", config, extraArgs );
		}
	}
}

module TypExt.draw.modifier {
	export class Target {
		static create(config: TypExt.draw.modifier.ITargetConfig, extraArgs?: any) : Ext.draw.modifier.ITarget {
			return TypExt.Object.create("Ext.draw.modifier.Target", config, extraArgs );
		}
	}
}

module TypExt.draw {
	export class Path {
		static create(config: TypExt.draw.IPathConfig, extraArgs?: any) : Ext.draw.IPath {
			return TypExt.Object.create("Ext.draw.Path", config, extraArgs );
		}
	}
}

module TypExt.draw {
	export class PathUtil {
		static create(config: TypExt.draw.IPathUtilConfig, extraArgs?: any) : Ext.draw.IPathUtil {
			return TypExt.Object.create("Ext.draw.PathUtil", config, extraArgs );
		}
	}
}

module TypExt.draw.plugin {
	export class SpriteEvents {
		static create(config: TypExt.draw.plugin.ISpriteEventsConfig, extraArgs?: any) : Ext.draw.plugin.ISpriteEvents {
			return TypExt.Object.create("Ext.draw.plugin.SpriteEvents", config, extraArgs );
		}
	}
}

module TypExt.draw {
	export class SegmentTree {
		static create(config: TypExt.draw.ISegmentTreeConfig, extraArgs?: any) : Ext.draw.ISegmentTree {
			return TypExt.Object.create("Ext.draw.SegmentTree", config, extraArgs );
		}
	}
}

module TypExt.draw.sprite {
	export class AnimationParser {
		static create(config: TypExt.draw.sprite.IAnimationParserConfig, extraArgs?: any) : Ext.draw.sprite.IAnimationParser {
			return TypExt.Object.create("Ext.draw.sprite.AnimationParser", config, extraArgs );
		}
	}
}

module TypExt.draw.sprite {
	export class Arc {
		static create(config: TypExt.draw.sprite.IArcConfig, extraArgs?: any) : Ext.draw.sprite.IArc {
			return TypExt.Object.create("Ext.draw.sprite.Arc", config, extraArgs );
		}
	}
}

module TypExt.draw.sprite {
	export class Arrow {
		static create(config: TypExt.draw.sprite.IArrowConfig, extraArgs?: any) : Ext.draw.sprite.IArrow {
			return TypExt.Object.create("Ext.draw.sprite.Arrow", config, extraArgs );
		}
	}
}

module TypExt.draw.sprite {
	export class AttributeDefinition {
		static create(config: TypExt.draw.sprite.IAttributeDefinitionConfig, extraArgs?: any) : Ext.draw.sprite.IAttributeDefinition {
			return TypExt.Object.create("Ext.draw.sprite.AttributeDefinition", config, extraArgs );
		}
	}
}

module TypExt.draw.sprite {
	export class AttributeParser {
		static create(config: TypExt.draw.sprite.IAttributeParserConfig, extraArgs?: any) : Ext.draw.sprite.IAttributeParser {
			return TypExt.Object.create("Ext.draw.sprite.AttributeParser", config, extraArgs );
		}
	}
}

module TypExt.draw.sprite {
	export class Circle {
		static create(config: TypExt.draw.sprite.ICircleConfig, extraArgs?: any) : Ext.draw.sprite.ICircle {
			return TypExt.Object.create("Ext.draw.sprite.Circle", config, extraArgs );
		}
	}
}

module TypExt.draw.sprite {
	export class Composite {
		static create(config: TypExt.draw.sprite.ICompositeConfig, extraArgs?: any) : Ext.draw.sprite.IComposite {
			return TypExt.Object.create("Ext.draw.sprite.Composite", config, extraArgs );
		}
	}
}

module TypExt.draw.sprite {
	export class Cross {
		static create(config: TypExt.draw.sprite.ICrossConfig, extraArgs?: any) : Ext.draw.sprite.ICross {
			return TypExt.Object.create("Ext.draw.sprite.Cross", config, extraArgs );
		}
	}
}

module TypExt.draw.sprite {
	export class Diamond {
		static create(config: TypExt.draw.sprite.IDiamondConfig, extraArgs?: any) : Ext.draw.sprite.IDiamond {
			return TypExt.Object.create("Ext.draw.sprite.Diamond", config, extraArgs );
		}
	}
}

module TypExt.draw.sprite {
	export class Ellipse {
		static create(config: TypExt.draw.sprite.IEllipseConfig, extraArgs?: any) : Ext.draw.sprite.IEllipse {
			return TypExt.Object.create("Ext.draw.sprite.Ellipse", config, extraArgs );
		}
	}
}

module TypExt.draw.sprite {
	export class EllipticalArc {
		static create(config: TypExt.draw.sprite.IEllipticalArcConfig, extraArgs?: any) : Ext.draw.sprite.IEllipticalArc {
			return TypExt.Object.create("Ext.draw.sprite.EllipticalArc", config, extraArgs );
		}
	}
}

module TypExt.draw.sprite {
	export class Image {
		static create(config: TypExt.draw.sprite.IImageConfig, extraArgs?: any) : Ext.draw.sprite.IImage {
			return TypExt.Object.create("Ext.draw.sprite.Image", config, extraArgs );
		}
	}
}

module TypExt.draw.sprite {
	export class Instancing {
		static create(config: TypExt.draw.sprite.IInstancingConfig, extraArgs?: any) : Ext.draw.sprite.IInstancing {
			return TypExt.Object.create("Ext.draw.sprite.Instancing", config, extraArgs );
		}
	}
}

module TypExt.draw.sprite {
	export class Line {
		static create(config: TypExt.draw.sprite.ILineConfig, extraArgs?: any) : Ext.draw.sprite.ILine {
			return TypExt.Object.create("Ext.draw.sprite.Line", config, extraArgs );
		}
	}
}

module TypExt.draw.sprite {
	export class Path {
		static create(config: TypExt.draw.sprite.IPathConfig, extraArgs?: any) : Ext.draw.sprite.IPath {
			return TypExt.Object.create("Ext.draw.sprite.Path", config, extraArgs );
		}
	}
}

module TypExt.draw.sprite {
	export class Plus {
		static create(config: TypExt.draw.sprite.IPlusConfig, extraArgs?: any) : Ext.draw.sprite.IPlus {
			return TypExt.Object.create("Ext.draw.sprite.Plus", config, extraArgs );
		}
	}
}

module TypExt.draw.sprite {
	export class Rect {
		static create(config: TypExt.draw.sprite.IRectConfig, extraArgs?: any) : Ext.draw.sprite.IRect {
			return TypExt.Object.create("Ext.draw.sprite.Rect", config, extraArgs );
		}
	}
}

module TypExt.draw.sprite {
	export class Sector {
		static create(config: TypExt.draw.sprite.ISectorConfig, extraArgs?: any) : Ext.draw.sprite.ISector {
			return TypExt.Object.create("Ext.draw.sprite.Sector", config, extraArgs );
		}
	}
}

module TypExt.draw.sprite {
	export class Sprite {
		static create(config: TypExt.draw.sprite.ISpriteConfig, extraArgs?: any) : Ext.draw.sprite.ISprite {
			return TypExt.Object.create("Ext.draw.sprite.Sprite", config, extraArgs );
		}
	}
}

module TypExt.draw.sprite {
	export class Square {
		static create(config: TypExt.draw.sprite.ISquareConfig, extraArgs?: any) : Ext.draw.sprite.ISquare {
			return TypExt.Object.create("Ext.draw.sprite.Square", config, extraArgs );
		}
	}
}

module TypExt.draw.sprite {
	export class Text {
		static create(config: TypExt.draw.sprite.ITextConfig, extraArgs?: any) : Ext.draw.sprite.IText {
			return TypExt.Object.create("Ext.draw.sprite.Text", config, extraArgs );
		}
	}
}

module TypExt.draw.sprite {
	export class Tick {
		static create(config: TypExt.draw.sprite.ITickConfig, extraArgs?: any) : Ext.draw.sprite.ITick {
			return TypExt.Object.create("Ext.draw.sprite.Tick", config, extraArgs );
		}
	}
}

module TypExt.draw.sprite {
	export class Triangle {
		static create(config: TypExt.draw.sprite.ITriangleConfig, extraArgs?: any) : Ext.draw.sprite.ITriangle {
			return TypExt.Object.create("Ext.draw.sprite.Triangle", config, extraArgs );
		}
	}
}

module TypExt.draw {
	export class Surface {
		static create(config: TypExt.draw.ISurfaceConfig, extraArgs?: any) : Ext.draw.ISurface {
			return TypExt.Object.create("Ext.draw.Surface", config, extraArgs );
		}
	}
}

module TypExt.draw {
	export class SurfaceBase {
		static create(config: TypExt.draw.ISurfaceBaseConfig, extraArgs?: any) : Ext.draw.ISurfaceBase {
			return TypExt.Object.create("Ext.draw.SurfaceBase", config, extraArgs );
		}
	}
}

module TypExt.draw {
	export class TextMeasurer {
		static create(config: TypExt.draw.ITextMeasurerConfig, extraArgs?: any) : Ext.draw.ITextMeasurer {
			return TypExt.Object.create("Ext.draw.TextMeasurer", config, extraArgs );
		}
	}
}

module TypExt.draw {
	export class TimingFunctions {
		static create(config: TypExt.draw.ITimingFunctionsConfig, extraArgs?: any) : Ext.draw.ITimingFunctions {
			return TypExt.Object.create("Ext.draw.TimingFunctions", config, extraArgs );
		}
	}
}

module TypExt {
	export class Editor {
		static create(config: TypExt.IEditorConfig, extraArgs?: any) : Ext.IEditor {
			return TypExt.Object.create("Ext.Editor", config, extraArgs );
		}
	}
}

module TypExt {
	export class ElementLoader {
		static create(config: TypExt.IElementLoaderConfig, extraArgs?: any) : Ext.IElementLoader {
			return TypExt.Object.create("Ext.ElementLoader", config, extraArgs );
		}
	}
}

module TypExt.enums {
	export class Feature {
		static create(config: TypExt.enums.IFeatureConfig, extraArgs?: any) : Ext.enums.IFeature {
			return TypExt.Object.create("Ext.enums.Feature", config, extraArgs );
		}
	}
}

module TypExt.enums {
	export class Layout {
		static create(config: TypExt.enums.ILayoutConfig, extraArgs?: any) : Ext.enums.ILayout {
			return TypExt.Object.create("Ext.enums.Layout", config, extraArgs );
		}
	}
}

module TypExt.enums {
	export class Plugin {
		static create(config: TypExt.enums.IPluginConfig, extraArgs?: any) : Ext.enums.IPlugin {
			return TypExt.Object.create("Ext.enums.Plugin", config, extraArgs );
		}
	}
}

module TypExt.enums {
	export class Widget {
		static create(config: TypExt.enums.IWidgetConfig, extraArgs?: any) : Ext.enums.IWidget {
			return TypExt.Object.create("Ext.enums.Widget", config, extraArgs );
		}
	}
}

module TypExt.env {
	export class Browser {
		static create(config: TypExt.env.IBrowserConfig, extraArgs?: any) : Ext.env.IBrowser {
			return TypExt.Object.create("Ext.env.Browser", config, extraArgs );
		}
	}
}

module TypExt.env {
	export class OS {
		static create(config: TypExt.env.IOSConfig, extraArgs?: any) : Ext.env.IOS {
			return TypExt.Object.create("Ext.env.OS", config, extraArgs );
		}
	}
}

module TypExt.env {
	export class Ready {
		static create(config: TypExt.env.IReadyConfig, extraArgs?: any) : Ext.env.IReady {
			return TypExt.Object.create("Ext.env.Ready", config, extraArgs );
		}
	}
}

module TypExt {
	export class Error {
		static create(config: TypExt.IErrorConfig, extraArgs?: any) : Ext.IError {
			return TypExt.Object.create("Ext.Error", config, extraArgs );
		}
	}
}

module TypExt.event {
	export class Event {
		static create(config: TypExt.event.IEventConfig, extraArgs?: any) : Ext.event.IEvent {
			return TypExt.Object.create("Ext.event.Event", config, extraArgs );
		}
	}
}

module TypExt {
	export class EventObjectImpl {
		static create(config: TypExt.IEventObjectImplConfig, extraArgs?: any) : Ext.IEventObjectImpl {
			return TypExt.Object.create("Ext.EventObjectImpl", config, extraArgs );
		}
	}
}

module TypExt.event.gesture {
	export class DoubleTap {
		static create(config: TypExt.event.gesture.IDoubleTapConfig, extraArgs?: any) : Ext.event.gesture.IDoubleTap {
			return TypExt.Object.create("Ext.event.gesture.DoubleTap", config, extraArgs );
		}
	}
}

module TypExt.event.gesture {
	export class Drag {
		static create(config: TypExt.event.gesture.IDragConfig, extraArgs?: any) : Ext.event.gesture.IDrag {
			return TypExt.Object.create("Ext.event.gesture.Drag", config, extraArgs );
		}
	}
}

module TypExt.event.gesture {
	export class EdgeSwipe {
		static create(config: TypExt.event.gesture.IEdgeSwipeConfig, extraArgs?: any) : Ext.event.gesture.IEdgeSwipe {
			return TypExt.Object.create("Ext.event.gesture.EdgeSwipe", config, extraArgs );
		}
	}
}

module TypExt.event.gesture {
	export class LongPress {
		static create(config: TypExt.event.gesture.ILongPressConfig, extraArgs?: any) : Ext.event.gesture.ILongPress {
			return TypExt.Object.create("Ext.event.gesture.LongPress", config, extraArgs );
		}
	}
}

module TypExt.event.gesture {
	export class MultiTouch {
		static create(config: TypExt.event.gesture.IMultiTouchConfig, extraArgs?: any) : Ext.event.gesture.IMultiTouch {
			return TypExt.Object.create("Ext.event.gesture.MultiTouch", config, extraArgs );
		}
	}
}

module TypExt.event.gesture {
	export class Pinch {
		static create(config: TypExt.event.gesture.IPinchConfig, extraArgs?: any) : Ext.event.gesture.IPinch {
			return TypExt.Object.create("Ext.event.gesture.Pinch", config, extraArgs );
		}
	}
}

module TypExt.event.gesture {
	export class Recognizer {
		static create(config: TypExt.event.gesture.IRecognizerConfig, extraArgs?: any) : Ext.event.gesture.IRecognizer {
			return TypExt.Object.create("Ext.event.gesture.Recognizer", config, extraArgs );
		}
	}
}

module TypExt.event.gesture {
	export class Rotate {
		static create(config: TypExt.event.gesture.IRotateConfig, extraArgs?: any) : Ext.event.gesture.IRotate {
			return TypExt.Object.create("Ext.event.gesture.Rotate", config, extraArgs );
		}
	}
}

module TypExt.event.gesture {
	export class SingleTouch {
		static create(config: TypExt.event.gesture.ISingleTouchConfig, extraArgs?: any) : Ext.event.gesture.ISingleTouch {
			return TypExt.Object.create("Ext.event.gesture.SingleTouch", config, extraArgs );
		}
	}
}

module TypExt.event.gesture {
	export class Swipe {
		static create(config: TypExt.event.gesture.ISwipeConfig, extraArgs?: any) : Ext.event.gesture.ISwipe {
			return TypExt.Object.create("Ext.event.gesture.Swipe", config, extraArgs );
		}
	}
}

module TypExt.event.gesture {
	export class Tap {
		static create(config: TypExt.event.gesture.ITapConfig, extraArgs?: any) : Ext.event.gesture.ITap {
			return TypExt.Object.create("Ext.event.gesture.Tap", config, extraArgs );
		}
	}
}

module TypExt.event.publisher {
	export class Dom {
		static create(config: TypExt.event.publisher.IDomConfig, extraArgs?: any) : Ext.event.publisher.IDom {
			return TypExt.Object.create("Ext.event.publisher.Dom", config, extraArgs );
		}
	}
}

module TypExt.event.publisher {
	export class ElementPaint {
		static create(config: TypExt.event.publisher.IElementPaintConfig, extraArgs?: any) : Ext.event.publisher.IElementPaint {
			return TypExt.Object.create("Ext.event.publisher.ElementPaint", config, extraArgs );
		}
	}
}

module TypExt.event.publisher {
	export class ElementSize {
		static create(config: TypExt.event.publisher.IElementSizeConfig, extraArgs?: any) : Ext.event.publisher.IElementSize {
			return TypExt.Object.create("Ext.event.publisher.ElementSize", config, extraArgs );
		}
	}
}

module TypExt.event.publisher {
	export class Focus {
		static create(config: TypExt.event.publisher.IFocusConfig, extraArgs?: any) : Ext.event.publisher.IFocus {
			return TypExt.Object.create("Ext.event.publisher.Focus", config, extraArgs );
		}
	}
}

module TypExt.event.publisher {
	export class Gesture {
		static create(config: TypExt.event.publisher.IGestureConfig, extraArgs?: any) : Ext.event.publisher.IGesture {
			return TypExt.Object.create("Ext.event.publisher.Gesture", config, extraArgs );
		}
	}
}

module TypExt.event.publisher {
	export class MouseEnterLeave {
		static create(config: TypExt.event.publisher.IMouseEnterLeaveConfig, extraArgs?: any) : Ext.event.publisher.IMouseEnterLeave {
			return TypExt.Object.create("Ext.event.publisher.MouseEnterLeave", config, extraArgs );
		}
	}
}

module TypExt.event.publisher {
	export class Publisher {
		static create(config: TypExt.event.publisher.IPublisherConfig, extraArgs?: any) : Ext.event.publisher.IPublisher {
			return TypExt.Object.create("Ext.event.publisher.Publisher", config, extraArgs );
		}
	}
}

module TypExt {
	export class Evented {
		static create(config: TypExt.IEventedConfig, extraArgs?: any) : Ext.IEvented {
			return TypExt.Object.create("Ext.Evented", config, extraArgs );
		}
	}
}

module TypExt {
	export class EventedBase {
		static create(config: TypExt.IEventedBaseConfig, extraArgs?: any) : Ext.IEventedBase {
			return TypExt.Object.create("Ext.EventedBase", config, extraArgs );
		}
	}
}

module TypExt {
	export class EventManager {
		static create(config: TypExt.IEventManagerConfig, extraArgs?: any) : Ext.IEventManager {
			return TypExt.Object.create("Ext.EventManager", config, extraArgs );
		}
	}
}

module TypExt {
	export class Factory {
		static create(config: TypExt.IFactoryConfig, extraArgs?: any) : Ext.IFactory {
			return TypExt.Object.create("Ext.Factory", config, extraArgs );
		}
	}
}

module TypExt {
	export class Feature {
		static create(config: TypExt.IFeatureConfig, extraArgs?: any) : Ext.IFeature {
			return TypExt.Object.create("Ext.Feature", config, extraArgs );
		}
	}
}

module TypExt.flash {
	export class Component {
		static create(config: TypExt.flash.IComponentConfig, extraArgs?: any) : Ext.flash.IComponent {
			return TypExt.Object.create("Ext.flash.Component", config, extraArgs );
		}
	}
}

module TypExt {
	export class FlashComponent {
		static create(config: TypExt.IFlashComponentConfig, extraArgs?: any) : Ext.IFlashComponent {
			return TypExt.Object.create("Ext.FlashComponent", config, extraArgs );
		}
	}
}

module TypExt {
	export class FocusManager {
		static create(config: TypExt.IFocusManagerConfig, extraArgs?: any) : Ext.IFocusManager {
			return TypExt.Object.create("Ext.FocusManager", config, extraArgs );
		}
	}
}

module TypExt {
	export class FocusMgr {
		static create(config: TypExt.IFocusMgrConfig, extraArgs?: any) : Ext.IFocusMgr {
			return TypExt.Object.create("Ext.FocusMgr", config, extraArgs );
		}
	}
}

module TypExt.form.action {
	export class Action {
		static create(config: TypExt.form.action.IActionConfig, extraArgs?: any) : Ext.form.action.IAction {
			return TypExt.Object.create("Ext.form.action.Action", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class Action {
		static create(config: TypExt.form.IActionConfig, extraArgs?: any) : Ext.form.IAction {
			return TypExt.Object.create("Ext.form.Action", config, extraArgs );
		}
	}
}

module TypExt.form.action {
	export class DirectAction {
		static create(config: TypExt.form.action.IDirectActionConfig, extraArgs?: any) : Ext.form.action.IDirectAction {
			return TypExt.Object.create("Ext.form.action.DirectAction", config, extraArgs );
		}
	}
}

module TypExt.form.action {
	export class DirectLoad {
		static create(config: TypExt.form.action.IDirectLoadConfig, extraArgs?: any) : Ext.form.action.IDirectLoad {
			return TypExt.Object.create("Ext.form.action.DirectLoad", config, extraArgs );
		}
	}
}

module TypExt.form.action {
	export class DirectSubmit {
		static create(config: TypExt.form.action.IDirectSubmitConfig, extraArgs?: any) : Ext.form.action.IDirectSubmit {
			return TypExt.Object.create("Ext.form.action.DirectSubmit", config, extraArgs );
		}
	}
}

module TypExt.form.action {
	export class Load {
		static create(config: TypExt.form.action.ILoadConfig, extraArgs?: any) : Ext.form.action.ILoad {
			return TypExt.Object.create("Ext.form.action.Load", config, extraArgs );
		}
	}
}

module TypExt.form.action {
	export class StandardSubmit {
		static create(config: TypExt.form.action.IStandardSubmitConfig, extraArgs?: any) : Ext.form.action.IStandardSubmit {
			return TypExt.Object.create("Ext.form.action.StandardSubmit", config, extraArgs );
		}
	}
}

module TypExt.form.action {
	export class Submit {
		static create(config: TypExt.form.action.ISubmitConfig, extraArgs?: any) : Ext.form.action.ISubmit {
			return TypExt.Object.create("Ext.form.action.Submit", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class Basic {
		static create(config: TypExt.form.IBasicConfig, extraArgs?: any) : Ext.form.IBasic {
			return TypExt.Object.create("Ext.form.Basic", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class BasicForm {
		static create(config: TypExt.form.IBasicFormConfig, extraArgs?: any) : Ext.form.IBasicForm {
			return TypExt.Object.create("Ext.form.BasicForm", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class CheckboxGroup {
		static create(config: TypExt.form.ICheckboxGroupConfig, extraArgs?: any) : Ext.form.ICheckboxGroup {
			return TypExt.Object.create("Ext.form.CheckboxGroup", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class CheckboxManager {
		static create(config: TypExt.form.ICheckboxManagerConfig, extraArgs?: any) : Ext.form.ICheckboxManager {
			return TypExt.Object.create("Ext.form.CheckboxManager", config, extraArgs );
		}
	}
}

module TypExt.form.field {
	export class Base {
		static create(config: TypExt.form.field.IBaseConfig, extraArgs?: any) : Ext.form.field.IBase {
			return TypExt.Object.create("Ext.form.field.Base", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class Field {
		static create(config: TypExt.form.IFieldConfig, extraArgs?: any) : Ext.form.IField {
			return TypExt.Object.create("Ext.form.Field", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class BaseField {
		static create(config: TypExt.form.IBaseFieldConfig, extraArgs?: any) : Ext.form.IBaseField {
			return TypExt.Object.create("Ext.form.BaseField", config, extraArgs );
		}
	}
}

module TypExt.form.field {
	export class Checkbox {
		static create(config: TypExt.form.field.ICheckboxConfig, extraArgs?: any) : Ext.form.field.ICheckbox {
			return TypExt.Object.create("Ext.form.field.Checkbox", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class Checkbox {
		static create(config: TypExt.form.ICheckboxConfig, extraArgs?: any) : Ext.form.ICheckbox {
			return TypExt.Object.create("Ext.form.Checkbox", config, extraArgs );
		}
	}
}

module TypExt.form.field {
	export class ComboBox {
		static create(config: TypExt.form.field.IComboBoxConfig, extraArgs?: any) : Ext.form.field.IComboBox {
			return TypExt.Object.create("Ext.form.field.ComboBox", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class ComboBox {
		static create(config: TypExt.form.IComboBoxConfig, extraArgs?: any) : Ext.form.IComboBox {
			return TypExt.Object.create("Ext.form.ComboBox", config, extraArgs );
		}
	}
}

module TypExt.form.field {
	export class Date {
		static create(config: TypExt.form.field.IDateConfig, extraArgs?: any) : Ext.form.field.IDate {
			return TypExt.Object.create("Ext.form.field.Date", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class DateField {
		static create(config: TypExt.form.IDateFieldConfig, extraArgs?: any) : Ext.form.IDateField {
			return TypExt.Object.create("Ext.form.DateField", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class Date {
		static create(config: TypExt.form.IDateConfig, extraArgs?: any) : Ext.form.IDate {
			return TypExt.Object.create("Ext.form.Date", config, extraArgs );
		}
	}
}

module TypExt.form.field {
	export class Display {
		static create(config: TypExt.form.field.IDisplayConfig, extraArgs?: any) : Ext.form.field.IDisplay {
			return TypExt.Object.create("Ext.form.field.Display", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class DisplayField {
		static create(config: TypExt.form.IDisplayFieldConfig, extraArgs?: any) : Ext.form.IDisplayField {
			return TypExt.Object.create("Ext.form.DisplayField", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class Display {
		static create(config: TypExt.form.IDisplayConfig, extraArgs?: any) : Ext.form.IDisplay {
			return TypExt.Object.create("Ext.form.Display", config, extraArgs );
		}
	}
}

module TypExt.form.field {
	export class Field {
		static create(config: TypExt.form.field.IFieldConfig, extraArgs?: any) : Ext.form.field.IField {
			return TypExt.Object.create("Ext.form.field.Field", config, extraArgs );
		}
	}
}

module TypExt.form.field {
	export class File {
		static create(config: TypExt.form.field.IFileConfig, extraArgs?: any) : Ext.form.field.IFile {
			return TypExt.Object.create("Ext.form.field.File", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class FileUploadField {
		static create(config: TypExt.form.IFileUploadFieldConfig, extraArgs?: any) : Ext.form.IFileUploadField {
			return TypExt.Object.create("Ext.form.FileUploadField", config, extraArgs );
		}
	}
}

module TypExt.ux.form {
	export class FileUploadField {
		static create(config: TypExt.ux.form.IFileUploadFieldConfig, extraArgs?: any) : Ext.ux.form.IFileUploadField {
			return TypExt.Object.create("Ext.ux.form.FileUploadField", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class File {
		static create(config: TypExt.form.IFileConfig, extraArgs?: any) : Ext.form.IFile {
			return TypExt.Object.create("Ext.form.File", config, extraArgs );
		}
	}
}

module TypExt.form.field {
	export class FileButton {
		static create(config: TypExt.form.field.IFileButtonConfig, extraArgs?: any) : Ext.form.field.IFileButton {
			return TypExt.Object.create("Ext.form.field.FileButton", config, extraArgs );
		}
	}
}

module TypExt.form.field {
	export class Hidden {
		static create(config: TypExt.form.field.IHiddenConfig, extraArgs?: any) : Ext.form.field.IHidden {
			return TypExt.Object.create("Ext.form.field.Hidden", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class Hidden {
		static create(config: TypExt.form.IHiddenConfig, extraArgs?: any) : Ext.form.IHidden {
			return TypExt.Object.create("Ext.form.Hidden", config, extraArgs );
		}
	}
}

module TypExt.form.field {
	export class HtmlEditor {
		static create(config: TypExt.form.field.IHtmlEditorConfig, extraArgs?: any) : Ext.form.field.IHtmlEditor {
			return TypExt.Object.create("Ext.form.field.HtmlEditor", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class HtmlEditor {
		static create(config: TypExt.form.IHtmlEditorConfig, extraArgs?: any) : Ext.form.IHtmlEditor {
			return TypExt.Object.create("Ext.form.HtmlEditor", config, extraArgs );
		}
	}
}

module TypExt.form.field {
	export class Number {
		static create(config: TypExt.form.field.INumberConfig, extraArgs?: any) : Ext.form.field.INumber {
			return TypExt.Object.create("Ext.form.field.Number", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class NumberField {
		static create(config: TypExt.form.INumberFieldConfig, extraArgs?: any) : Ext.form.INumberField {
			return TypExt.Object.create("Ext.form.NumberField", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class Number {
		static create(config: TypExt.form.INumberConfig, extraArgs?: any) : Ext.form.INumber {
			return TypExt.Object.create("Ext.form.Number", config, extraArgs );
		}
	}
}

module TypExt.form.field {
	export class Picker {
		static create(config: TypExt.form.field.IPickerConfig, extraArgs?: any) : Ext.form.field.IPicker {
			return TypExt.Object.create("Ext.form.field.Picker", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class Picker {
		static create(config: TypExt.form.IPickerConfig, extraArgs?: any) : Ext.form.IPicker {
			return TypExt.Object.create("Ext.form.Picker", config, extraArgs );
		}
	}
}

module TypExt.form.field {
	export class Radio {
		static create(config: TypExt.form.field.IRadioConfig, extraArgs?: any) : Ext.form.field.IRadio {
			return TypExt.Object.create("Ext.form.field.Radio", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class Radio {
		static create(config: TypExt.form.IRadioConfig, extraArgs?: any) : Ext.form.IRadio {
			return TypExt.Object.create("Ext.form.Radio", config, extraArgs );
		}
	}
}

module TypExt.form.field {
	export class Spinner {
		static create(config: TypExt.form.field.ISpinnerConfig, extraArgs?: any) : Ext.form.field.ISpinner {
			return TypExt.Object.create("Ext.form.field.Spinner", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class Spinner {
		static create(config: TypExt.form.ISpinnerConfig, extraArgs?: any) : Ext.form.ISpinner {
			return TypExt.Object.create("Ext.form.Spinner", config, extraArgs );
		}
	}
}

module TypExt.form.field {
	export class Tag {
		static create(config: TypExt.form.field.ITagConfig, extraArgs?: any) : Ext.form.field.ITag {
			return TypExt.Object.create("Ext.form.field.Tag", config, extraArgs );
		}
	}
}

module TypExt.form.field {
	export class Text {
		static create(config: TypExt.form.field.ITextConfig, extraArgs?: any) : Ext.form.field.IText {
			return TypExt.Object.create("Ext.form.field.Text", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class TextField {
		static create(config: TypExt.form.ITextFieldConfig, extraArgs?: any) : Ext.form.ITextField {
			return TypExt.Object.create("Ext.form.TextField", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class Text {
		static create(config: TypExt.form.ITextConfig, extraArgs?: any) : Ext.form.IText {
			return TypExt.Object.create("Ext.form.Text", config, extraArgs );
		}
	}
}

module TypExt.form.field {
	export class TextArea {
		static create(config: TypExt.form.field.ITextAreaConfig, extraArgs?: any) : Ext.form.field.ITextArea {
			return TypExt.Object.create("Ext.form.field.TextArea", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class TextArea {
		static create(config: TypExt.form.ITextAreaConfig, extraArgs?: any) : Ext.form.ITextArea {
			return TypExt.Object.create("Ext.form.TextArea", config, extraArgs );
		}
	}
}

module TypExt.form.field {
	export class Time {
		static create(config: TypExt.form.field.ITimeConfig, extraArgs?: any) : Ext.form.field.ITime {
			return TypExt.Object.create("Ext.form.field.Time", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class TimeField {
		static create(config: TypExt.form.ITimeFieldConfig, extraArgs?: any) : Ext.form.ITimeField {
			return TypExt.Object.create("Ext.form.TimeField", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class Time {
		static create(config: TypExt.form.ITimeConfig, extraArgs?: any) : Ext.form.ITime {
			return TypExt.Object.create("Ext.form.Time", config, extraArgs );
		}
	}
}

module TypExt.form.field {
	export class Trigger {
		static create(config: TypExt.form.field.ITriggerConfig, extraArgs?: any) : Ext.form.field.ITrigger {
			return TypExt.Object.create("Ext.form.field.Trigger", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class TriggerField {
		static create(config: TypExt.form.ITriggerFieldConfig, extraArgs?: any) : Ext.form.ITriggerField {
			return TypExt.Object.create("Ext.form.TriggerField", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class TwinTriggerField {
		static create(config: TypExt.form.ITwinTriggerFieldConfig, extraArgs?: any) : Ext.form.ITwinTriggerField {
			return TypExt.Object.create("Ext.form.TwinTriggerField", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class Trigger {
		static create(config: TypExt.form.ITriggerConfig, extraArgs?: any) : Ext.form.ITrigger {
			return TypExt.Object.create("Ext.form.Trigger", config, extraArgs );
		}
	}
}

module TypExt.form.field {
	export class VTypes {
		static create(config: TypExt.form.field.IVTypesConfig, extraArgs?: any) : Ext.form.field.IVTypes {
			return TypExt.Object.create("Ext.form.field.VTypes", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class VTypes {
		static create(config: TypExt.form.IVTypesConfig, extraArgs?: any) : Ext.form.IVTypes {
			return TypExt.Object.create("Ext.form.VTypes", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class FieldAncestor {
		static create(config: TypExt.form.IFieldAncestorConfig, extraArgs?: any) : Ext.form.IFieldAncestor {
			return TypExt.Object.create("Ext.form.FieldAncestor", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class FieldContainer {
		static create(config: TypExt.form.IFieldContainerConfig, extraArgs?: any) : Ext.form.IFieldContainer {
			return TypExt.Object.create("Ext.form.FieldContainer", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class FieldSet {
		static create(config: TypExt.form.IFieldSetConfig, extraArgs?: any) : Ext.form.IFieldSet {
			return TypExt.Object.create("Ext.form.FieldSet", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class Label {
		static create(config: TypExt.form.ILabelConfig, extraArgs?: any) : Ext.form.ILabel {
			return TypExt.Object.create("Ext.form.Label", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class Labelable {
		static create(config: TypExt.form.ILabelableConfig, extraArgs?: any) : Ext.form.ILabelable {
			return TypExt.Object.create("Ext.form.Labelable", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class Panel {
		static create(config: TypExt.form.IPanelConfig, extraArgs?: any) : Ext.form.IPanel {
			return TypExt.Object.create("Ext.form.Panel", config, extraArgs );
		}
	}
}

module TypExt {
	export class FormPanel {
		static create(config: TypExt.IFormPanelConfig, extraArgs?: any) : Ext.IFormPanel {
			return TypExt.Object.create("Ext.FormPanel", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class FormPanel {
		static create(config: TypExt.form.IFormPanelConfig, extraArgs?: any) : Ext.form.IFormPanel {
			return TypExt.Object.create("Ext.form.FormPanel", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class RadioGroup {
		static create(config: TypExt.form.IRadioGroupConfig, extraArgs?: any) : Ext.form.IRadioGroup {
			return TypExt.Object.create("Ext.form.RadioGroup", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class RadioManager {
		static create(config: TypExt.form.IRadioManagerConfig, extraArgs?: any) : Ext.form.IRadioManager {
			return TypExt.Object.create("Ext.form.RadioManager", config, extraArgs );
		}
	}
}

module TypExt.form.trigger {
	export class Component {
		static create(config: TypExt.form.trigger.IComponentConfig, extraArgs?: any) : Ext.form.trigger.IComponent {
			return TypExt.Object.create("Ext.form.trigger.Component", config, extraArgs );
		}
	}
}

module TypExt.form.trigger {
	export class Spinner {
		static create(config: TypExt.form.trigger.ISpinnerConfig, extraArgs?: any) : Ext.form.trigger.ISpinner {
			return TypExt.Object.create("Ext.form.trigger.Spinner", config, extraArgs );
		}
	}
}

module TypExt.form.trigger {
	export class Trigger {
		static create(config: TypExt.form.trigger.ITriggerConfig, extraArgs?: any) : Ext.form.trigger.ITrigger {
			return TypExt.Object.create("Ext.form.trigger.Trigger", config, extraArgs );
		}
	}
}

module TypExt {
	export class Function {
		static create(config: TypExt.IFunctionConfig, extraArgs?: any) : Ext.IFunction {
			return TypExt.Object.create("Ext.Function", config, extraArgs );
		}
	}
}

module TypExt.fx {
	export class Anim {
		static create(config: TypExt.fx.IAnimConfig, extraArgs?: any) : Ext.fx.IAnim {
			return TypExt.Object.create("Ext.fx.Anim", config, extraArgs );
		}
	}
}

module TypExt.fx.animation {
	export class Abstract {
		static create(config: TypExt.fx.animation.IAbstractConfig, extraArgs?: any) : Ext.fx.animation.IAbstract {
			return TypExt.Object.create("Ext.fx.animation.Abstract", config, extraArgs );
		}
	}
}

module TypExt.fx.animation {
	export class Cube {
		static create(config: TypExt.fx.animation.ICubeConfig, extraArgs?: any) : Ext.fx.animation.ICube {
			return TypExt.Object.create("Ext.fx.animation.Cube", config, extraArgs );
		}
	}
}

module TypExt.fx.animation {
	export class Fade {
		static create(config: TypExt.fx.animation.IFadeConfig, extraArgs?: any) : Ext.fx.animation.IFade {
			return TypExt.Object.create("Ext.fx.animation.Fade", config, extraArgs );
		}
	}
}

module TypExt.fx.animation {
	export class FadeIn {
		static create(config: TypExt.fx.animation.IFadeInConfig, extraArgs?: any) : Ext.fx.animation.IFadeIn {
			return TypExt.Object.create("Ext.fx.animation.FadeIn", config, extraArgs );
		}
	}
}

module TypExt.fx.animation {
	export class FadeOut {
		static create(config: TypExt.fx.animation.IFadeOutConfig, extraArgs?: any) : Ext.fx.animation.IFadeOut {
			return TypExt.Object.create("Ext.fx.animation.FadeOut", config, extraArgs );
		}
	}
}

module TypExt.fx.animation {
	export class Flip {
		static create(config: TypExt.fx.animation.IFlipConfig, extraArgs?: any) : Ext.fx.animation.IFlip {
			return TypExt.Object.create("Ext.fx.animation.Flip", config, extraArgs );
		}
	}
}

module TypExt.fx {
	export class Animation {
		static create(config: TypExt.fx.IAnimationConfig, extraArgs?: any) : Ext.fx.IAnimation {
			return TypExt.Object.create("Ext.fx.Animation", config, extraArgs );
		}
	}
}

module TypExt.fx.animation {
	export class Pop {
		static create(config: TypExt.fx.animation.IPopConfig, extraArgs?: any) : Ext.fx.animation.IPop {
			return TypExt.Object.create("Ext.fx.animation.Pop", config, extraArgs );
		}
	}
}

module TypExt.fx.animation {
	export class PopIn {
		static create(config: TypExt.fx.animation.IPopInConfig, extraArgs?: any) : Ext.fx.animation.IPopIn {
			return TypExt.Object.create("Ext.fx.animation.PopIn", config, extraArgs );
		}
	}
}

module TypExt.fx.animation {
	export class PopOut {
		static create(config: TypExt.fx.animation.IPopOutConfig, extraArgs?: any) : Ext.fx.animation.IPopOut {
			return TypExt.Object.create("Ext.fx.animation.PopOut", config, extraArgs );
		}
	}
}

module TypExt.fx.animation {
	export class Slide {
		static create(config: TypExt.fx.animation.ISlideConfig, extraArgs?: any) : Ext.fx.animation.ISlide {
			return TypExt.Object.create("Ext.fx.animation.Slide", config, extraArgs );
		}
	}
}

module TypExt.fx.animation {
	export class SlideIn {
		static create(config: TypExt.fx.animation.ISlideInConfig, extraArgs?: any) : Ext.fx.animation.ISlideIn {
			return TypExt.Object.create("Ext.fx.animation.SlideIn", config, extraArgs );
		}
	}
}

module TypExt.fx.animation {
	export class SlideOut {
		static create(config: TypExt.fx.animation.ISlideOutConfig, extraArgs?: any) : Ext.fx.animation.ISlideOut {
			return TypExt.Object.create("Ext.fx.animation.SlideOut", config, extraArgs );
		}
	}
}

module TypExt.fx.animation {
	export class Wipe {
		static create(config: TypExt.fx.animation.IWipeConfig, extraArgs?: any) : Ext.fx.animation.IWipe {
			return TypExt.Object.create("Ext.fx.animation.Wipe", config, extraArgs );
		}
	}
}

module TypExt.fx.animation {
	export class WipeIn {
		static create(config: TypExt.fx.animation.IWipeInConfig, extraArgs?: any) : Ext.fx.animation.IWipeIn {
			return TypExt.Object.create("Ext.fx.animation.WipeIn", config, extraArgs );
		}
	}
}

module TypExt.fx.animation {
	export class WipeOut {
		static create(config: TypExt.fx.animation.IWipeOutConfig, extraArgs?: any) : Ext.fx.animation.IWipeOut {
			return TypExt.Object.create("Ext.fx.animation.WipeOut", config, extraArgs );
		}
	}
}

module TypExt.fx {
	export class Animator {
		static create(config: TypExt.fx.IAnimatorConfig, extraArgs?: any) : Ext.fx.IAnimator {
			return TypExt.Object.create("Ext.fx.Animator", config, extraArgs );
		}
	}
}

module TypExt.fx {
	export class CubicBezier {
		static create(config: TypExt.fx.ICubicBezierConfig, extraArgs?: any) : Ext.fx.ICubicBezier {
			return TypExt.Object.create("Ext.fx.CubicBezier", config, extraArgs );
		}
	}
}

module TypExt.fx {
	export class DrawPath {
		static create(config: TypExt.fx.IDrawPathConfig, extraArgs?: any) : Ext.fx.IDrawPath {
			return TypExt.Object.create("Ext.fx.DrawPath", config, extraArgs );
		}
	}
}

module TypExt.fx.easing {
	export class Abstract {
		static create(config: TypExt.fx.easing.IAbstractConfig, extraArgs?: any) : Ext.fx.easing.IAbstract {
			return TypExt.Object.create("Ext.fx.easing.Abstract", config, extraArgs );
		}
	}
}

module TypExt.fx.easing {
	export class Bounce {
		static create(config: TypExt.fx.easing.IBounceConfig, extraArgs?: any) : Ext.fx.easing.IBounce {
			return TypExt.Object.create("Ext.fx.easing.Bounce", config, extraArgs );
		}
	}
}

module TypExt.fx.easing {
	export class BoundMomentum {
		static create(config: TypExt.fx.easing.IBoundMomentumConfig, extraArgs?: any) : Ext.fx.easing.IBoundMomentum {
			return TypExt.Object.create("Ext.fx.easing.BoundMomentum", config, extraArgs );
		}
	}
}

module TypExt.fx.easing {
	export class EaseIn {
		static create(config: TypExt.fx.easing.IEaseInConfig, extraArgs?: any) : Ext.fx.easing.IEaseIn {
			return TypExt.Object.create("Ext.fx.easing.EaseIn", config, extraArgs );
		}
	}
}

module TypExt.fx.easing {
	export class EaseOut {
		static create(config: TypExt.fx.easing.IEaseOutConfig, extraArgs?: any) : Ext.fx.easing.IEaseOut {
			return TypExt.Object.create("Ext.fx.easing.EaseOut", config, extraArgs );
		}
	}
}

module TypExt.fx.easing {
	export class Easing {
		static create(config: TypExt.fx.easing.IEasingConfig, extraArgs?: any) : Ext.fx.easing.IEasing {
			return TypExt.Object.create("Ext.fx.easing.Easing", config, extraArgs );
		}
	}
}

module TypExt.fx {
	export class Easing {
		static create(config: TypExt.fx.IEasingConfig, extraArgs?: any) : Ext.fx.IEasing {
			return TypExt.Object.create("Ext.fx.Easing", config, extraArgs );
		}
	}
}

module TypExt.fx.easing {
	export class Linear {
		static create(config: TypExt.fx.easing.ILinearConfig, extraArgs?: any) : Ext.fx.easing.ILinear {
			return TypExt.Object.create("Ext.fx.easing.Linear", config, extraArgs );
		}
	}
}

module TypExt.fx.easing {
	export class Momentum {
		static create(config: TypExt.fx.easing.IMomentumConfig, extraArgs?: any) : Ext.fx.easing.IMomentum {
			return TypExt.Object.create("Ext.fx.easing.Momentum", config, extraArgs );
		}
	}
}

module TypExt.fx.layout.card {
	export class Abstract {
		static create(config: TypExt.fx.layout.card.IAbstractConfig, extraArgs?: any) : Ext.fx.layout.card.IAbstract {
			return TypExt.Object.create("Ext.fx.layout.card.Abstract", config, extraArgs );
		}
	}
}

module TypExt.fx.layout.card {
	export class Cover {
		static create(config: TypExt.fx.layout.card.ICoverConfig, extraArgs?: any) : Ext.fx.layout.card.ICover {
			return TypExt.Object.create("Ext.fx.layout.card.Cover", config, extraArgs );
		}
	}
}

module TypExt.fx.layout.card {
	export class Cube {
		static create(config: TypExt.fx.layout.card.ICubeConfig, extraArgs?: any) : Ext.fx.layout.card.ICube {
			return TypExt.Object.create("Ext.fx.layout.card.Cube", config, extraArgs );
		}
	}
}

module TypExt.fx.layout.card {
	export class Fade {
		static create(config: TypExt.fx.layout.card.IFadeConfig, extraArgs?: any) : Ext.fx.layout.card.IFade {
			return TypExt.Object.create("Ext.fx.layout.card.Fade", config, extraArgs );
		}
	}
}

module TypExt.fx.layout.card {
	export class Flip {
		static create(config: TypExt.fx.layout.card.IFlipConfig, extraArgs?: any) : Ext.fx.layout.card.IFlip {
			return TypExt.Object.create("Ext.fx.layout.card.Flip", config, extraArgs );
		}
	}
}

module TypExt.fx.layout {
	export class Card {
		static create(config: TypExt.fx.layout.ICardConfig, extraArgs?: any) : Ext.fx.layout.ICard {
			return TypExt.Object.create("Ext.fx.layout.Card", config, extraArgs );
		}
	}
}

module TypExt.fx.layout.card {
	export class Pop {
		static create(config: TypExt.fx.layout.card.IPopConfig, extraArgs?: any) : Ext.fx.layout.card.IPop {
			return TypExt.Object.create("Ext.fx.layout.card.Pop", config, extraArgs );
		}
	}
}

module TypExt.fx.layout.card {
	export class Reveal {
		static create(config: TypExt.fx.layout.card.IRevealConfig, extraArgs?: any) : Ext.fx.layout.card.IReveal {
			return TypExt.Object.create("Ext.fx.layout.card.Reveal", config, extraArgs );
		}
	}
}

module TypExt.fx.layout.card {
	export class Scroll {
		static create(config: TypExt.fx.layout.card.IScrollConfig, extraArgs?: any) : Ext.fx.layout.card.IScroll {
			return TypExt.Object.create("Ext.fx.layout.card.Scroll", config, extraArgs );
		}
	}
}

module TypExt.fx.layout.card {
	export class ScrollCover {
		static create(config: TypExt.fx.layout.card.IScrollCoverConfig, extraArgs?: any) : Ext.fx.layout.card.IScrollCover {
			return TypExt.Object.create("Ext.fx.layout.card.ScrollCover", config, extraArgs );
		}
	}
}

module TypExt.fx.layout.card {
	export class ScrollReveal {
		static create(config: TypExt.fx.layout.card.IScrollRevealConfig, extraArgs?: any) : Ext.fx.layout.card.IScrollReveal {
			return TypExt.Object.create("Ext.fx.layout.card.ScrollReveal", config, extraArgs );
		}
	}
}

module TypExt.fx.layout.card {
	export class Slide {
		static create(config: TypExt.fx.layout.card.ISlideConfig, extraArgs?: any) : Ext.fx.layout.card.ISlide {
			return TypExt.Object.create("Ext.fx.layout.card.Slide", config, extraArgs );
		}
	}
}

module TypExt.fx.layout.card {
	export class Style {
		static create(config: TypExt.fx.layout.card.IStyleConfig, extraArgs?: any) : Ext.fx.layout.card.IStyle {
			return TypExt.Object.create("Ext.fx.layout.card.Style", config, extraArgs );
		}
	}
}

module TypExt.fx {
	export class Manager {
		static create(config: TypExt.fx.IManagerConfig, extraArgs?: any) : Ext.fx.IManager {
			return TypExt.Object.create("Ext.fx.Manager", config, extraArgs );
		}
	}
}

module TypExt.fx {
	export class PropertyHandler {
		static create(config: TypExt.fx.IPropertyHandlerConfig, extraArgs?: any) : Ext.fx.IPropertyHandler {
			return TypExt.Object.create("Ext.fx.PropertyHandler", config, extraArgs );
		}
	}
}

module TypExt.fx {
	export class Queue {
		static create(config: TypExt.fx.IQueueConfig, extraArgs?: any) : Ext.fx.IQueue {
			return TypExt.Object.create("Ext.fx.Queue", config, extraArgs );
		}
	}
}

module TypExt.fx.runner {
	export class Css {
		static create(config: TypExt.fx.runner.ICssConfig, extraArgs?: any) : Ext.fx.runner.ICss {
			return TypExt.Object.create("Ext.fx.runner.Css", config, extraArgs );
		}
	}
}

module TypExt.fx.runner {
	export class CssAnimation {
		static create(config: TypExt.fx.runner.ICssAnimationConfig, extraArgs?: any) : Ext.fx.runner.ICssAnimation {
			return TypExt.Object.create("Ext.fx.runner.CssAnimation", config, extraArgs );
		}
	}
}

module TypExt.fx.runner {
	export class CssTransition {
		static create(config: TypExt.fx.runner.ICssTransitionConfig, extraArgs?: any) : Ext.fx.runner.ICssTransition {
			return TypExt.Object.create("Ext.fx.runner.CssTransition", config, extraArgs );
		}
	}
}

module TypExt {
	export class Animator {
		static create(config: TypExt.IAnimatorConfig, extraArgs?: any) : Ext.IAnimator {
			return TypExt.Object.create("Ext.Animator", config, extraArgs );
		}
	}
}

module TypExt.fx {
	export class Runner {
		static create(config: TypExt.fx.IRunnerConfig, extraArgs?: any) : Ext.fx.IRunner {
			return TypExt.Object.create("Ext.fx.Runner", config, extraArgs );
		}
	}
}

module TypExt.fx {
	export class State {
		static create(config: TypExt.fx.IStateConfig, extraArgs?: any) : Ext.fx.IState {
			return TypExt.Object.create("Ext.fx.State", config, extraArgs );
		}
	}
}

module TypExt.fx.target {
	export class Component {
		static create(config: TypExt.fx.target.IComponentConfig, extraArgs?: any) : Ext.fx.target.IComponent {
			return TypExt.Object.create("Ext.fx.target.Component", config, extraArgs );
		}
	}
}

module TypExt.fx.target {
	export class CompositeElement {
		static create(config: TypExt.fx.target.ICompositeElementConfig, extraArgs?: any) : Ext.fx.target.ICompositeElement {
			return TypExt.Object.create("Ext.fx.target.CompositeElement", config, extraArgs );
		}
	}
}

module TypExt.fx.target {
	export class CompositeElementCSS {
		static create(config: TypExt.fx.target.ICompositeElementCSSConfig, extraArgs?: any) : Ext.fx.target.ICompositeElementCSS {
			return TypExt.Object.create("Ext.fx.target.CompositeElementCSS", config, extraArgs );
		}
	}
}

module TypExt.fx.target {
	export class CompositeSprite {
		static create(config: TypExt.fx.target.ICompositeSpriteConfig, extraArgs?: any) : Ext.fx.target.ICompositeSprite {
			return TypExt.Object.create("Ext.fx.target.CompositeSprite", config, extraArgs );
		}
	}
}

module TypExt.fx.target {
	export class Element {
		static create(config: TypExt.fx.target.IElementConfig, extraArgs?: any) : Ext.fx.target.IElement {
			return TypExt.Object.create("Ext.fx.target.Element", config, extraArgs );
		}
	}
}

module TypExt.fx.target {
	export class ElementCSS {
		static create(config: TypExt.fx.target.IElementCSSConfig, extraArgs?: any) : Ext.fx.target.IElementCSS {
			return TypExt.Object.create("Ext.fx.target.ElementCSS", config, extraArgs );
		}
	}
}

module TypExt.fx.target {
	export class Sprite {
		static create(config: TypExt.fx.target.ISpriteConfig, extraArgs?: any) : Ext.fx.target.ISprite {
			return TypExt.Object.create("Ext.fx.target.Sprite", config, extraArgs );
		}
	}
}

module TypExt.fx.target {
	export class Target {
		static create(config: TypExt.fx.target.ITargetConfig, extraArgs?: any) : Ext.fx.target.ITarget {
			return TypExt.Object.create("Ext.fx.target.Target", config, extraArgs );
		}
	}
}

module TypExt {
	export class GlobalEvents {
		static create(config: TypExt.IGlobalEventsConfig, extraArgs?: any) : Ext.IGlobalEvents {
			return TypExt.Object.create("Ext.GlobalEvents", config, extraArgs );
		}
	}
}

module TypExt.grid {
	export class CellContext {
		static create(config: TypExt.grid.ICellContextConfig, extraArgs?: any) : Ext.grid.ICellContext {
			return TypExt.Object.create("Ext.grid.CellContext", config, extraArgs );
		}
	}
}

module TypExt.grid {
	export class CellEditor {
		static create(config: TypExt.grid.ICellEditorConfig, extraArgs?: any) : Ext.grid.ICellEditor {
			return TypExt.Object.create("Ext.grid.CellEditor", config, extraArgs );
		}
	}
}

module TypExt.grid.column {
	export class Action {
		static create(config: TypExt.grid.column.IActionConfig, extraArgs?: any) : Ext.grid.column.IAction {
			return TypExt.Object.create("Ext.grid.column.Action", config, extraArgs );
		}
	}
}

module TypExt.grid {
	export class ActionColumn {
		static create(config: TypExt.grid.IActionColumnConfig, extraArgs?: any) : Ext.grid.IActionColumn {
			return TypExt.Object.create("Ext.grid.ActionColumn", config, extraArgs );
		}
	}
}

module TypExt.grid.column {
	export class Boolean {
		static create(config: TypExt.grid.column.IBooleanConfig, extraArgs?: any) : Ext.grid.column.IBoolean {
			return TypExt.Object.create("Ext.grid.column.Boolean", config, extraArgs );
		}
	}
}

module TypExt.grid {
	export class BooleanColumn {
		static create(config: TypExt.grid.IBooleanColumnConfig, extraArgs?: any) : Ext.grid.IBooleanColumn {
			return TypExt.Object.create("Ext.grid.BooleanColumn", config, extraArgs );
		}
	}
}

module TypExt.grid.column {
	export class Check {
		static create(config: TypExt.grid.column.ICheckConfig, extraArgs?: any) : Ext.grid.column.ICheck {
			return TypExt.Object.create("Ext.grid.column.Check", config, extraArgs );
		}
	}
}

module TypExt.ux {
	export class CheckColumn {
		static create(config: TypExt.ux.ICheckColumnConfig, extraArgs?: any) : Ext.ux.ICheckColumn {
			return TypExt.Object.create("Ext.ux.CheckColumn", config, extraArgs );
		}
	}
}

module TypExt.grid.column {
	export class CheckColumn {
		static create(config: TypExt.grid.column.ICheckColumnConfig, extraArgs?: any) : Ext.grid.column.ICheckColumn {
			return TypExt.Object.create("Ext.grid.column.CheckColumn", config, extraArgs );
		}
	}
}

module TypExt.grid.column {
	export class Column {
		static create(config: TypExt.grid.column.IColumnConfig, extraArgs?: any) : Ext.grid.column.IColumn {
			return TypExt.Object.create("Ext.grid.column.Column", config, extraArgs );
		}
	}
}

module TypExt.grid {
	export class Column {
		static create(config: TypExt.grid.IColumnConfig, extraArgs?: any) : Ext.grid.IColumn {
			return TypExt.Object.create("Ext.grid.Column", config, extraArgs );
		}
	}
}

module TypExt.grid.column {
	export class Date {
		static create(config: TypExt.grid.column.IDateConfig, extraArgs?: any) : Ext.grid.column.IDate {
			return TypExt.Object.create("Ext.grid.column.Date", config, extraArgs );
		}
	}
}

module TypExt.grid {
	export class DateColumn {
		static create(config: TypExt.grid.IDateColumnConfig, extraArgs?: any) : Ext.grid.IDateColumn {
			return TypExt.Object.create("Ext.grid.DateColumn", config, extraArgs );
		}
	}
}

module TypExt.grid.column {
	export class Number {
		static create(config: TypExt.grid.column.INumberConfig, extraArgs?: any) : Ext.grid.column.INumber {
			return TypExt.Object.create("Ext.grid.column.Number", config, extraArgs );
		}
	}
}

module TypExt.grid {
	export class NumberColumn {
		static create(config: TypExt.grid.INumberColumnConfig, extraArgs?: any) : Ext.grid.INumberColumn {
			return TypExt.Object.create("Ext.grid.NumberColumn", config, extraArgs );
		}
	}
}

module TypExt.grid.column {
	export class RowNumberer {
		static create(config: TypExt.grid.column.IRowNumbererConfig, extraArgs?: any) : Ext.grid.column.IRowNumberer {
			return TypExt.Object.create("Ext.grid.column.RowNumberer", config, extraArgs );
		}
	}
}

module TypExt.grid {
	export class RowNumberer {
		static create(config: TypExt.grid.IRowNumbererConfig, extraArgs?: any) : Ext.grid.IRowNumberer {
			return TypExt.Object.create("Ext.grid.RowNumberer", config, extraArgs );
		}
	}
}

module TypExt.grid.column {
	export class Template {
		static create(config: TypExt.grid.column.ITemplateConfig, extraArgs?: any) : Ext.grid.column.ITemplate {
			return TypExt.Object.create("Ext.grid.column.Template", config, extraArgs );
		}
	}
}

module TypExt.grid {
	export class TemplateColumn {
		static create(config: TypExt.grid.ITemplateColumnConfig, extraArgs?: any) : Ext.grid.ITemplateColumn {
			return TypExt.Object.create("Ext.grid.TemplateColumn", config, extraArgs );
		}
	}
}

module TypExt.grid.column {
	export class Widget {
		static create(config: TypExt.grid.column.IWidgetConfig, extraArgs?: any) : Ext.grid.column.IWidget {
			return TypExt.Object.create("Ext.grid.column.Widget", config, extraArgs );
		}
	}
}

module TypExt.grid {
	export class ColumnComponentLayout {
		static create(config: TypExt.grid.IColumnComponentLayoutConfig, extraArgs?: any) : Ext.grid.IColumnComponentLayout {
			return TypExt.Object.create("Ext.grid.ColumnComponentLayout", config, extraArgs );
		}
	}
}

module TypExt.grid {
	export class ColumnLayout {
		static create(config: TypExt.grid.IColumnLayoutConfig, extraArgs?: any) : Ext.grid.IColumnLayout {
			return TypExt.Object.create("Ext.grid.ColumnLayout", config, extraArgs );
		}
	}
}

module TypExt.grid {
	export class ColumnManager {
		static create(config: TypExt.grid.IColumnManagerConfig, extraArgs?: any) : Ext.grid.IColumnManager {
			return TypExt.Object.create("Ext.grid.ColumnManager", config, extraArgs );
		}
	}
}

module TypExt.grid {
	export class ColumnModel {
		static create(config: TypExt.grid.IColumnModelConfig, extraArgs?: any) : Ext.grid.IColumnModel {
			return TypExt.Object.create("Ext.grid.ColumnModel", config, extraArgs );
		}
	}
}

module TypExt.grid.feature {
	export class AbstractSummary {
		static create(config: TypExt.grid.feature.IAbstractSummaryConfig, extraArgs?: any) : Ext.grid.feature.IAbstractSummary {
			return TypExt.Object.create("Ext.grid.feature.AbstractSummary", config, extraArgs );
		}
	}
}

module TypExt.grid.feature {
	export class Feature {
		static create(config: TypExt.grid.feature.IFeatureConfig, extraArgs?: any) : Ext.grid.feature.IFeature {
			return TypExt.Object.create("Ext.grid.feature.Feature", config, extraArgs );
		}
	}
}

module TypExt.grid.feature {
	export class Grouping {
		static create(config: TypExt.grid.feature.IGroupingConfig, extraArgs?: any) : Ext.grid.feature.IGrouping {
			return TypExt.Object.create("Ext.grid.feature.Grouping", config, extraArgs );
		}
	}
}

module TypExt.grid.feature {
	export class GroupingSummary {
		static create(config: TypExt.grid.feature.IGroupingSummaryConfig, extraArgs?: any) : Ext.grid.feature.IGroupingSummary {
			return TypExt.Object.create("Ext.grid.feature.GroupingSummary", config, extraArgs );
		}
	}
}

module TypExt.grid.feature {
	export class GroupStore {
		static create(config: TypExt.grid.feature.IGroupStoreConfig, extraArgs?: any) : Ext.grid.feature.IGroupStore {
			return TypExt.Object.create("Ext.grid.feature.GroupStore", config, extraArgs );
		}
	}
}

module TypExt.grid.feature {
	export class RowBody {
		static create(config: TypExt.grid.feature.IRowBodyConfig, extraArgs?: any) : Ext.grid.feature.IRowBody {
			return TypExt.Object.create("Ext.grid.feature.RowBody", config, extraArgs );
		}
	}
}

module TypExt.grid.feature {
	export class Summary {
		static create(config: TypExt.grid.feature.ISummaryConfig, extraArgs?: any) : Ext.grid.feature.ISummary {
			return TypExt.Object.create("Ext.grid.feature.Summary", config, extraArgs );
		}
	}
}

module TypExt.grid.filters.filter {
	export class Base {
		static create(config: TypExt.grid.filters.filter.IBaseConfig, extraArgs?: any) : Ext.grid.filters.filter.IBase {
			return TypExt.Object.create("Ext.grid.filters.filter.Base", config, extraArgs );
		}
	}
}

module TypExt.grid.filters.filter {
	export class Boolean {
		static create(config: TypExt.grid.filters.filter.IBooleanConfig, extraArgs?: any) : Ext.grid.filters.filter.IBoolean {
			return TypExt.Object.create("Ext.grid.filters.filter.Boolean", config, extraArgs );
		}
	}
}

module TypExt.grid.filters.filter {
	export class Date {
		static create(config: TypExt.grid.filters.filter.IDateConfig, extraArgs?: any) : Ext.grid.filters.filter.IDate {
			return TypExt.Object.create("Ext.grid.filters.filter.Date", config, extraArgs );
		}
	}
}

module TypExt.grid.filters.filter {
	export class List {
		static create(config: TypExt.grid.filters.filter.IListConfig, extraArgs?: any) : Ext.grid.filters.filter.IList {
			return TypExt.Object.create("Ext.grid.filters.filter.List", config, extraArgs );
		}
	}
}

module TypExt.grid.filters.filter {
	export class Number {
		static create(config: TypExt.grid.filters.filter.INumberConfig, extraArgs?: any) : Ext.grid.filters.filter.INumber {
			return TypExt.Object.create("Ext.grid.filters.filter.Number", config, extraArgs );
		}
	}
}

module TypExt.grid.filters.filter {
	export class SingleFilter {
		static create(config: TypExt.grid.filters.filter.ISingleFilterConfig, extraArgs?: any) : Ext.grid.filters.filter.ISingleFilter {
			return TypExt.Object.create("Ext.grid.filters.filter.SingleFilter", config, extraArgs );
		}
	}
}

module TypExt.grid.filters.filter {
	export class String {
		static create(config: TypExt.grid.filters.filter.IStringConfig, extraArgs?: any) : Ext.grid.filters.filter.IString {
			return TypExt.Object.create("Ext.grid.filters.filter.String", config, extraArgs );
		}
	}
}

module TypExt.grid.filters.filter {
	export class TriFilter {
		static create(config: TypExt.grid.filters.filter.ITriFilterConfig, extraArgs?: any) : Ext.grid.filters.filter.ITriFilter {
			return TypExt.Object.create("Ext.grid.filters.filter.TriFilter", config, extraArgs );
		}
	}
}

module TypExt.grid.filters {
	export class Filters {
		static create(config: TypExt.grid.filters.IFiltersConfig, extraArgs?: any) : Ext.grid.filters.IFilters {
			return TypExt.Object.create("Ext.grid.filters.Filters", config, extraArgs );
		}
	}
}

module TypExt.grid.header {
	export class Container {
		static create(config: TypExt.grid.header.IContainerConfig, extraArgs?: any) : Ext.grid.header.IContainer {
			return TypExt.Object.create("Ext.grid.header.Container", config, extraArgs );
		}
	}
}

module TypExt.grid.header {
	export class DragZone {
		static create(config: TypExt.grid.header.IDragZoneConfig, extraArgs?: any) : Ext.grid.header.IDragZone {
			return TypExt.Object.create("Ext.grid.header.DragZone", config, extraArgs );
		}
	}
}

module TypExt.grid.header {
	export class DropZone {
		static create(config: TypExt.grid.header.IDropZoneConfig, extraArgs?: any) : Ext.grid.header.IDropZone {
			return TypExt.Object.create("Ext.grid.header.DropZone", config, extraArgs );
		}
	}
}

module TypExt.grid.locking {
	export class HeaderContainer {
		static create(config: TypExt.grid.locking.IHeaderContainerConfig, extraArgs?: any) : Ext.grid.locking.IHeaderContainer {
			return TypExt.Object.create("Ext.grid.locking.HeaderContainer", config, extraArgs );
		}
	}
}

module TypExt.grid.locking {
	export class Lockable {
		static create(config: TypExt.grid.locking.ILockableConfig, extraArgs?: any) : Ext.grid.locking.ILockable {
			return TypExt.Object.create("Ext.grid.locking.Lockable", config, extraArgs );
		}
	}
}

module TypExt.grid {
	export class Lockable {
		static create(config: TypExt.grid.ILockableConfig, extraArgs?: any) : Ext.grid.ILockable {
			return TypExt.Object.create("Ext.grid.Lockable", config, extraArgs );
		}
	}
}

module TypExt.grid.locking {
	export class RowSynchronizer {
		static create(config: TypExt.grid.locking.IRowSynchronizerConfig, extraArgs?: any) : Ext.grid.locking.IRowSynchronizer {
			return TypExt.Object.create("Ext.grid.locking.RowSynchronizer", config, extraArgs );
		}
	}
}

module TypExt.grid.locking {
	export class View {
		static create(config: TypExt.grid.locking.IViewConfig, extraArgs?: any) : Ext.grid.locking.IView {
			return TypExt.Object.create("Ext.grid.locking.View", config, extraArgs );
		}
	}
}

module TypExt.grid {
	export class LockingView {
		static create(config: TypExt.grid.ILockingViewConfig, extraArgs?: any) : Ext.grid.ILockingView {
			return TypExt.Object.create("Ext.grid.LockingView", config, extraArgs );
		}
	}
}

module TypExt.grid {
	export class NavigationModel {
		static create(config: TypExt.grid.INavigationModelConfig, extraArgs?: any) : Ext.grid.INavigationModel {
			return TypExt.Object.create("Ext.grid.NavigationModel", config, extraArgs );
		}
	}
}

module TypExt.grid {
	export class Panel {
		static create(config: TypExt.grid.IPanelConfig, extraArgs?: any) : Ext.grid.IPanel {
			return TypExt.Object.create("Ext.grid.Panel", config, extraArgs );
		}
	}
}

module TypExt.list {
	export class ListView {
		static create(config: TypExt.list.IListViewConfig, extraArgs?: any) : Ext.list.IListView {
			return TypExt.Object.create("Ext.list.ListView", config, extraArgs );
		}
	}
}

module TypExt {
	export class ListView {
		static create(config: TypExt.IListViewConfig, extraArgs?: any) : Ext.IListView {
			return TypExt.Object.create("Ext.ListView", config, extraArgs );
		}
	}
}

module TypExt.grid {
	export class GridPanel {
		static create(config: TypExt.grid.IGridPanelConfig, extraArgs?: any) : Ext.grid.IGridPanel {
			return TypExt.Object.create("Ext.grid.GridPanel", config, extraArgs );
		}
	}
}

module TypExt.grid.plugin {
	export class BufferedRenderer {
		static create(config: TypExt.grid.plugin.IBufferedRendererConfig, extraArgs?: any) : Ext.grid.plugin.IBufferedRenderer {
			return TypExt.Object.create("Ext.grid.plugin.BufferedRenderer", config, extraArgs );
		}
	}
}

module TypExt.grid.plugin {
	export class CellEditing {
		static create(config: TypExt.grid.plugin.ICellEditingConfig, extraArgs?: any) : Ext.grid.plugin.ICellEditing {
			return TypExt.Object.create("Ext.grid.plugin.CellEditing", config, extraArgs );
		}
	}
}

module TypExt.grid.plugin {
	export class Clipboard {
		static create(config: TypExt.grid.plugin.IClipboardConfig, extraArgs?: any) : Ext.grid.plugin.IClipboard {
			return TypExt.Object.create("Ext.grid.plugin.Clipboard", config, extraArgs );
		}
	}
}

module TypExt.grid.plugin {
	export class DragDrop {
		static create(config: TypExt.grid.plugin.IDragDropConfig, extraArgs?: any) : Ext.grid.plugin.IDragDrop {
			return TypExt.Object.create("Ext.grid.plugin.DragDrop", config, extraArgs );
		}
	}
}

module TypExt.grid.plugin {
	export class Editing {
		static create(config: TypExt.grid.plugin.IEditingConfig, extraArgs?: any) : Ext.grid.plugin.IEditing {
			return TypExt.Object.create("Ext.grid.plugin.Editing", config, extraArgs );
		}
	}
}

module TypExt.grid.plugin {
	export class HeaderReorderer {
		static create(config: TypExt.grid.plugin.IHeaderReordererConfig, extraArgs?: any) : Ext.grid.plugin.IHeaderReorderer {
			return TypExt.Object.create("Ext.grid.plugin.HeaderReorderer", config, extraArgs );
		}
	}
}

module TypExt.grid.plugin {
	export class HeaderResizer {
		static create(config: TypExt.grid.plugin.IHeaderResizerConfig, extraArgs?: any) : Ext.grid.plugin.IHeaderResizer {
			return TypExt.Object.create("Ext.grid.plugin.HeaderResizer", config, extraArgs );
		}
	}
}

module TypExt.grid.plugin {
	export class RowEditing {
		static create(config: TypExt.grid.plugin.IRowEditingConfig, extraArgs?: any) : Ext.grid.plugin.IRowEditing {
			return TypExt.Object.create("Ext.grid.plugin.RowEditing", config, extraArgs );
		}
	}
}

module TypExt.grid.plugin {
	export class RowExpander {
		static create(config: TypExt.grid.plugin.IRowExpanderConfig, extraArgs?: any) : Ext.grid.plugin.IRowExpander {
			return TypExt.Object.create("Ext.grid.plugin.RowExpander", config, extraArgs );
		}
	}
}

module TypExt.grid.property {
	export class Grid {
		static create(config: TypExt.grid.property.IGridConfig, extraArgs?: any) : Ext.grid.property.IGrid {
			return TypExt.Object.create("Ext.grid.property.Grid", config, extraArgs );
		}
	}
}

module TypExt.grid {
	export class PropertyGrid {
		static create(config: TypExt.grid.IPropertyGridConfig, extraArgs?: any) : Ext.grid.IPropertyGrid {
			return TypExt.Object.create("Ext.grid.PropertyGrid", config, extraArgs );
		}
	}
}

module TypExt.grid.property {
	export class HeaderContainer {
		static create(config: TypExt.grid.property.IHeaderContainerConfig, extraArgs?: any) : Ext.grid.property.IHeaderContainer {
			return TypExt.Object.create("Ext.grid.property.HeaderContainer", config, extraArgs );
		}
	}
}

module TypExt.grid {
	export class PropertyColumnModel {
		static create(config: TypExt.grid.IPropertyColumnModelConfig, extraArgs?: any) : Ext.grid.IPropertyColumnModel {
			return TypExt.Object.create("Ext.grid.PropertyColumnModel", config, extraArgs );
		}
	}
}

module TypExt.grid.property {
	export class Property {
		static create(config: TypExt.grid.property.IPropertyConfig, extraArgs?: any) : Ext.grid.property.IProperty {
			return TypExt.Object.create("Ext.grid.property.Property", config, extraArgs );
		}
	}
}

module TypExt {
	export class PropGridProperty {
		static create(config: TypExt.IPropGridPropertyConfig, extraArgs?: any) : Ext.IPropGridProperty {
			return TypExt.Object.create("Ext.PropGridProperty", config, extraArgs );
		}
	}
}

module TypExt.grid.property {
	export class Reader {
		static create(config: TypExt.grid.property.IReaderConfig, extraArgs?: any) : Ext.grid.property.IReader {
			return TypExt.Object.create("Ext.grid.property.Reader", config, extraArgs );
		}
	}
}

module TypExt.grid.property {
	export class Store {
		static create(config: TypExt.grid.property.IStoreConfig, extraArgs?: any) : Ext.grid.property.IStore {
			return TypExt.Object.create("Ext.grid.property.Store", config, extraArgs );
		}
	}
}

module TypExt.grid {
	export class PropertyStore {
		static create(config: TypExt.grid.IPropertyStoreConfig, extraArgs?: any) : Ext.grid.IPropertyStore {
			return TypExt.Object.create("Ext.grid.PropertyStore", config, extraArgs );
		}
	}
}

module TypExt.grid {
	export class RowEditor {
		static create(config: TypExt.grid.IRowEditorConfig, extraArgs?: any) : Ext.grid.IRowEditor {
			return TypExt.Object.create("Ext.grid.RowEditor", config, extraArgs );
		}
	}
}

module TypExt.grid {
	export class RowEditorButtons {
		static create(config: TypExt.grid.IRowEditorButtonsConfig, extraArgs?: any) : Ext.grid.IRowEditorButtons {
			return TypExt.Object.create("Ext.grid.RowEditorButtons", config, extraArgs );
		}
	}
}

module TypExt.grid.selection {
	export class Cells {
		static create(config: TypExt.grid.selection.ICellsConfig, extraArgs?: any) : Ext.grid.selection.ICells {
			return TypExt.Object.create("Ext.grid.selection.Cells", config, extraArgs );
		}
	}
}

module TypExt.grid.selection {
	export class Columns {
		static create(config: TypExt.grid.selection.IColumnsConfig, extraArgs?: any) : Ext.grid.selection.IColumns {
			return TypExt.Object.create("Ext.grid.selection.Columns", config, extraArgs );
		}
	}
}

module TypExt.grid.selection {
	export class Rows {
		static create(config: TypExt.grid.selection.IRowsConfig, extraArgs?: any) : Ext.grid.selection.IRows {
			return TypExt.Object.create("Ext.grid.selection.Rows", config, extraArgs );
		}
	}
}

module TypExt.grid.selection {
	export class Selection {
		static create(config: TypExt.grid.selection.ISelectionConfig, extraArgs?: any) : Ext.grid.selection.ISelection {
			return TypExt.Object.create("Ext.grid.selection.Selection", config, extraArgs );
		}
	}
}

module TypExt.grid.selection {
	export class SpreadsheetModel {
		static create(config: TypExt.grid.selection.ISpreadsheetModelConfig, extraArgs?: any) : Ext.grid.selection.ISpreadsheetModel {
			return TypExt.Object.create("Ext.grid.selection.SpreadsheetModel", config, extraArgs );
		}
	}
}

module TypExt.grid {
	export class ViewDropZone {
		static create(config: TypExt.grid.IViewDropZoneConfig, extraArgs?: any) : Ext.grid.IViewDropZone {
			return TypExt.Object.create("Ext.grid.ViewDropZone", config, extraArgs );
		}
	}
}

module TypExt {
	export class Img {
		static create(config: TypExt.IImgConfig, extraArgs?: any) : Ext.IImg {
			return TypExt.Object.create("Ext.Img", config, extraArgs );
		}
	}
}

module TypExt {
	export class Inventory {
		static create(config: TypExt.IInventoryConfig, extraArgs?: any) : Ext.IInventory {
			return TypExt.Object.create("Ext.Inventory", config, extraArgs );
		}
	}
}

module TypExt {
}

module TypExt {
	export class JSON {
		static create(config: TypExt.IJSONConfig, extraArgs?: any) : Ext.IJSON {
			return TypExt.Object.create("Ext.JSON", config, extraArgs );
		}
	}
}

module TypExt.layout.component {
	export class Auto {
		static create(config: TypExt.layout.component.IAutoConfig, extraArgs?: any) : Ext.layout.component.IAuto {
			return TypExt.Object.create("Ext.layout.component.Auto", config, extraArgs );
		}
	}
}

module TypExt.layout.component {
	export class Body {
		static create(config: TypExt.layout.component.IBodyConfig, extraArgs?: any) : Ext.layout.component.IBody {
			return TypExt.Object.create("Ext.layout.component.Body", config, extraArgs );
		}
	}
}

module TypExt.layout.component {
	export class BoundList {
		static create(config: TypExt.layout.component.IBoundListConfig, extraArgs?: any) : Ext.layout.component.IBoundList {
			return TypExt.Object.create("Ext.layout.component.BoundList", config, extraArgs );
		}
	}
}

module TypExt.layout.component {
	export class Component {
		static create(config: TypExt.layout.component.IComponentConfig, extraArgs?: any) : Ext.layout.component.IComponent {
			return TypExt.Object.create("Ext.layout.component.Component", config, extraArgs );
		}
	}
}

module TypExt.layout.component {
	export class Dock {
		static create(config: TypExt.layout.component.IDockConfig, extraArgs?: any) : Ext.layout.component.IDock {
			return TypExt.Object.create("Ext.layout.component.Dock", config, extraArgs );
		}
	}
}

module TypExt.layout.component {
	export class AbstractDock {
		static create(config: TypExt.layout.component.IAbstractDockConfig, extraArgs?: any) : Ext.layout.component.IAbstractDock {
			return TypExt.Object.create("Ext.layout.component.AbstractDock", config, extraArgs );
		}
	}
}

module TypExt.layout.component.field {
	export class FieldContainer {
		static create(config: TypExt.layout.component.field.IFieldContainerConfig, extraArgs?: any) : Ext.layout.component.field.IFieldContainer {
			return TypExt.Object.create("Ext.layout.component.field.FieldContainer", config, extraArgs );
		}
	}
}

module TypExt.layout.component.field {
	export class HtmlEditor {
		static create(config: TypExt.layout.component.field.IHtmlEditorConfig, extraArgs?: any) : Ext.layout.component.field.IHtmlEditor {
			return TypExt.Object.create("Ext.layout.component.field.HtmlEditor", config, extraArgs );
		}
	}
}

module TypExt.layout.component {
	export class FieldSet {
		static create(config: TypExt.layout.component.IFieldSetConfig, extraArgs?: any) : Ext.layout.component.IFieldSet {
			return TypExt.Object.create("Ext.layout.component.FieldSet", config, extraArgs );
		}
	}
}

module TypExt.layout.component {
	export class ProgressBar {
		static create(config: TypExt.layout.component.IProgressBarConfig, extraArgs?: any) : Ext.layout.component.IProgressBar {
			return TypExt.Object.create("Ext.layout.component.ProgressBar", config, extraArgs );
		}
	}
}

module TypExt.layout.container {
	export class Absolute {
		static create(config: TypExt.layout.container.IAbsoluteConfig, extraArgs?: any) : Ext.layout.container.IAbsolute {
			return TypExt.Object.create("Ext.layout.container.Absolute", config, extraArgs );
		}
	}
}

module TypExt.layout {
	export class AbsoluteLayout {
		static create(config: TypExt.layout.IAbsoluteLayoutConfig, extraArgs?: any) : Ext.layout.IAbsoluteLayout {
			return TypExt.Object.create("Ext.layout.AbsoluteLayout", config, extraArgs );
		}
	}
}

module TypExt.layout.container {
	export class Accordion {
		static create(config: TypExt.layout.container.IAccordionConfig, extraArgs?: any) : Ext.layout.container.IAccordion {
			return TypExt.Object.create("Ext.layout.container.Accordion", config, extraArgs );
		}
	}
}

module TypExt.layout {
	export class AccordionLayout {
		static create(config: TypExt.layout.IAccordionLayoutConfig, extraArgs?: any) : Ext.layout.IAccordionLayout {
			return TypExt.Object.create("Ext.layout.AccordionLayout", config, extraArgs );
		}
	}
}

module TypExt.layout.container {
	export class Anchor {
		static create(config: TypExt.layout.container.IAnchorConfig, extraArgs?: any) : Ext.layout.container.IAnchor {
			return TypExt.Object.create("Ext.layout.container.Anchor", config, extraArgs );
		}
	}
}

module TypExt.layout {
	export class AnchorLayout {
		static create(config: TypExt.layout.IAnchorLayoutConfig, extraArgs?: any) : Ext.layout.IAnchorLayout {
			return TypExt.Object.create("Ext.layout.AnchorLayout", config, extraArgs );
		}
	}
}

module TypExt.layout.container {
	export class Auto {
		static create(config: TypExt.layout.container.IAutoConfig, extraArgs?: any) : Ext.layout.container.IAuto {
			return TypExt.Object.create("Ext.layout.container.Auto", config, extraArgs );
		}
	}
}

module TypExt.layout.container {
	export class Border {
		static create(config: TypExt.layout.container.IBorderConfig, extraArgs?: any) : Ext.layout.container.IBorder {
			return TypExt.Object.create("Ext.layout.container.Border", config, extraArgs );
		}
	}
}

module TypExt.layout {
	export class BorderLayout {
		static create(config: TypExt.layout.IBorderLayoutConfig, extraArgs?: any) : Ext.layout.IBorderLayout {
			return TypExt.Object.create("Ext.layout.BorderLayout", config, extraArgs );
		}
	}
}

module TypExt.layout.container {
	export class Box {
		static create(config: TypExt.layout.container.IBoxConfig, extraArgs?: any) : Ext.layout.container.IBox {
			return TypExt.Object.create("Ext.layout.container.Box", config, extraArgs );
		}
	}
}

module TypExt.layout {
	export class BoxLayout {
		static create(config: TypExt.layout.IBoxLayoutConfig, extraArgs?: any) : Ext.layout.IBoxLayout {
			return TypExt.Object.create("Ext.layout.BoxLayout", config, extraArgs );
		}
	}
}

module TypExt.layout.container.boxoverflow {
	export class Menu {
		static create(config: TypExt.layout.container.boxoverflow.IMenuConfig, extraArgs?: any) : Ext.layout.container.boxoverflow.IMenu {
			return TypExt.Object.create("Ext.layout.container.boxoverflow.Menu", config, extraArgs );
		}
	}
}

module TypExt.layout.boxoverflow {
	export class Menu {
		static create(config: TypExt.layout.boxoverflow.IMenuConfig, extraArgs?: any) : Ext.layout.boxoverflow.IMenu {
			return TypExt.Object.create("Ext.layout.boxoverflow.Menu", config, extraArgs );
		}
	}
}

module TypExt.layout.container.boxoverflow {
	export class None {
		static create(config: TypExt.layout.container.boxoverflow.INoneConfig, extraArgs?: any) : Ext.layout.container.boxoverflow.INone {
			return TypExt.Object.create("Ext.layout.container.boxoverflow.None", config, extraArgs );
		}
	}
}

module TypExt.layout.boxoverflow {
	export class None {
		static create(config: TypExt.layout.boxoverflow.INoneConfig, extraArgs?: any) : Ext.layout.boxoverflow.INone {
			return TypExt.Object.create("Ext.layout.boxoverflow.None", config, extraArgs );
		}
	}
}

module TypExt.layout.container.boxoverflow {
	export class Scroller {
		static create(config: TypExt.layout.container.boxoverflow.IScrollerConfig, extraArgs?: any) : Ext.layout.container.boxoverflow.IScroller {
			return TypExt.Object.create("Ext.layout.container.boxoverflow.Scroller", config, extraArgs );
		}
	}
}

module TypExt.layout.boxoverflow {
	export class Scroller {
		static create(config: TypExt.layout.boxoverflow.IScrollerConfig, extraArgs?: any) : Ext.layout.boxoverflow.IScroller {
			return TypExt.Object.create("Ext.layout.boxoverflow.Scroller", config, extraArgs );
		}
	}
}

module TypExt.layout.container {
	export class Card {
		static create(config: TypExt.layout.container.ICardConfig, extraArgs?: any) : Ext.layout.container.ICard {
			return TypExt.Object.create("Ext.layout.container.Card", config, extraArgs );
		}
	}
}

module TypExt.layout {
	export class CardLayout {
		static create(config: TypExt.layout.ICardLayoutConfig, extraArgs?: any) : Ext.layout.ICardLayout {
			return TypExt.Object.create("Ext.layout.CardLayout", config, extraArgs );
		}
	}
}

module TypExt.layout.container {
	export class Center {
		static create(config: TypExt.layout.container.ICenterConfig, extraArgs?: any) : Ext.layout.container.ICenter {
			return TypExt.Object.create("Ext.layout.container.Center", config, extraArgs );
		}
	}
}

module TypExt.ux.layout {
	export class Center {
		static create(config: TypExt.ux.layout.ICenterConfig, extraArgs?: any) : Ext.ux.layout.ICenter {
			return TypExt.Object.create("Ext.ux.layout.Center", config, extraArgs );
		}
	}
}

module TypExt.layout.container {
	export class CheckboxGroup {
		static create(config: TypExt.layout.container.ICheckboxGroupConfig, extraArgs?: any) : Ext.layout.container.ICheckboxGroup {
			return TypExt.Object.create("Ext.layout.container.CheckboxGroup", config, extraArgs );
		}
	}
}

module TypExt.layout.container {
	export class Column {
		static create(config: TypExt.layout.container.IColumnConfig, extraArgs?: any) : Ext.layout.container.IColumn {
			return TypExt.Object.create("Ext.layout.container.Column", config, extraArgs );
		}
	}
}

module TypExt.layout {
	export class ColumnLayout {
		static create(config: TypExt.layout.IColumnLayoutConfig, extraArgs?: any) : Ext.layout.IColumnLayout {
			return TypExt.Object.create("Ext.layout.ColumnLayout", config, extraArgs );
		}
	}
}

module TypExt.layout.container {
	export class ColumnSplitter {
		static create(config: TypExt.layout.container.IColumnSplitterConfig, extraArgs?: any) : Ext.layout.container.IColumnSplitter {
			return TypExt.Object.create("Ext.layout.container.ColumnSplitter", config, extraArgs );
		}
	}
}

module TypExt.layout.container {
	export class ColumnSplitterTracker {
		static create(config: TypExt.layout.container.IColumnSplitterTrackerConfig, extraArgs?: any) : Ext.layout.container.IColumnSplitterTracker {
			return TypExt.Object.create("Ext.layout.container.ColumnSplitterTracker", config, extraArgs );
		}
	}
}

module TypExt.layout.container {
	export class Container {
		static create(config: TypExt.layout.container.IContainerConfig, extraArgs?: any) : Ext.layout.container.IContainer {
			return TypExt.Object.create("Ext.layout.container.Container", config, extraArgs );
		}
	}
}

module TypExt.layout {
	export class ContainerLayout {
		static create(config: TypExt.layout.IContainerLayoutConfig, extraArgs?: any) : Ext.layout.IContainerLayout {
			return TypExt.Object.create("Ext.layout.ContainerLayout", config, extraArgs );
		}
	}
}

module TypExt.layout.container {
	export class Dashboard {
		static create(config: TypExt.layout.container.IDashboardConfig, extraArgs?: any) : Ext.layout.container.IDashboard {
			return TypExt.Object.create("Ext.layout.container.Dashboard", config, extraArgs );
		}
	}
}

module TypExt.layout.container {
	export class Editor {
		static create(config: TypExt.layout.container.IEditorConfig, extraArgs?: any) : Ext.layout.container.IEditor {
			return TypExt.Object.create("Ext.layout.container.Editor", config, extraArgs );
		}
	}
}

module TypExt.layout.container {
	export class Fit {
		static create(config: TypExt.layout.container.IFitConfig, extraArgs?: any) : Ext.layout.container.IFit {
			return TypExt.Object.create("Ext.layout.container.Fit", config, extraArgs );
		}
	}
}

module TypExt.layout {
	export class FitLayout {
		static create(config: TypExt.layout.IFitLayoutConfig, extraArgs?: any) : Ext.layout.IFitLayout {
			return TypExt.Object.create("Ext.layout.FitLayout", config, extraArgs );
		}
	}
}

module TypExt.layout.container {
	export class Form {
		static create(config: TypExt.layout.container.IFormConfig, extraArgs?: any) : Ext.layout.container.IForm {
			return TypExt.Object.create("Ext.layout.container.Form", config, extraArgs );
		}
	}
}

module TypExt.layout {
	export class FormLayout {
		static create(config: TypExt.layout.IFormLayoutConfig, extraArgs?: any) : Ext.layout.IFormLayout {
			return TypExt.Object.create("Ext.layout.FormLayout", config, extraArgs );
		}
	}
}

module TypExt.layout.container {
	export class HBox {
		static create(config: TypExt.layout.container.IHBoxConfig, extraArgs?: any) : Ext.layout.container.IHBox {
			return TypExt.Object.create("Ext.layout.container.HBox", config, extraArgs );
		}
	}
}

module TypExt.layout {
	export class HBoxLayout {
		static create(config: TypExt.layout.IHBoxLayoutConfig, extraArgs?: any) : Ext.layout.IHBoxLayout {
			return TypExt.Object.create("Ext.layout.HBoxLayout", config, extraArgs );
		}
	}
}

module TypExt.layout.container {
	export class SegmentedButton {
		static create(config: TypExt.layout.container.ISegmentedButtonConfig, extraArgs?: any) : Ext.layout.container.ISegmentedButton {
			return TypExt.Object.create("Ext.layout.container.SegmentedButton", config, extraArgs );
		}
	}
}

module TypExt.layout.container {
	export class Table {
		static create(config: TypExt.layout.container.ITableConfig, extraArgs?: any) : Ext.layout.container.ITable {
			return TypExt.Object.create("Ext.layout.container.Table", config, extraArgs );
		}
	}
}

module TypExt.layout {
	export class TableLayout {
		static create(config: TypExt.layout.ITableLayoutConfig, extraArgs?: any) : Ext.layout.ITableLayout {
			return TypExt.Object.create("Ext.layout.TableLayout", config, extraArgs );
		}
	}
}

module TypExt.layout.container {
	export class VBox {
		static create(config: TypExt.layout.container.IVBoxConfig, extraArgs?: any) : Ext.layout.container.IVBox {
			return TypExt.Object.create("Ext.layout.container.VBox", config, extraArgs );
		}
	}
}

module TypExt.layout {
	export class VBoxLayout {
		static create(config: TypExt.layout.IVBoxLayoutConfig, extraArgs?: any) : Ext.layout.IVBoxLayout {
			return TypExt.Object.create("Ext.layout.VBoxLayout", config, extraArgs );
		}
	}
}

module TypExt.layout {
	export class Context {
		static create(config: TypExt.layout.IContextConfig, extraArgs?: any) : Ext.layout.IContext {
			return TypExt.Object.create("Ext.layout.Context", config, extraArgs );
		}
	}
}

module TypExt.layout {
	export class ContextItem {
		static create(config: TypExt.layout.IContextItemConfig, extraArgs?: any) : Ext.layout.IContextItem {
			return TypExt.Object.create("Ext.layout.ContextItem", config, extraArgs );
		}
	}
}

module TypExt.layout {
	export class Layout {
		static create(config: TypExt.layout.ILayoutConfig, extraArgs?: any) : Ext.layout.ILayout {
			return TypExt.Object.create("Ext.layout.Layout", config, extraArgs );
		}
	}
}

module TypExt.layout {
	export class SizeModel {
		static create(config: TypExt.layout.ISizeModelConfig, extraArgs?: any) : Ext.layout.ISizeModel {
			return TypExt.Object.create("Ext.layout.SizeModel", config, extraArgs );
		}
	}
}

module TypExt.layout {
	export class SizePolicy {
		static create(config: TypExt.layout.ISizePolicyConfig, extraArgs?: any) : Ext.layout.ISizePolicy {
			return TypExt.Object.create("Ext.layout.SizePolicy", config, extraArgs );
		}
	}
}

module TypExt {
	export class Loader {
		static create(config: TypExt.ILoaderConfig, extraArgs?: any) : Ext.ILoader {
			return TypExt.Object.create("Ext.Loader", config, extraArgs );
		}
	}
}

module TypExt {
	export class LoadMask {
		static create(config: TypExt.ILoadMaskConfig, extraArgs?: any) : Ext.ILoadMask {
			return TypExt.Object.create("Ext.LoadMask", config, extraArgs );
		}
	}
}

module TypExt.menu {
	export class CheckItem {
		static create(config: TypExt.menu.ICheckItemConfig, extraArgs?: any) : Ext.menu.ICheckItem {
			return TypExt.Object.create("Ext.menu.CheckItem", config, extraArgs );
		}
	}
}

module TypExt.menu {
	export class ColorPicker {
		static create(config: TypExt.menu.IColorPickerConfig, extraArgs?: any) : Ext.menu.IColorPicker {
			return TypExt.Object.create("Ext.menu.ColorPicker", config, extraArgs );
		}
	}
}

module TypExt.menu {
	export class DatePicker {
		static create(config: TypExt.menu.IDatePickerConfig, extraArgs?: any) : Ext.menu.IDatePicker {
			return TypExt.Object.create("Ext.menu.DatePicker", config, extraArgs );
		}
	}
}

module TypExt.menu {
	export class Item {
		static create(config: TypExt.menu.IItemConfig, extraArgs?: any) : Ext.menu.IItem {
			return TypExt.Object.create("Ext.menu.Item", config, extraArgs );
		}
	}
}

module TypExt.menu {
	export class TextItem {
		static create(config: TypExt.menu.ITextItemConfig, extraArgs?: any) : Ext.menu.ITextItem {
			return TypExt.Object.create("Ext.menu.TextItem", config, extraArgs );
		}
	}
}

module TypExt.menu {
	export class Manager {
		static create(config: TypExt.menu.IManagerConfig, extraArgs?: any) : Ext.menu.IManager {
			return TypExt.Object.create("Ext.menu.Manager", config, extraArgs );
		}
	}
}

module TypExt.menu {
	export class MenuMgr {
		static create(config: TypExt.menu.IMenuMgrConfig, extraArgs?: any) : Ext.menu.IMenuMgr {
			return TypExt.Object.create("Ext.menu.MenuMgr", config, extraArgs );
		}
	}
}

module TypExt.menu {
	export class Menu {
		static create(config: TypExt.menu.IMenuConfig, extraArgs?: any) : Ext.menu.IMenu {
			return TypExt.Object.create("Ext.menu.Menu", config, extraArgs );
		}
	}
}

module TypExt.menu {
	export class Separator {
		static create(config: TypExt.menu.ISeparatorConfig, extraArgs?: any) : Ext.menu.ISeparator {
			return TypExt.Object.create("Ext.menu.Separator", config, extraArgs );
		}
	}
}

module TypExt {
	export class MessageBox {
		static create(config: TypExt.IMessageBoxConfig, extraArgs?: any) : Ext.IMessageBox {
			return TypExt.Object.create("Ext.MessageBox", config, extraArgs );
		}
	}
}

module TypExt {
	export class Msg {
		static create(config: TypExt.IMsgConfig, extraArgs?: any) : Ext.IMsg {
			return TypExt.Object.create("Ext.Msg", config, extraArgs );
		}
	}
}

module TypExt.mixin {
	export class Bindable {
		static create(config: TypExt.mixin.IBindableConfig, extraArgs?: any) : Ext.mixin.IBindable {
			return TypExt.Object.create("Ext.mixin.Bindable", config, extraArgs );
		}
	}
}

module TypExt.mixin {
	export class Factoryable {
		static create(config: TypExt.mixin.IFactoryableConfig, extraArgs?: any) : Ext.mixin.IFactoryable {
			return TypExt.Object.create("Ext.mixin.Factoryable", config, extraArgs );
		}
	}
}

module TypExt.mixin {
	export class Hookable {
		static create(config: TypExt.mixin.IHookableConfig, extraArgs?: any) : Ext.mixin.IHookable {
			return TypExt.Object.create("Ext.mixin.Hookable", config, extraArgs );
		}
	}
}

module TypExt.mixin {
	export class Identifiable {
		static create(config: TypExt.mixin.IIdentifiableConfig, extraArgs?: any) : Ext.mixin.IIdentifiable {
			return TypExt.Object.create("Ext.mixin.Identifiable", config, extraArgs );
		}
	}
}

module TypExt.mixin {
	export class Inheritable {
		static create(config: TypExt.mixin.IInheritableConfig, extraArgs?: any) : Ext.mixin.IInheritable {
			return TypExt.Object.create("Ext.mixin.Inheritable", config, extraArgs );
		}
	}
}

module TypExt {
	export class Mixin {
		static create(config: TypExt.IMixinConfig, extraArgs?: any) : Ext.IMixin {
			return TypExt.Object.create("Ext.Mixin", config, extraArgs );
		}
	}
}

module TypExt.mixin {
	export class Mashup {
		static create(config: TypExt.mixin.IMashupConfig, extraArgs?: any) : Ext.mixin.IMashup {
			return TypExt.Object.create("Ext.mixin.Mashup", config, extraArgs );
		}
	}
}

module TypExt.mixin {
	export class Observable {
		static create(config: TypExt.mixin.IObservableConfig, extraArgs?: any) : Ext.mixin.IObservable {
			return TypExt.Object.create("Ext.mixin.Observable", config, extraArgs );
		}
	}
}

module TypExt.mixin {
	export class Queryable {
		static create(config: TypExt.mixin.IQueryableConfig, extraArgs?: any) : Ext.mixin.IQueryable {
			return TypExt.Object.create("Ext.mixin.Queryable", config, extraArgs );
		}
	}
}

module TypExt.mixin {
	export class Responsive {
		static create(config: TypExt.mixin.IResponsiveConfig, extraArgs?: any) : Ext.mixin.IResponsive {
			return TypExt.Object.create("Ext.mixin.Responsive", config, extraArgs );
		}
	}
}

module TypExt.mixin {
	export class Selectable {
		static create(config: TypExt.mixin.ISelectableConfig, extraArgs?: any) : Ext.mixin.ISelectable {
			return TypExt.Object.create("Ext.mixin.Selectable", config, extraArgs );
		}
	}
}

module TypExt.mixin {
	export class Templatable {
		static create(config: TypExt.mixin.ITemplatableConfig, extraArgs?: any) : Ext.mixin.ITemplatable {
			return TypExt.Object.create("Ext.mixin.Templatable", config, extraArgs );
		}
	}
}

module TypExt.mixin {
	export class Traversable {
		static create(config: TypExt.mixin.ITraversableConfig, extraArgs?: any) : Ext.mixin.ITraversable {
			return TypExt.Object.create("Ext.mixin.Traversable", config, extraArgs );
		}
	}
}

module TypExt {
	export class Number {
		static create(config: TypExt.INumberConfig, extraArgs?: any) : Ext.INumber {
			return TypExt.Object.create("Ext.Number", config, extraArgs );
		}
	}
}

module TypExt {
}

module TypExt {
	export class Os {
		static create(config: TypExt.IOsConfig, extraArgs?: any) : Ext.IOs {
			return TypExt.Object.create("Ext.Os", config, extraArgs );
		}
	}
}

module TypExt.panel {
	export class Bar {
		static create(config: TypExt.panel.IBarConfig, extraArgs?: any) : Ext.panel.IBar {
			return TypExt.Object.create("Ext.panel.Bar", config, extraArgs );
		}
	}
}

module TypExt.panel {
	export class DD {
		static create(config: TypExt.panel.IDDConfig, extraArgs?: any) : Ext.panel.IDD {
			return TypExt.Object.create("Ext.panel.DD", config, extraArgs );
		}
	}
}

module TypExt.panel {
	export class Header {
		static create(config: TypExt.panel.IHeaderConfig, extraArgs?: any) : Ext.panel.IHeader {
			return TypExt.Object.create("Ext.panel.Header", config, extraArgs );
		}
	}
}

module TypExt.panel {
	export class Panel {
		static create(config: TypExt.panel.IPanelConfig, extraArgs?: any) : Ext.panel.IPanel {
			return TypExt.Object.create("Ext.panel.Panel", config, extraArgs );
		}
	}
}

module TypExt {
	export class Panel {
		static create(config: TypExt.IPanelConfig, extraArgs?: any) : Ext.IPanel {
			return TypExt.Object.create("Ext.Panel", config, extraArgs );
		}
	}
}

module TypExt.panel {
	export class Pinnable {
		static create(config: TypExt.panel.IPinnableConfig, extraArgs?: any) : Ext.panel.IPinnable {
			return TypExt.Object.create("Ext.panel.Pinnable", config, extraArgs );
		}
	}
}

module TypExt.panel {
	export class Proxy {
		static create(config: TypExt.panel.IProxyConfig, extraArgs?: any) : Ext.panel.IProxy {
			return TypExt.Object.create("Ext.panel.Proxy", config, extraArgs );
		}
	}
}

module TypExt.dd {
	export class PanelProxy {
		static create(config: TypExt.dd.IPanelProxyConfig, extraArgs?: any) : Ext.dd.IPanelProxy {
			return TypExt.Object.create("Ext.dd.PanelProxy", config, extraArgs );
		}
	}
}

module TypExt.panel {
	export class Table {
		static create(config: TypExt.panel.ITableConfig, extraArgs?: any) : Ext.panel.ITable {
			return TypExt.Object.create("Ext.panel.Table", config, extraArgs );
		}
	}
}

module TypExt.panel {
	export class Title {
		static create(config: TypExt.panel.ITitleConfig, extraArgs?: any) : Ext.panel.ITitle {
			return TypExt.Object.create("Ext.panel.Title", config, extraArgs );
		}
	}
}

module TypExt.panel {
	export class Tool {
		static create(config: TypExt.panel.IToolConfig, extraArgs?: any) : Ext.panel.ITool {
			return TypExt.Object.create("Ext.panel.Tool", config, extraArgs );
		}
	}
}

module TypExt.perf {
	export class Accumulator {
		static create(config: TypExt.perf.IAccumulatorConfig, extraArgs?: any) : Ext.perf.IAccumulator {
			return TypExt.Object.create("Ext.perf.Accumulator", config, extraArgs );
		}
	}
}

module TypExt.perf {
	export class Monitor {
		static create(config: TypExt.perf.IMonitorConfig, extraArgs?: any) : Ext.perf.IMonitor {
			return TypExt.Object.create("Ext.perf.Monitor", config, extraArgs );
		}
	}
}

module TypExt {
	export class Perf {
		static create(config: TypExt.IPerfConfig, extraArgs?: any) : Ext.IPerf {
			return TypExt.Object.create("Ext.Perf", config, extraArgs );
		}
	}
}

module TypExt.picker {
	export class Color {
		static create(config: TypExt.picker.IColorConfig, extraArgs?: any) : Ext.picker.IColor {
			return TypExt.Object.create("Ext.picker.Color", config, extraArgs );
		}
	}
}

module TypExt {
	export class ColorPalette {
		static create(config: TypExt.IColorPaletteConfig, extraArgs?: any) : Ext.IColorPalette {
			return TypExt.Object.create("Ext.ColorPalette", config, extraArgs );
		}
	}
}

module TypExt.picker {
	export class Date {
		static create(config: TypExt.picker.IDateConfig, extraArgs?: any) : Ext.picker.IDate {
			return TypExt.Object.create("Ext.picker.Date", config, extraArgs );
		}
	}
}

module TypExt {
	export class DatePicker {
		static create(config: TypExt.IDatePickerConfig, extraArgs?: any) : Ext.IDatePicker {
			return TypExt.Object.create("Ext.DatePicker", config, extraArgs );
		}
	}
}

module TypExt.picker {
	export class Month {
		static create(config: TypExt.picker.IMonthConfig, extraArgs?: any) : Ext.picker.IMonth {
			return TypExt.Object.create("Ext.picker.Month", config, extraArgs );
		}
	}
}

module TypExt {
	export class MonthPicker {
		static create(config: TypExt.IMonthPickerConfig, extraArgs?: any) : Ext.IMonthPicker {
			return TypExt.Object.create("Ext.MonthPicker", config, extraArgs );
		}
	}
}

module TypExt.picker {
	export class Time {
		static create(config: TypExt.picker.ITimeConfig, extraArgs?: any) : Ext.picker.ITime {
			return TypExt.Object.create("Ext.picker.Time", config, extraArgs );
		}
	}
}

module TypExt.plugin {
	export class Abstract {
		static create(config: TypExt.plugin.IAbstractConfig, extraArgs?: any) : Ext.plugin.IAbstract {
			return TypExt.Object.create("Ext.plugin.Abstract", config, extraArgs );
		}
	}
}

module TypExt {
	export class AbstractPlugin {
		static create(config: TypExt.IAbstractPluginConfig, extraArgs?: any) : Ext.IAbstractPlugin {
			return TypExt.Object.create("Ext.AbstractPlugin", config, extraArgs );
		}
	}
}

module TypExt.plugin {
	export class AbstractClipboard {
		static create(config: TypExt.plugin.IAbstractClipboardConfig, extraArgs?: any) : Ext.plugin.IAbstractClipboard {
			return TypExt.Object.create("Ext.plugin.AbstractClipboard", config, extraArgs );
		}
	}
}

module TypExt.plugin {
	export class LazyItems {
		static create(config: TypExt.plugin.ILazyItemsConfig, extraArgs?: any) : Ext.plugin.ILazyItems {
			return TypExt.Object.create("Ext.plugin.LazyItems", config, extraArgs );
		}
	}
}

module TypExt.plugin {
	export class Manager {
		static create(config: TypExt.plugin.IManagerConfig, extraArgs?: any) : Ext.plugin.IManager {
			return TypExt.Object.create("Ext.plugin.Manager", config, extraArgs );
		}
	}
}

module TypExt {
	export class PluginManager {
		static create(config: TypExt.IPluginManagerConfig, extraArgs?: any) : Ext.IPluginManager {
			return TypExt.Object.create("Ext.PluginManager", config, extraArgs );
		}
	}
}

module TypExt {
	export class PluginMgr {
		static create(config: TypExt.IPluginMgrConfig, extraArgs?: any) : Ext.IPluginMgr {
			return TypExt.Object.create("Ext.PluginMgr", config, extraArgs );
		}
	}
}

module TypExt.plugin {
	export class Responsive {
		static create(config: TypExt.plugin.IResponsiveConfig, extraArgs?: any) : Ext.plugin.IResponsive {
			return TypExt.Object.create("Ext.plugin.Responsive", config, extraArgs );
		}
	}
}

module TypExt.plugin {
	export class Viewport {
		static create(config: TypExt.plugin.IViewportConfig, extraArgs?: any) : Ext.plugin.IViewport {
			return TypExt.Object.create("Ext.plugin.Viewport", config, extraArgs );
		}
	}
}

module TypExt {
	export class ProgressBar {
		static create(config: TypExt.IProgressBarConfig, extraArgs?: any) : Ext.IProgressBar {
			return TypExt.Object.create("Ext.ProgressBar", config, extraArgs );
		}
	}
}

module TypExt {
	export class ProgressBarWidget {
		static create(config: TypExt.IProgressBarWidgetConfig, extraArgs?: any) : Ext.IProgressBarWidget {
			return TypExt.Object.create("Ext.ProgressBarWidget", config, extraArgs );
		}
	}
}

module TypExt.resizer {
	export class BorderSplitter {
		static create(config: TypExt.resizer.IBorderSplitterConfig, extraArgs?: any) : Ext.resizer.IBorderSplitter {
			return TypExt.Object.create("Ext.resizer.BorderSplitter", config, extraArgs );
		}
	}
}

module TypExt.resizer {
	export class BorderSplitterTracker {
		static create(config: TypExt.resizer.IBorderSplitterTrackerConfig, extraArgs?: any) : Ext.resizer.IBorderSplitterTracker {
			return TypExt.Object.create("Ext.resizer.BorderSplitterTracker", config, extraArgs );
		}
	}
}

module TypExt.resizer {
	export class Handle {
		static create(config: TypExt.resizer.IHandleConfig, extraArgs?: any) : Ext.resizer.IHandle {
			return TypExt.Object.create("Ext.resizer.Handle", config, extraArgs );
		}
	}
}

module TypExt.resizer {
	export class Resizer {
		static create(config: TypExt.resizer.IResizerConfig, extraArgs?: any) : Ext.resizer.IResizer {
			return TypExt.Object.create("Ext.resizer.Resizer", config, extraArgs );
		}
	}
}

module TypExt {
	export class Resizable {
		static create(config: TypExt.IResizableConfig, extraArgs?: any) : Ext.IResizable {
			return TypExt.Object.create("Ext.Resizable", config, extraArgs );
		}
	}
}

module TypExt.resizer {
	export class ResizeTracker {
		static create(config: TypExt.resizer.IResizeTrackerConfig, extraArgs?: any) : Ext.resizer.IResizeTracker {
			return TypExt.Object.create("Ext.resizer.ResizeTracker", config, extraArgs );
		}
	}
}

module TypExt.resizer {
	export class Splitter {
		static create(config: TypExt.resizer.ISplitterConfig, extraArgs?: any) : Ext.resizer.ISplitter {
			return TypExt.Object.create("Ext.resizer.Splitter", config, extraArgs );
		}
	}
}

module TypExt.resizer {
	export class SplitterTracker {
		static create(config: TypExt.resizer.ISplitterTrackerConfig, extraArgs?: any) : Ext.resizer.ISplitterTracker {
			return TypExt.Object.create("Ext.resizer.SplitterTracker", config, extraArgs );
		}
	}
}

module TypExt.scroll {
	export class DomScroller {
		static create(config: TypExt.scroll.IDomScrollerConfig, extraArgs?: any) : Ext.scroll.IDomScroller {
			return TypExt.Object.create("Ext.scroll.DomScroller", config, extraArgs );
		}
	}
}

module TypExt.scroll {
	export class Indicator {
		static create(config: TypExt.scroll.IIndicatorConfig, extraArgs?: any) : Ext.scroll.IIndicator {
			return TypExt.Object.create("Ext.scroll.Indicator", config, extraArgs );
		}
	}
}

module TypExt.scroll {
	export class Scroller {
		static create(config: TypExt.scroll.IScrollerConfig, extraArgs?: any) : Ext.scroll.IScroller {
			return TypExt.Object.create("Ext.scroll.Scroller", config, extraArgs );
		}
	}
}

module TypExt.scroll {
	export class TouchScroller {
		static create(config: TypExt.scroll.ITouchScrollerConfig, extraArgs?: any) : Ext.scroll.ITouchScroller {
			return TypExt.Object.create("Ext.scroll.TouchScroller", config, extraArgs );
		}
	}
}

module TypExt.selection {
	export class CellModel {
		static create(config: TypExt.selection.ICellModelConfig, extraArgs?: any) : Ext.selection.ICellModel {
			return TypExt.Object.create("Ext.selection.CellModel", config, extraArgs );
		}
	}
}

module TypExt.selection {
	export class CheckboxModel {
		static create(config: TypExt.selection.ICheckboxModelConfig, extraArgs?: any) : Ext.selection.ICheckboxModel {
			return TypExt.Object.create("Ext.selection.CheckboxModel", config, extraArgs );
		}
	}
}

module TypExt.selection {
	export class DataViewModel {
		static create(config: TypExt.selection.IDataViewModelConfig, extraArgs?: any) : Ext.selection.IDataViewModel {
			return TypExt.Object.create("Ext.selection.DataViewModel", config, extraArgs );
		}
	}
}

module TypExt.selection {
	export class Model {
		static create(config: TypExt.selection.IModelConfig, extraArgs?: any) : Ext.selection.IModel {
			return TypExt.Object.create("Ext.selection.Model", config, extraArgs );
		}
	}
}

module TypExt {
	export class AbstractSelectionModel {
		static create(config: TypExt.IAbstractSelectionModelConfig, extraArgs?: any) : Ext.IAbstractSelectionModel {
			return TypExt.Object.create("Ext.AbstractSelectionModel", config, extraArgs );
		}
	}
}

module TypExt.selection {
	export class RowModel {
		static create(config: TypExt.selection.IRowModelConfig, extraArgs?: any) : Ext.selection.IRowModel {
			return TypExt.Object.create("Ext.selection.RowModel", config, extraArgs );
		}
	}
}

module TypExt.selection {
	export class TreeModel {
		static create(config: TypExt.selection.ITreeModelConfig, extraArgs?: any) : Ext.selection.ITreeModel {
			return TypExt.Object.create("Ext.selection.TreeModel", config, extraArgs );
		}
	}
}

module TypExt.slider {
	export class Multi {
		static create(config: TypExt.slider.IMultiConfig, extraArgs?: any) : Ext.slider.IMulti {
			return TypExt.Object.create("Ext.slider.Multi", config, extraArgs );
		}
	}
}

module TypExt.slider {
	export class MultiSlider {
		static create(config: TypExt.slider.IMultiSliderConfig, extraArgs?: any) : Ext.slider.IMultiSlider {
			return TypExt.Object.create("Ext.slider.MultiSlider", config, extraArgs );
		}
	}
}

module TypExt.slider {
	export class Single {
		static create(config: TypExt.slider.ISingleConfig, extraArgs?: any) : Ext.slider.ISingle {
			return TypExt.Object.create("Ext.slider.Single", config, extraArgs );
		}
	}
}

module TypExt {
	export class Slider {
		static create(config: TypExt.ISliderConfig, extraArgs?: any) : Ext.ISlider {
			return TypExt.Object.create("Ext.Slider", config, extraArgs );
		}
	}
}

module TypExt.form {
	export class SliderField {
		static create(config: TypExt.form.ISliderFieldConfig, extraArgs?: any) : Ext.form.ISliderField {
			return TypExt.Object.create("Ext.form.SliderField", config, extraArgs );
		}
	}
}

module TypExt.slider {
	export class SingleSlider {
		static create(config: TypExt.slider.ISingleSliderConfig, extraArgs?: any) : Ext.slider.ISingleSlider {
			return TypExt.Object.create("Ext.slider.SingleSlider", config, extraArgs );
		}
	}
}

module TypExt.slider {
	export class Slider {
		static create(config: TypExt.slider.ISliderConfig, extraArgs?: any) : Ext.slider.ISlider {
			return TypExt.Object.create("Ext.slider.Slider", config, extraArgs );
		}
	}
}

module TypExt.slider {
	export class Thumb {
		static create(config: TypExt.slider.IThumbConfig, extraArgs?: any) : Ext.slider.IThumb {
			return TypExt.Object.create("Ext.slider.Thumb", config, extraArgs );
		}
	}
}

module TypExt.slider {
	export class Tip {
		static create(config: TypExt.slider.ITipConfig, extraArgs?: any) : Ext.slider.ITip {
			return TypExt.Object.create("Ext.slider.Tip", config, extraArgs );
		}
	}
}

module TypExt.slider {
	export class Widget {
		static create(config: TypExt.slider.IWidgetConfig, extraArgs?: any) : Ext.slider.IWidget {
			return TypExt.Object.create("Ext.slider.Widget", config, extraArgs );
		}
	}
}

module TypExt.sparkline {
	export class Bar {
		static create(config: TypExt.sparkline.IBarConfig, extraArgs?: any) : Ext.sparkline.IBar {
			return TypExt.Object.create("Ext.sparkline.Bar", config, extraArgs );
		}
	}
}

module TypExt.sparkline {
	export class BarBase {
		static create(config: TypExt.sparkline.IBarBaseConfig, extraArgs?: any) : Ext.sparkline.IBarBase {
			return TypExt.Object.create("Ext.sparkline.BarBase", config, extraArgs );
		}
	}
}

module TypExt.sparkline {
	export class Base {
		static create(config: TypExt.sparkline.IBaseConfig, extraArgs?: any) : Ext.sparkline.IBase {
			return TypExt.Object.create("Ext.sparkline.Base", config, extraArgs );
		}
	}
}

module TypExt.sparkline {
	export class Box {
		static create(config: TypExt.sparkline.IBoxConfig, extraArgs?: any) : Ext.sparkline.IBox {
			return TypExt.Object.create("Ext.sparkline.Box", config, extraArgs );
		}
	}
}

module TypExt.sparkline {
	export class Bullet {
		static create(config: TypExt.sparkline.IBulletConfig, extraArgs?: any) : Ext.sparkline.IBullet {
			return TypExt.Object.create("Ext.sparkline.Bullet", config, extraArgs );
		}
	}
}

module TypExt.sparkline {
	export class CanvasBase {
		static create(config: TypExt.sparkline.ICanvasBaseConfig, extraArgs?: any) : Ext.sparkline.ICanvasBase {
			return TypExt.Object.create("Ext.sparkline.CanvasBase", config, extraArgs );
		}
	}
}

module TypExt.sparkline {
	export class CanvasCanvas {
		static create(config: TypExt.sparkline.ICanvasCanvasConfig, extraArgs?: any) : Ext.sparkline.ICanvasCanvas {
			return TypExt.Object.create("Ext.sparkline.CanvasCanvas", config, extraArgs );
		}
	}
}

module TypExt.sparkline {
	export class Discrete {
		static create(config: TypExt.sparkline.IDiscreteConfig, extraArgs?: any) : Ext.sparkline.IDiscrete {
			return TypExt.Object.create("Ext.sparkline.Discrete", config, extraArgs );
		}
	}
}

module TypExt.sparkline {
	export class Line {
		static create(config: TypExt.sparkline.ILineConfig, extraArgs?: any) : Ext.sparkline.ILine {
			return TypExt.Object.create("Ext.sparkline.Line", config, extraArgs );
		}
	}
}

module TypExt.sparkline {
	export class Pie {
		static create(config: TypExt.sparkline.IPieConfig, extraArgs?: any) : Ext.sparkline.IPie {
			return TypExt.Object.create("Ext.sparkline.Pie", config, extraArgs );
		}
	}
}

module TypExt.sparkline {
	export class RangeMap {
		static create(config: TypExt.sparkline.IRangeMapConfig, extraArgs?: any) : Ext.sparkline.IRangeMap {
			return TypExt.Object.create("Ext.sparkline.RangeMap", config, extraArgs );
		}
	}
}

module TypExt.sparkline {
	export class Shape {
		static create(config: TypExt.sparkline.IShapeConfig, extraArgs?: any) : Ext.sparkline.IShape {
			return TypExt.Object.create("Ext.sparkline.Shape", config, extraArgs );
		}
	}
}

module TypExt.sparkline {
	export class TriState {
		static create(config: TypExt.sparkline.ITriStateConfig, extraArgs?: any) : Ext.sparkline.ITriState {
			return TypExt.Object.create("Ext.sparkline.TriState", config, extraArgs );
		}
	}
}

module TypExt.sparkline {
	export class VmlCanvas {
		static create(config: TypExt.sparkline.IVmlCanvasConfig, extraArgs?: any) : Ext.sparkline.IVmlCanvas {
			return TypExt.Object.create("Ext.sparkline.VmlCanvas", config, extraArgs );
		}
	}
}

module TypExt.state {
	export class CookieProvider {
		static create(config: TypExt.state.ICookieProviderConfig, extraArgs?: any) : Ext.state.ICookieProvider {
			return TypExt.Object.create("Ext.state.CookieProvider", config, extraArgs );
		}
	}
}

module TypExt.state {
	export class LocalStorageProvider {
		static create(config: TypExt.state.ILocalStorageProviderConfig, extraArgs?: any) : Ext.state.ILocalStorageProvider {
			return TypExt.Object.create("Ext.state.LocalStorageProvider", config, extraArgs );
		}
	}
}

module TypExt.state {
	export class Manager {
		static create(config: TypExt.state.IManagerConfig, extraArgs?: any) : Ext.state.IManager {
			return TypExt.Object.create("Ext.state.Manager", config, extraArgs );
		}
	}
}

module TypExt.state {
	export class Provider {
		static create(config: TypExt.state.IProviderConfig, extraArgs?: any) : Ext.state.IProvider {
			return TypExt.Object.create("Ext.state.Provider", config, extraArgs );
		}
	}
}

module TypExt.state {
	export class Stateful {
		static create(config: TypExt.state.IStatefulConfig, extraArgs?: any) : Ext.state.IStateful {
			return TypExt.Object.create("Ext.state.Stateful", config, extraArgs );
		}
	}
}

module TypExt {
	export class String {
		static create(config: TypExt.IStringConfig, extraArgs?: any) : Ext.IString {
			return TypExt.Object.create("Ext.String", config, extraArgs );
		}
	}
}

module TypExt {
	export class Supports {
		static create(config: TypExt.ISupportsConfig, extraArgs?: any) : Ext.ISupports {
			return TypExt.Object.create("Ext.Supports", config, extraArgs );
		}
	}
}

module TypExt.tab {
	export class Bar {
		static create(config: TypExt.tab.IBarConfig, extraArgs?: any) : Ext.tab.IBar {
			return TypExt.Object.create("Ext.tab.Bar", config, extraArgs );
		}
	}
}

module TypExt.tab {
	export class Panel {
		static create(config: TypExt.tab.IPanelConfig, extraArgs?: any) : Ext.tab.IPanel {
			return TypExt.Object.create("Ext.tab.Panel", config, extraArgs );
		}
	}
}

module TypExt {
	export class TabPanel {
		static create(config: TypExt.ITabPanelConfig, extraArgs?: any) : Ext.ITabPanel {
			return TypExt.Object.create("Ext.TabPanel", config, extraArgs );
		}
	}
}

module TypExt.tab {
	export class Tab {
		static create(config: TypExt.tab.ITabConfig, extraArgs?: any) : Ext.tab.ITab {
			return TypExt.Object.create("Ext.tab.Tab", config, extraArgs );
		}
	}
}

module TypExt {
	export class TaskQueue {
		static create(config: TypExt.ITaskQueueConfig, extraArgs?: any) : Ext.ITaskQueue {
			return TypExt.Object.create("Ext.TaskQueue", config, extraArgs );
		}
	}
}

module TypExt {
	export class Template {
		static create(config: TypExt.ITemplateConfig, extraArgs?: any) : Ext.ITemplate {
			return TypExt.Object.create("Ext.Template", config, extraArgs );
		}
	}
}

module TypExt.tip {
	export class QuickTip {
		static create(config: TypExt.tip.IQuickTipConfig, extraArgs?: any) : Ext.tip.IQuickTip {
			return TypExt.Object.create("Ext.tip.QuickTip", config, extraArgs );
		}
	}
}

module TypExt {
	export class QuickTip {
		static create(config: TypExt.IQuickTipConfig, extraArgs?: any) : Ext.IQuickTip {
			return TypExt.Object.create("Ext.QuickTip", config, extraArgs );
		}
	}
}

module TypExt.tip {
	export class QuickTipManager {
		static create(config: TypExt.tip.IQuickTipManagerConfig, extraArgs?: any) : Ext.tip.IQuickTipManager {
			return TypExt.Object.create("Ext.tip.QuickTipManager", config, extraArgs );
		}
	}
}

module TypExt {
	export class QuickTips {
		static create(config: TypExt.IQuickTipsConfig, extraArgs?: any) : Ext.IQuickTips {
			return TypExt.Object.create("Ext.QuickTips", config, extraArgs );
		}
	}
}

module TypExt.tip {
	export class Tip {
		static create(config: TypExt.tip.ITipConfig, extraArgs?: any) : Ext.tip.ITip {
			return TypExt.Object.create("Ext.tip.Tip", config, extraArgs );
		}
	}
}

module TypExt {
	export class Tip {
		static create(config: TypExt.ITipConfig, extraArgs?: any) : Ext.ITip {
			return TypExt.Object.create("Ext.Tip", config, extraArgs );
		}
	}
}

module TypExt.tip {
	export class ToolTip {
		static create(config: TypExt.tip.IToolTipConfig, extraArgs?: any) : Ext.tip.IToolTip {
			return TypExt.Object.create("Ext.tip.ToolTip", config, extraArgs );
		}
	}
}

module TypExt {
	export class ToolTip {
		static create(config: TypExt.IToolTipConfig, extraArgs?: any) : Ext.IToolTip {
			return TypExt.Object.create("Ext.ToolTip", config, extraArgs );
		}
	}
}

module TypExt.toolbar {
	export class Breadcrumb {
		static create(config: TypExt.toolbar.IBreadcrumbConfig, extraArgs?: any) : Ext.toolbar.IBreadcrumb {
			return TypExt.Object.create("Ext.toolbar.Breadcrumb", config, extraArgs );
		}
	}
}

module TypExt.toolbar {
	export class Fill {
		static create(config: TypExt.toolbar.IFillConfig, extraArgs?: any) : Ext.toolbar.IFill {
			return TypExt.Object.create("Ext.toolbar.Fill", config, extraArgs );
		}
	}
}

module TypExt.toolbar {
	export class Item {
		static create(config: TypExt.toolbar.IItemConfig, extraArgs?: any) : Ext.toolbar.IItem {
			return TypExt.Object.create("Ext.toolbar.Item", config, extraArgs );
		}
	}
}

module TypExt.toolbar {
	export class Paging {
		static create(config: TypExt.toolbar.IPagingConfig, extraArgs?: any) : Ext.toolbar.IPaging {
			return TypExt.Object.create("Ext.toolbar.Paging", config, extraArgs );
		}
	}
}

module TypExt {
	export class PagingToolbar {
		static create(config: TypExt.IPagingToolbarConfig, extraArgs?: any) : Ext.IPagingToolbar {
			return TypExt.Object.create("Ext.PagingToolbar", config, extraArgs );
		}
	}
}

module TypExt.toolbar {
	export class Separator {
		static create(config: TypExt.toolbar.ISeparatorConfig, extraArgs?: any) : Ext.toolbar.ISeparator {
			return TypExt.Object.create("Ext.toolbar.Separator", config, extraArgs );
		}
	}
}

module TypExt.toolbar {
	export class Spacer {
		static create(config: TypExt.toolbar.ISpacerConfig, extraArgs?: any) : Ext.toolbar.ISpacer {
			return TypExt.Object.create("Ext.toolbar.Spacer", config, extraArgs );
		}
	}
}

module TypExt.toolbar {
	export class TextItem {
		static create(config: TypExt.toolbar.ITextItemConfig, extraArgs?: any) : Ext.toolbar.ITextItem {
			return TypExt.Object.create("Ext.toolbar.TextItem", config, extraArgs );
		}
	}
}

module TypExt.toolbar {
	export class Toolbar {
		static create(config: TypExt.toolbar.IToolbarConfig, extraArgs?: any) : Ext.toolbar.IToolbar {
			return TypExt.Object.create("Ext.toolbar.Toolbar", config, extraArgs );
		}
	}
}

module TypExt {
	export class Toolbar {
		static create(config: TypExt.IToolbarConfig, extraArgs?: any) : Ext.IToolbar {
			return TypExt.Object.create("Ext.Toolbar", config, extraArgs );
		}
	}
}

module TypExt.tree {
	export class Column {
		static create(config: TypExt.tree.IColumnConfig, extraArgs?: any) : Ext.tree.IColumn {
			return TypExt.Object.create("Ext.tree.Column", config, extraArgs );
		}
	}
}

module TypExt.tree {
	export class NavigationModel {
		static create(config: TypExt.tree.INavigationModelConfig, extraArgs?: any) : Ext.tree.INavigationModel {
			return TypExt.Object.create("Ext.tree.NavigationModel", config, extraArgs );
		}
	}
}

module TypExt.tree {
	export class Panel {
		static create(config: TypExt.tree.IPanelConfig, extraArgs?: any) : Ext.tree.IPanel {
			return TypExt.Object.create("Ext.tree.Panel", config, extraArgs );
		}
	}
}

module TypExt.tree {
	export class TreePanel {
		static create(config: TypExt.tree.ITreePanelConfig, extraArgs?: any) : Ext.tree.ITreePanel {
			return TypExt.Object.create("Ext.tree.TreePanel", config, extraArgs );
		}
	}
}

module TypExt {
	export class TreePanel {
		static create(config: TypExt.ITreePanelConfig, extraArgs?: any) : Ext.ITreePanel {
			return TypExt.Object.create("Ext.TreePanel", config, extraArgs );
		}
	}
}

module TypExt.tree.plugin {
	export class TreeViewDragDrop {
		static create(config: TypExt.tree.plugin.ITreeViewDragDropConfig, extraArgs?: any) : Ext.tree.plugin.ITreeViewDragDrop {
			return TypExt.Object.create("Ext.tree.plugin.TreeViewDragDrop", config, extraArgs );
		}
	}
}

module TypExt.tree {
	export class View {
		static create(config: TypExt.tree.IViewConfig, extraArgs?: any) : Ext.tree.IView {
			return TypExt.Object.create("Ext.tree.View", config, extraArgs );
		}
	}
}

module TypExt.tree {
	export class ViewDragZone {
		static create(config: TypExt.tree.IViewDragZoneConfig, extraArgs?: any) : Ext.tree.IViewDragZone {
			return TypExt.Object.create("Ext.tree.ViewDragZone", config, extraArgs );
		}
	}
}

module TypExt.tree {
	export class ViewDropZone {
		static create(config: TypExt.tree.IViewDropZoneConfig, extraArgs?: any) : Ext.tree.IViewDropZone {
			return TypExt.Object.create("Ext.tree.ViewDropZone", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class AbstractMixedCollection {
		static create(config: TypExt.util.IAbstractMixedCollectionConfig, extraArgs?: any) : Ext.util.IAbstractMixedCollection {
			return TypExt.Object.create("Ext.util.AbstractMixedCollection", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Animate {
		static create(config: TypExt.util.IAnimateConfig, extraArgs?: any) : Ext.util.IAnimate {
			return TypExt.Object.create("Ext.util.Animate", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Bag {
		static create(config: TypExt.util.IBagConfig, extraArgs?: any) : Ext.util.IBag {
			return TypExt.Object.create("Ext.util.Bag", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Base64 {
		static create(config: TypExt.util.IBase64Config, extraArgs?: any) : Ext.util.IBase64 {
			return TypExt.Object.create("Ext.util.Base64", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Cache {
		static create(config: TypExt.util.ICacheConfig, extraArgs?: any) : Ext.util.ICache {
			return TypExt.Object.create("Ext.util.Cache", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class ClickRepeater {
		static create(config: TypExt.util.IClickRepeaterConfig, extraArgs?: any) : Ext.util.IClickRepeater {
			return TypExt.Object.create("Ext.util.ClickRepeater", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Collection {
		static create(config: TypExt.util.ICollectionConfig, extraArgs?: any) : Ext.util.ICollection {
			return TypExt.Object.create("Ext.util.Collection", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class CollectionKey {
		static create(config: TypExt.util.ICollectionKeyConfig, extraArgs?: any) : Ext.util.ICollectionKey {
			return TypExt.Object.create("Ext.util.CollectionKey", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class ComponentDragger {
		static create(config: TypExt.util.IComponentDraggerConfig, extraArgs?: any) : Ext.util.IComponentDragger {
			return TypExt.Object.create("Ext.util.ComponentDragger", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Cookies {
		static create(config: TypExt.util.ICookiesConfig, extraArgs?: any) : Ext.util.ICookies {
			return TypExt.Object.create("Ext.util.Cookies", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class CSS {
		static create(config: TypExt.util.ICSSConfig, extraArgs?: any) : Ext.util.ICSS {
			return TypExt.Object.create("Ext.util.CSS", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class CSV {
		static create(config: TypExt.util.ICSVConfig, extraArgs?: any) : Ext.util.ICSV {
			return TypExt.Object.create("Ext.util.CSV", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class DelayedTask {
		static create(config: TypExt.util.IDelayedTaskConfig, extraArgs?: any) : Ext.util.IDelayedTask {
			return TypExt.Object.create("Ext.util.DelayedTask", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class DelimitedValue {
		static create(config: TypExt.util.IDelimitedValueConfig, extraArgs?: any) : Ext.util.IDelimitedValue {
			return TypExt.Object.create("Ext.util.DelimitedValue", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class ElementContainer {
		static create(config: TypExt.util.IElementContainerConfig, extraArgs?: any) : Ext.util.IElementContainer {
			return TypExt.Object.create("Ext.util.ElementContainer", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Event {
		static create(config: TypExt.util.IEventConfig, extraArgs?: any) : Ext.util.IEvent {
			return TypExt.Object.create("Ext.util.Event", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Filter {
		static create(config: TypExt.util.IFilterConfig, extraArgs?: any) : Ext.util.IFilter {
			return TypExt.Object.create("Ext.util.Filter", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class FilterCollection {
		static create(config: TypExt.util.IFilterCollectionConfig, extraArgs?: any) : Ext.util.IFilterCollection {
			return TypExt.Object.create("Ext.util.FilterCollection", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Floating {
		static create(config: TypExt.util.IFloatingConfig, extraArgs?: any) : Ext.util.IFloating {
			return TypExt.Object.create("Ext.util.Floating", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Focusable {
		static create(config: TypExt.util.IFocusableConfig, extraArgs?: any) : Ext.util.IFocusable {
			return TypExt.Object.create("Ext.util.Focusable", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class FocusableContainer {
		static create(config: TypExt.util.IFocusableContainerConfig, extraArgs?: any) : Ext.util.IFocusableContainer {
			return TypExt.Object.create("Ext.util.FocusableContainer", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Format {
		static create(config: TypExt.util.IFormatConfig, extraArgs?: any) : Ext.util.IFormat {
			return TypExt.Object.create("Ext.util.Format", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Group {
		static create(config: TypExt.util.IGroupConfig, extraArgs?: any) : Ext.util.IGroup {
			return TypExt.Object.create("Ext.util.Group", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class GroupCollection {
		static create(config: TypExt.util.IGroupCollectionConfig, extraArgs?: any) : Ext.util.IGroupCollection {
			return TypExt.Object.create("Ext.util.GroupCollection", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Grouper {
		static create(config: TypExt.util.IGrouperConfig, extraArgs?: any) : Ext.util.IGrouper {
			return TypExt.Object.create("Ext.util.Grouper", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class HashMap {
		static create(config: TypExt.util.IHashMapConfig, extraArgs?: any) : Ext.util.IHashMap {
			return TypExt.Object.create("Ext.util.HashMap", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class History {
		static create(config: TypExt.util.IHistoryConfig, extraArgs?: any) : Ext.util.IHistory {
			return TypExt.Object.create("Ext.util.History", config, extraArgs );
		}
	}
}

module TypExt {
	export class History {
		static create(config: TypExt.IHistoryConfig, extraArgs?: any) : Ext.IHistory {
			return TypExt.Object.create("Ext.History", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Inflector {
		static create(config: TypExt.util.IInflectorConfig, extraArgs?: any) : Ext.util.IInflector {
			return TypExt.Object.create("Ext.util.Inflector", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class KeyMap {
		static create(config: TypExt.util.IKeyMapConfig, extraArgs?: any) : Ext.util.IKeyMap {
			return TypExt.Object.create("Ext.util.KeyMap", config, extraArgs );
		}
	}
}

module TypExt {
	export class KeyMap {
		static create(config: TypExt.IKeyMapConfig, extraArgs?: any) : Ext.IKeyMap {
			return TypExt.Object.create("Ext.KeyMap", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class KeyNav {
		static create(config: TypExt.util.IKeyNavConfig, extraArgs?: any) : Ext.util.IKeyNav {
			return TypExt.Object.create("Ext.util.KeyNav", config, extraArgs );
		}
	}
}

module TypExt {
	export class KeyNav {
		static create(config: TypExt.IKeyNavConfig, extraArgs?: any) : Ext.IKeyNav {
			return TypExt.Object.create("Ext.KeyNav", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class LocalStorage {
		static create(config: TypExt.util.ILocalStorageConfig, extraArgs?: any) : Ext.util.ILocalStorage {
			return TypExt.Object.create("Ext.util.LocalStorage", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class LruCache {
		static create(config: TypExt.util.ILruCacheConfig, extraArgs?: any) : Ext.util.ILruCache {
			return TypExt.Object.create("Ext.util.LruCache", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Memento {
		static create(config: TypExt.util.IMementoConfig, extraArgs?: any) : Ext.util.IMemento {
			return TypExt.Object.create("Ext.util.Memento", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class MixedCollection {
		static create(config: TypExt.util.IMixedCollectionConfig, extraArgs?: any) : Ext.util.IMixedCollection {
			return TypExt.Object.create("Ext.util.MixedCollection", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class ObjectTemplate {
		static create(config: TypExt.util.IObjectTemplateConfig, extraArgs?: any) : Ext.util.IObjectTemplate {
			return TypExt.Object.create("Ext.util.ObjectTemplate", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Observable {
		static create(config: TypExt.util.IObservableConfig, extraArgs?: any) : Ext.util.IObservable {
			return TypExt.Object.create("Ext.util.Observable", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Offset {
		static create(config: TypExt.util.IOffsetConfig, extraArgs?: any) : Ext.util.IOffset {
			return TypExt.Object.create("Ext.util.Offset", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Operators {
		static create(config: TypExt.util.IOperatorsConfig, extraArgs?: any) : Ext.util.IOperators {
			return TypExt.Object.create("Ext.util.Operators", config, extraArgs );
		}
	}
}

module TypExt.util.paintmonitor {
	export class Abstract {
		static create(config: TypExt.util.paintmonitor.IAbstractConfig, extraArgs?: any) : Ext.util.paintmonitor.IAbstract {
			return TypExt.Object.create("Ext.util.paintmonitor.Abstract", config, extraArgs );
		}
	}
}

module TypExt.util.paintmonitor {
	export class CssAnimation {
		static create(config: TypExt.util.paintmonitor.ICssAnimationConfig, extraArgs?: any) : Ext.util.paintmonitor.ICssAnimation {
			return TypExt.Object.create("Ext.util.paintmonitor.CssAnimation", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class PaintMonitor {
		static create(config: TypExt.util.IPaintMonitorConfig, extraArgs?: any) : Ext.util.IPaintMonitor {
			return TypExt.Object.create("Ext.util.PaintMonitor", config, extraArgs );
		}
	}
}

module TypExt.util.paintmonitor {
	export class OverflowChange {
		static create(config: TypExt.util.paintmonitor.IOverflowChangeConfig, extraArgs?: any) : Ext.util.paintmonitor.IOverflowChange {
			return TypExt.Object.create("Ext.util.paintmonitor.OverflowChange", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Point {
		static create(config: TypExt.util.IPointConfig, extraArgs?: any) : Ext.util.IPoint {
			return TypExt.Object.create("Ext.util.Point", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Positionable {
		static create(config: TypExt.util.IPositionableConfig, extraArgs?: any) : Ext.util.IPositionable {
			return TypExt.Object.create("Ext.util.Positionable", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class ProtoElement {
		static create(config: TypExt.util.IProtoElementConfig, extraArgs?: any) : Ext.util.IProtoElement {
			return TypExt.Object.create("Ext.util.ProtoElement", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Queue {
		static create(config: TypExt.util.IQueueConfig, extraArgs?: any) : Ext.util.IQueue {
			return TypExt.Object.create("Ext.util.Queue", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Region {
		static create(config: TypExt.util.IRegionConfig, extraArgs?: any) : Ext.util.IRegion {
			return TypExt.Object.create("Ext.util.Region", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Renderable {
		static create(config: TypExt.util.IRenderableConfig, extraArgs?: any) : Ext.util.IRenderable {
			return TypExt.Object.create("Ext.util.Renderable", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Schedulable {
		static create(config: TypExt.util.ISchedulableConfig, extraArgs?: any) : Ext.util.ISchedulable {
			return TypExt.Object.create("Ext.util.Schedulable", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Scheduler {
		static create(config: TypExt.util.ISchedulerConfig, extraArgs?: any) : Ext.util.IScheduler {
			return TypExt.Object.create("Ext.util.Scheduler", config, extraArgs );
		}
	}
}

module TypExt.util.sizemonitor {
	export class Abstract {
		static create(config: TypExt.util.sizemonitor.IAbstractConfig, extraArgs?: any) : Ext.util.sizemonitor.IAbstract {
			return TypExt.Object.create("Ext.util.sizemonitor.Abstract", config, extraArgs );
		}
	}
}

module TypExt.util.sizemonitor {
	export class Default {
		static create(config: TypExt.util.sizemonitor.IDefaultConfig, extraArgs?: any) : Ext.util.sizemonitor.IDefault {
			return TypExt.Object.create("Ext.util.sizemonitor.Default", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class SizeMonitor {
		static create(config: TypExt.util.ISizeMonitorConfig, extraArgs?: any) : Ext.util.ISizeMonitor {
			return TypExt.Object.create("Ext.util.SizeMonitor", config, extraArgs );
		}
	}
}

module TypExt.util.sizemonitor {
	export class OverflowChange {
		static create(config: TypExt.util.sizemonitor.IOverflowChangeConfig, extraArgs?: any) : Ext.util.sizemonitor.IOverflowChange {
			return TypExt.Object.create("Ext.util.sizemonitor.OverflowChange", config, extraArgs );
		}
	}
}

module TypExt.util.sizemonitor {
	export class Scroll {
		static create(config: TypExt.util.sizemonitor.IScrollConfig, extraArgs?: any) : Ext.util.sizemonitor.IScroll {
			return TypExt.Object.create("Ext.util.sizemonitor.Scroll", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Sortable {
		static create(config: TypExt.util.ISortableConfig, extraArgs?: any) : Ext.util.ISortable {
			return TypExt.Object.create("Ext.util.Sortable", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Sorter {
		static create(config: TypExt.util.ISorterConfig, extraArgs?: any) : Ext.util.ISorter {
			return TypExt.Object.create("Ext.util.Sorter", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class SorterCollection {
		static create(config: TypExt.util.ISorterCollectionConfig, extraArgs?: any) : Ext.util.ISorterCollection {
			return TypExt.Object.create("Ext.util.SorterCollection", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class StoreHolder {
		static create(config: TypExt.util.IStoreHolderConfig, extraArgs?: any) : Ext.util.IStoreHolder {
			return TypExt.Object.create("Ext.util.StoreHolder", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class TaskManager {
		static create(config: TypExt.util.ITaskManagerConfig, extraArgs?: any) : Ext.util.ITaskManager {
			return TypExt.Object.create("Ext.util.TaskManager", config, extraArgs );
		}
	}
}

module TypExt {
	export class TaskManager {
		static create(config: TypExt.ITaskManagerConfig, extraArgs?: any) : Ext.ITaskManager {
			return TypExt.Object.create("Ext.TaskManager", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class TaskRunner {
		static create(config: TypExt.util.ITaskRunnerConfig, extraArgs?: any) : Ext.util.ITaskRunner {
			return TypExt.Object.create("Ext.util.TaskRunner", config, extraArgs );
		}
	}
}

module TypExt.util.taskrunner {
	export class Task {
		static create(config: TypExt.util.taskrunner.ITaskConfig, extraArgs?: any) : Ext.util.taskrunner.ITask {
			return TypExt.Object.create("Ext.util.taskrunner.Task", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class TextMetrics {
		static create(config: TypExt.util.ITextMetricsConfig, extraArgs?: any) : Ext.util.ITextMetrics {
			return TypExt.Object.create("Ext.util.TextMetrics", config, extraArgs );
		}
	}
}

module TypExt.util.translatable {
	export class Abstract {
		static create(config: TypExt.util.translatable.IAbstractConfig, extraArgs?: any) : Ext.util.translatable.IAbstract {
			return TypExt.Object.create("Ext.util.translatable.Abstract", config, extraArgs );
		}
	}
}

module TypExt.util.translatable {
	export class CssPosition {
		static create(config: TypExt.util.translatable.ICssPositionConfig, extraArgs?: any) : Ext.util.translatable.ICssPosition {
			return TypExt.Object.create("Ext.util.translatable.CssPosition", config, extraArgs );
		}
	}
}

module TypExt.util.translatable {
	export class CssTransform {
		static create(config: TypExt.util.translatable.ICssTransformConfig, extraArgs?: any) : Ext.util.translatable.ICssTransform {
			return TypExt.Object.create("Ext.util.translatable.CssTransform", config, extraArgs );
		}
	}
}

module TypExt.util.translatable {
	export class Dom {
		static create(config: TypExt.util.translatable.IDomConfig, extraArgs?: any) : Ext.util.translatable.IDom {
			return TypExt.Object.create("Ext.util.translatable.Dom", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class Translatable {
		static create(config: TypExt.util.ITranslatableConfig, extraArgs?: any) : Ext.util.ITranslatable {
			return TypExt.Object.create("Ext.util.Translatable", config, extraArgs );
		}
	}
}

module TypExt.util.translatable {
	export class ScrollParent {
		static create(config: TypExt.util.translatable.IScrollParentConfig, extraArgs?: any) : Ext.util.translatable.IScrollParent {
			return TypExt.Object.create("Ext.util.translatable.ScrollParent", config, extraArgs );
		}
	}
}

module TypExt.util.translatable {
	export class ScrollPosition {
		static create(config: TypExt.util.translatable.IScrollPositionConfig, extraArgs?: any) : Ext.util.translatable.IScrollPosition {
			return TypExt.Object.create("Ext.util.translatable.ScrollPosition", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class TSV {
		static create(config: TypExt.util.ITSVConfig, extraArgs?: any) : Ext.util.ITSV {
			return TypExt.Object.create("Ext.util.TSV", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class XTemplateCompiler {
		static create(config: TypExt.util.IXTemplateCompilerConfig, extraArgs?: any) : Ext.util.IXTemplateCompiler {
			return TypExt.Object.create("Ext.util.XTemplateCompiler", config, extraArgs );
		}
	}
}

module TypExt.util {
	export class XTemplateParser {
		static create(config: TypExt.util.IXTemplateParserConfig, extraArgs?: any) : Ext.util.IXTemplateParser {
			return TypExt.Object.create("Ext.util.XTemplateParser", config, extraArgs );
		}
	}
}

module TypExt.ux.colorpick {
	export class Button {
		static create(config: TypExt.ux.colorpick.IButtonConfig, extraArgs?: any) : Ext.ux.colorpick.IButton {
			return TypExt.Object.create("Ext.ux.colorpick.Button", config, extraArgs );
		}
	}
}

module TypExt.ux.colorpick {
	export class ColorMap {
		static create(config: TypExt.ux.colorpick.IColorMapConfig, extraArgs?: any) : Ext.ux.colorpick.IColorMap {
			return TypExt.Object.create("Ext.ux.colorpick.ColorMap", config, extraArgs );
		}
	}
}

module TypExt.ux.colorpick {
	export class ColorPreview {
		static create(config: TypExt.ux.colorpick.IColorPreviewConfig, extraArgs?: any) : Ext.ux.colorpick.IColorPreview {
			return TypExt.Object.create("Ext.ux.colorpick.ColorPreview", config, extraArgs );
		}
	}
}

module TypExt.ux.colorpick {
	export class Field {
		static create(config: TypExt.ux.colorpick.IFieldConfig, extraArgs?: any) : Ext.ux.colorpick.IField {
			return TypExt.Object.create("Ext.ux.colorpick.Field", config, extraArgs );
		}
	}
}

module TypExt.ux.colorpick {
	export class Selector {
		static create(config: TypExt.ux.colorpick.ISelectorConfig, extraArgs?: any) : Ext.ux.colorpick.ISelector {
			return TypExt.Object.create("Ext.ux.colorpick.Selector", config, extraArgs );
		}
	}
}

module TypExt.ux.colorpick {
	export class SelectorModel {
		static create(config: TypExt.ux.colorpick.ISelectorModelConfig, extraArgs?: any) : Ext.ux.colorpick.ISelectorModel {
			return TypExt.Object.create("Ext.ux.colorpick.SelectorModel", config, extraArgs );
		}
	}
}

module TypExt.ux.colorpick {
	export class Slider {
		static create(config: TypExt.ux.colorpick.ISliderConfig, extraArgs?: any) : Ext.ux.colorpick.ISlider {
			return TypExt.Object.create("Ext.ux.colorpick.Slider", config, extraArgs );
		}
	}
}

module TypExt.ux.colorpick {
	export class SliderAlpha {
		static create(config: TypExt.ux.colorpick.ISliderAlphaConfig, extraArgs?: any) : Ext.ux.colorpick.ISliderAlpha {
			return TypExt.Object.create("Ext.ux.colorpick.SliderAlpha", config, extraArgs );
		}
	}
}

module TypExt.ux.colorpick {
	export class SliderHue {
		static create(config: TypExt.ux.colorpick.ISliderHueConfig, extraArgs?: any) : Ext.ux.colorpick.ISliderHue {
			return TypExt.Object.create("Ext.ux.colorpick.SliderHue", config, extraArgs );
		}
	}
}

module TypExt.ux.colorpick {
	export class SliderSaturation {
		static create(config: TypExt.ux.colorpick.ISliderSaturationConfig, extraArgs?: any) : Ext.ux.colorpick.ISliderSaturation {
			return TypExt.Object.create("Ext.ux.colorpick.SliderSaturation", config, extraArgs );
		}
	}
}

module TypExt.ux.colorpick {
	export class SliderValue {
		static create(config: TypExt.ux.colorpick.ISliderValueConfig, extraArgs?: any) : Ext.ux.colorpick.ISliderValue {
			return TypExt.Object.create("Ext.ux.colorpick.SliderValue", config, extraArgs );
		}
	}
}

module TypExt.ux.rating {
	export class Picker {
		static create(config: TypExt.ux.rating.IPickerConfig, extraArgs?: any) : Ext.ux.rating.IPicker {
			return TypExt.Object.create("Ext.ux.rating.Picker", config, extraArgs );
		}
	}
}

module TypExt {
	export class Version {
		static create(config: TypExt.IVersionConfig, extraArgs?: any) : Ext.IVersion {
			return TypExt.Object.create("Ext.Version", config, extraArgs );
		}
	}
}

module TypExt.view {
	export class AbstractView {
		static create(config: TypExt.view.IAbstractViewConfig, extraArgs?: any) : Ext.view.IAbstractView {
			return TypExt.Object.create("Ext.view.AbstractView", config, extraArgs );
		}
	}
}

module TypExt.view {
	export class BoundList {
		static create(config: TypExt.view.IBoundListConfig, extraArgs?: any) : Ext.view.IBoundList {
			return TypExt.Object.create("Ext.view.BoundList", config, extraArgs );
		}
	}
}

module TypExt {
	export class BoundList {
		static create(config: TypExt.IBoundListConfig, extraArgs?: any) : Ext.IBoundList {
			return TypExt.Object.create("Ext.BoundList", config, extraArgs );
		}
	}
}

module TypExt.view {
	export class BoundListKeyNav {
		static create(config: TypExt.view.IBoundListKeyNavConfig, extraArgs?: any) : Ext.view.IBoundListKeyNav {
			return TypExt.Object.create("Ext.view.BoundListKeyNav", config, extraArgs );
		}
	}
}

module TypExt.view {
	export class DragZone {
		static create(config: TypExt.view.IDragZoneConfig, extraArgs?: any) : Ext.view.IDragZone {
			return TypExt.Object.create("Ext.view.DragZone", config, extraArgs );
		}
	}
}

module TypExt.view {
	export class DropZone {
		static create(config: TypExt.view.IDropZoneConfig, extraArgs?: any) : Ext.view.IDropZone {
			return TypExt.Object.create("Ext.view.DropZone", config, extraArgs );
		}
	}
}

module TypExt.view {
	export class MultiSelector {
		static create(config: TypExt.view.IMultiSelectorConfig, extraArgs?: any) : Ext.view.IMultiSelector {
			return TypExt.Object.create("Ext.view.MultiSelector", config, extraArgs );
		}
	}
}

module TypExt.view {
	export class MultiSelectorSearch {
		static create(config: TypExt.view.IMultiSelectorSearchConfig, extraArgs?: any) : Ext.view.IMultiSelectorSearch {
			return TypExt.Object.create("Ext.view.MultiSelectorSearch", config, extraArgs );
		}
	}
}

module TypExt.view {
	export class NavigationModel {
		static create(config: TypExt.view.INavigationModelConfig, extraArgs?: any) : Ext.view.INavigationModel {
			return TypExt.Object.create("Ext.view.NavigationModel", config, extraArgs );
		}
	}
}

module TypExt.view {
	export class NodeCache {
		static create(config: TypExt.view.INodeCacheConfig, extraArgs?: any) : Ext.view.INodeCache {
			return TypExt.Object.create("Ext.view.NodeCache", config, extraArgs );
		}
	}
}

module TypExt.view {
	export class Table {
		static create(config: TypExt.view.ITableConfig, extraArgs?: any) : Ext.view.ITable {
			return TypExt.Object.create("Ext.view.Table", config, extraArgs );
		}
	}
}

module TypExt.grid {
	export class View {
		static create(config: TypExt.grid.IViewConfig, extraArgs?: any) : Ext.grid.IView {
			return TypExt.Object.create("Ext.grid.View", config, extraArgs );
		}
	}
}

module TypExt.view {
	export class TableLayout {
		static create(config: TypExt.view.ITableLayoutConfig, extraArgs?: any) : Ext.view.ITableLayout {
			return TypExt.Object.create("Ext.view.TableLayout", config, extraArgs );
		}
	}
}

module TypExt.view {
	export class View {
		static create(config: TypExt.view.IViewConfig, extraArgs?: any) : Ext.view.IView {
			return TypExt.Object.create("Ext.view.View", config, extraArgs );
		}
	}
}

module TypExt {
	export class DataView {
		static create(config: TypExt.IDataViewConfig, extraArgs?: any) : Ext.IDataView {
			return TypExt.Object.create("Ext.DataView", config, extraArgs );
		}
	}
}

module TypExt {
	export class Widget {
		static create(config: TypExt.IWidgetConfig, extraArgs?: any) : Ext.IWidget {
			return TypExt.Object.create("Ext.Widget", config, extraArgs );
		}
	}
}

module TypExt.window {
	export class MessageBox {
		static create(config: TypExt.window.IMessageBoxConfig, extraArgs?: any) : Ext.window.IMessageBox {
			return TypExt.Object.create("Ext.window.MessageBox", config, extraArgs );
		}
	}
}

module TypExt.window {
	export class Toast {
		static create(config: TypExt.window.IToastConfig, extraArgs?: any) : Ext.window.IToast {
			return TypExt.Object.create("Ext.window.Toast", config, extraArgs );
		}
	}
}

module TypExt.window {
	export class Window {
		static create(config: TypExt.window.IWindowConfig, extraArgs?: any) : Ext.window.IWindow {
			return TypExt.Object.create("Ext.window.Window", config, extraArgs );
		}
	}
}

module TypExt {
	export class Window {
		static create(config: TypExt.IWindowConfig, extraArgs?: any) : Ext.IWindow {
			return TypExt.Object.create("Ext.Window", config, extraArgs );
		}
	}
}

module TypExt {
	export class WindowManager {
		static create(config: TypExt.IWindowManagerConfig, extraArgs?: any) : Ext.IWindowManager {
			return TypExt.Object.create("Ext.WindowManager", config, extraArgs );
		}
	}
}

module TypExt {
	export class XTemplate {
		static create(config: TypExt.IXTemplateConfig, extraArgs?: any) : Ext.IXTemplate {
			return TypExt.Object.create("Ext.XTemplate", config, extraArgs );
		}
	}
}

module TypExt {
	export class ZIndexManager {
		static create(config: TypExt.IZIndexManagerConfig, extraArgs?: any) : Ext.IZIndexManager {
			return TypExt.Object.create("Ext.ZIndexManager", config, extraArgs );
		}
	}
}

module TypExt {
	export class WindowGroup {
		static create(config: TypExt.IWindowGroupConfig, extraArgs?: any) : Ext.IWindowGroup {
			return TypExt.Object.create("Ext.WindowGroup", config, extraArgs );
		}
	}
}

