// Factory for ExtJS 5.1.1
// Forked Project: http://www.sencha.com/products/extjs/
// Generated by Jeremie Turbet @IPBS - Toulouse
// 2016-f√©vr.-22 12:50:44 PM
var TypExt;
(function (TypExt) {
    var Object = (function () {
        function Object() {
        }
        Object.create = function (className, config, extraArgs) {
            if (extraArgs == null)
                return Ext.create(className, config);
            else
                return Ext.create(className, Ext.Object.merge(config, extraArgs));
        };
        return Object;
    }());
    TypExt.Object = Object;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var AbstractManager = (function () {
        function AbstractManager() {
        }
        AbstractManager.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.AbstractManager", config, extraArgs);
        };
        return AbstractManager;
    }());
    TypExt.AbstractManager = AbstractManager;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Action = (function () {
        function Action() {
        }
        Action.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Action", config, extraArgs);
        };
        return Action;
    }());
    TypExt.Action = Action;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Ajax = (function () {
        function Ajax() {
        }
        Ajax.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Ajax", config, extraArgs);
        };
        return Ajax;
    }());
    TypExt.Ajax = Ajax;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var AnimationQueue = (function () {
        function AnimationQueue() {
        }
        AnimationQueue.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.AnimationQueue", config, extraArgs);
        };
        return AnimationQueue;
    }());
    TypExt.AnimationQueue = AnimationQueue;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var Application = (function () {
            function Application() {
            }
            Application.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.app.Application", config, extraArgs);
            };
            return Application;
        }());
        app.Application = Application;
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var BaseController = (function () {
            function BaseController() {
            }
            BaseController.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.app.BaseController", config, extraArgs);
            };
            return BaseController;
        }());
        app.BaseController = BaseController;
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var bind;
        (function (bind) {
            var AbstractStub = (function () {
                function AbstractStub() {
                }
                AbstractStub.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.app.bind.AbstractStub", config, extraArgs);
                };
                return AbstractStub;
            }());
            bind.AbstractStub = AbstractStub;
        })(bind = app.bind || (app.bind = {}));
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var bind;
        (function (bind) {
            var BaseBinding = (function () {
                function BaseBinding() {
                }
                BaseBinding.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.app.bind.BaseBinding", config, extraArgs);
                };
                return BaseBinding;
            }());
            bind.BaseBinding = BaseBinding;
        })(bind = app.bind || (app.bind = {}));
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var bind;
        (function (bind) {
            var Binding = (function () {
                function Binding() {
                }
                Binding.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.app.bind.Binding", config, extraArgs);
                };
                return Binding;
            }());
            bind.Binding = Binding;
        })(bind = app.bind || (app.bind = {}));
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var bind;
        (function (bind) {
            var Formula = (function () {
                function Formula() {
                }
                Formula.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.app.bind.Formula", config, extraArgs);
                };
                return Formula;
            }());
            bind.Formula = Formula;
        })(bind = app.bind || (app.bind = {}));
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var bind;
        (function (bind) {
            var LinkStub = (function () {
                function LinkStub() {
                }
                LinkStub.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.app.bind.LinkStub", config, extraArgs);
                };
                return LinkStub;
            }());
            bind.LinkStub = LinkStub;
        })(bind = app.bind || (app.bind = {}));
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var bind;
        (function (bind) {
            var Multi = (function () {
                function Multi() {
                }
                Multi.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.app.bind.Multi", config, extraArgs);
                };
                return Multi;
            }());
            bind.Multi = Multi;
        })(bind = app.bind || (app.bind = {}));
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var bind;
        (function (bind) {
            var RootStub = (function () {
                function RootStub() {
                }
                RootStub.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.app.bind.RootStub", config, extraArgs);
                };
                return RootStub;
            }());
            bind.RootStub = RootStub;
        })(bind = app.bind || (app.bind = {}));
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var bind;
        (function (bind) {
            var Stub = (function () {
                function Stub() {
                }
                Stub.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.app.bind.Stub", config, extraArgs);
                };
                return Stub;
            }());
            bind.Stub = Stub;
        })(bind = app.bind || (app.bind = {}));
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var bind;
        (function (bind) {
            var Template = (function () {
                function Template() {
                }
                Template.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.app.bind.Template", config, extraArgs);
                };
                return Template;
            }());
            bind.Template = Template;
        })(bind = app.bind || (app.bind = {}));
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var bind;
        (function (bind) {
            var TemplateBinding = (function () {
                function TemplateBinding() {
                }
                TemplateBinding.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.app.bind.TemplateBinding", config, extraArgs);
                };
                return TemplateBinding;
            }());
            bind.TemplateBinding = TemplateBinding;
        })(bind = app.bind || (app.bind = {}));
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var bindinspector;
        (function (bindinspector) {
            var Environment = (function () {
                function Environment() {
                }
                Environment.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.app.bindinspector.Environment", config, extraArgs);
                };
                return Environment;
            }());
            bindinspector.Environment = Environment;
        })(bindinspector = app.bindinspector || (app.bindinspector = {}));
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var bindinspector;
        (function (bindinspector) {
            var Util = (function () {
                function Util() {
                }
                Util.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.app.bindinspector.Util", config, extraArgs);
                };
                return Util;
            }());
            bindinspector.Util = Util;
        })(bindinspector = app.bindinspector || (app.bindinspector = {}));
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var Controller = (function () {
            function Controller() {
            }
            Controller.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.app.Controller", config, extraArgs);
            };
            return Controller;
        }());
        app.Controller = Controller;
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var domain;
        (function (domain) {
            var Component = (function () {
                function Component() {
                }
                Component.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.app.domain.Component", config, extraArgs);
                };
                return Component;
            }());
            domain.Component = Component;
        })(domain = app.domain || (app.domain = {}));
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var domain;
        (function (domain) {
            var Controller = (function () {
                function Controller() {
                }
                Controller.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.app.domain.Controller", config, extraArgs);
                };
                return Controller;
            }());
            domain.Controller = Controller;
        })(domain = app.domain || (app.domain = {}));
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var domain;
        (function (domain) {
            var Direct = (function () {
                function Direct() {
                }
                Direct.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.app.domain.Direct", config, extraArgs);
                };
                return Direct;
            }());
            domain.Direct = Direct;
        })(domain = app.domain || (app.domain = {}));
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var domain;
        (function (domain) {
            var Global = (function () {
                function Global() {
                }
                Global.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.app.domain.Global", config, extraArgs);
                };
                return Global;
            }());
            domain.Global = Global;
        })(domain = app.domain || (app.domain = {}));
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var domain;
        (function (domain) {
            var Store = (function () {
                function Store() {
                }
                Store.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.app.domain.Store", config, extraArgs);
                };
                return Store;
            }());
            domain.Store = Store;
        })(domain = app.domain || (app.domain = {}));
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var domain;
        (function (domain) {
            var View = (function () {
                function View() {
                }
                View.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.app.domain.View", config, extraArgs);
                };
                return View;
            }());
            domain.View = View;
        })(domain = app.domain || (app.domain = {}));
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var EventBus = (function () {
            function EventBus() {
            }
            EventBus.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.app.EventBus", config, extraArgs);
            };
            return EventBus;
        }());
        app.EventBus = EventBus;
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var EventDomain = (function () {
            function EventDomain() {
            }
            EventDomain.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.app.EventDomain", config, extraArgs);
            };
            return EventDomain;
        }());
        app.EventDomain = EventDomain;
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var Profile = (function () {
            function Profile() {
            }
            Profile.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.app.Profile", config, extraArgs);
            };
            return Profile;
        }());
        app.Profile = Profile;
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var route;
        (function (route) {
            var Queue = (function () {
                function Queue() {
                }
                Queue.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.app.route.Queue", config, extraArgs);
                };
                return Queue;
            }());
            route.Queue = Queue;
        })(route = app.route || (app.route = {}));
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var route;
        (function (route) {
            var Route = (function () {
                function Route() {
                }
                Route.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.app.route.Route", config, extraArgs);
                };
                return Route;
            }());
            route.Route = Route;
        })(route = app.route || (app.route = {}));
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var route;
        (function (route) {
            var Router = (function () {
                function Router() {
                }
                Router.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.app.route.Router", config, extraArgs);
                };
                return Router;
            }());
            route.Router = Router;
        })(route = app.route || (app.route = {}));
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var Util = (function () {
            function Util() {
            }
            Util.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.app.Util", config, extraArgs);
            };
            return Util;
        }());
        app.Util = Util;
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var ViewController = (function () {
            function ViewController() {
            }
            ViewController.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.app.ViewController", config, extraArgs);
            };
            return ViewController;
        }());
        app.ViewController = ViewController;
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var app;
    (function (app) {
        var ViewModel = (function () {
            function ViewModel() {
            }
            ViewModel.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.app.ViewModel", config, extraArgs);
            };
            return ViewModel;
        }());
        app.ViewModel = ViewModel;
    })(app = TypExt.app || (TypExt.app = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Array = (function () {
        function Array() {
        }
        Array.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Array", config, extraArgs);
        };
        return Array;
    }());
    TypExt.Array = Array;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Assert = (function () {
        function Assert() {
        }
        Assert.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Assert", config, extraArgs);
        };
        return Assert;
    }());
    TypExt.Assert = Assert;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Base = (function () {
        function Base() {
        }
        Base.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Base", config, extraArgs);
        };
        return Base;
    }());
    TypExt.Base = Base;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Browser = (function () {
        function Browser() {
        }
        Browser.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Browser", config, extraArgs);
        };
        return Browser;
    }());
    TypExt.Browser = Browser;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var button;
    (function (button) {
        var Button = (function () {
            function Button() {
            }
            Button.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.button.Button", config, extraArgs);
            };
            return Button;
        }());
        button.Button = Button;
    })(button = TypExt.button || (TypExt.button = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Button = (function () {
        function Button() {
        }
        Button.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Button", config, extraArgs);
        };
        return Button;
    }());
    TypExt.Button = Button;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var button;
    (function (button) {
        var Cycle = (function () {
            function Cycle() {
            }
            Cycle.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.button.Cycle", config, extraArgs);
            };
            return Cycle;
        }());
        button.Cycle = Cycle;
    })(button = TypExt.button || (TypExt.button = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var CycleButton = (function () {
        function CycleButton() {
        }
        CycleButton.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.CycleButton", config, extraArgs);
        };
        return CycleButton;
    }());
    TypExt.CycleButton = CycleButton;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var button;
    (function (button) {
        var Manager = (function () {
            function Manager() {
            }
            Manager.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.button.Manager", config, extraArgs);
            };
            return Manager;
        }());
        button.Manager = Manager;
    })(button = TypExt.button || (TypExt.button = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ButtonToggleManager = (function () {
        function ButtonToggleManager() {
        }
        ButtonToggleManager.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.ButtonToggleManager", config, extraArgs);
        };
        return ButtonToggleManager;
    }());
    TypExt.ButtonToggleManager = ButtonToggleManager;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var button;
    (function (button) {
        var Segmented = (function () {
            function Segmented() {
            }
            Segmented.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.button.Segmented", config, extraArgs);
            };
            return Segmented;
        }());
        button.Segmented = Segmented;
    })(button = TypExt.button || (TypExt.button = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var button;
    (function (button) {
        var Split = (function () {
            function Split() {
            }
            Split.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.button.Split", config, extraArgs);
            };
            return Split;
        }());
        button.Split = Split;
    })(button = TypExt.button || (TypExt.button = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var SplitButton = (function () {
        function SplitButton() {
        }
        SplitButton.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.SplitButton", config, extraArgs);
        };
        return SplitButton;
    }());
    TypExt.SplitButton = SplitButton;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var AbstractChart = (function () {
            function AbstractChart() {
            }
            AbstractChart.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.chart.AbstractChart", config, extraArgs);
            };
            return AbstractChart;
        }());
        chart.AbstractChart = AbstractChart;
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var axis;
        (function (axis) {
            var Axis = (function () {
                function Axis() {
                }
                Axis.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.axis.Axis", config, extraArgs);
                };
                return Axis;
            }());
            axis.Axis = Axis;
        })(axis = chart.axis || (chart.axis = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var axis;
        (function (axis) {
            var Axis3D = (function () {
                function Axis3D() {
                }
                Axis3D.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.axis.Axis3D", config, extraArgs);
                };
                return Axis3D;
            }());
            axis.Axis3D = Axis3D;
        })(axis = chart.axis || (chart.axis = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var axis;
        (function (axis) {
            var Category = (function () {
                function Category() {
                }
                Category.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.axis.Category", config, extraArgs);
                };
                return Category;
            }());
            axis.Category = Category;
        })(axis = chart.axis || (chart.axis = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var axis;
        (function (axis) {
            var Category3D = (function () {
                function Category3D() {
                }
                Category3D.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.axis.Category3D", config, extraArgs);
                };
                return Category3D;
            }());
            axis.Category3D = Category3D;
        })(axis = chart.axis || (chart.axis = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var axis;
        (function (axis) {
            var layout;
            (function (layout) {
                var CombineDuplicate = (function () {
                    function CombineDuplicate() {
                    }
                    CombineDuplicate.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.chart.axis.layout.CombineDuplicate", config, extraArgs);
                    };
                    return CombineDuplicate;
                }());
                layout.CombineDuplicate = CombineDuplicate;
            })(layout = axis.layout || (axis.layout = {}));
        })(axis = chart.axis || (chart.axis = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var axis;
        (function (axis) {
            var layout;
            (function (layout) {
                var Continuous = (function () {
                    function Continuous() {
                    }
                    Continuous.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.chart.axis.layout.Continuous", config, extraArgs);
                    };
                    return Continuous;
                }());
                layout.Continuous = Continuous;
            })(layout = axis.layout || (axis.layout = {}));
        })(axis = chart.axis || (chart.axis = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var axis;
        (function (axis) {
            var layout;
            (function (layout) {
                var Discrete = (function () {
                    function Discrete() {
                    }
                    Discrete.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.chart.axis.layout.Discrete", config, extraArgs);
                    };
                    return Discrete;
                }());
                layout.Discrete = Discrete;
            })(layout = axis.layout || (axis.layout = {}));
        })(axis = chart.axis || (chart.axis = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var axis;
        (function (axis) {
            var layout;
            (function (layout) {
                var Layout = (function () {
                    function Layout() {
                    }
                    Layout.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.chart.axis.layout.Layout", config, extraArgs);
                    };
                    return Layout;
                }());
                layout.Layout = Layout;
            })(layout = axis.layout || (axis.layout = {}));
        })(axis = chart.axis || (chart.axis = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var axis;
        (function (axis) {
            var Numeric = (function () {
                function Numeric() {
                }
                Numeric.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.axis.Numeric", config, extraArgs);
                };
                return Numeric;
            }());
            axis.Numeric = Numeric;
        })(axis = chart.axis || (chart.axis = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var axis;
        (function (axis) {
            var Numeric3D = (function () {
                function Numeric3D() {
                }
                Numeric3D.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.axis.Numeric3D", config, extraArgs);
                };
                return Numeric3D;
            }());
            axis.Numeric3D = Numeric3D;
        })(axis = chart.axis || (chart.axis = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var axis;
        (function (axis) {
            var segmenter;
            (function (segmenter) {
                var Names = (function () {
                    function Names() {
                    }
                    Names.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.chart.axis.segmenter.Names", config, extraArgs);
                    };
                    return Names;
                }());
                segmenter.Names = Names;
            })(segmenter = axis.segmenter || (axis.segmenter = {}));
        })(axis = chart.axis || (chart.axis = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var axis;
        (function (axis) {
            var segmenter;
            (function (segmenter) {
                var Numeric = (function () {
                    function Numeric() {
                    }
                    Numeric.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.chart.axis.segmenter.Numeric", config, extraArgs);
                    };
                    return Numeric;
                }());
                segmenter.Numeric = Numeric;
            })(segmenter = axis.segmenter || (axis.segmenter = {}));
        })(axis = chart.axis || (chart.axis = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var axis;
        (function (axis) {
            var segmenter;
            (function (segmenter) {
                var Segmenter = (function () {
                    function Segmenter() {
                    }
                    Segmenter.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.chart.axis.segmenter.Segmenter", config, extraArgs);
                    };
                    return Segmenter;
                }());
                segmenter.Segmenter = Segmenter;
            })(segmenter = axis.segmenter || (axis.segmenter = {}));
        })(axis = chart.axis || (chart.axis = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var axis;
        (function (axis) {
            var segmenter;
            (function (segmenter) {
                var Time = (function () {
                    function Time() {
                    }
                    Time.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.chart.axis.segmenter.Time", config, extraArgs);
                    };
                    return Time;
                }());
                segmenter.Time = Time;
            })(segmenter = axis.segmenter || (axis.segmenter = {}));
        })(axis = chart.axis || (chart.axis = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var axis;
        (function (axis) {
            var sprite;
            (function (sprite) {
                var Axis = (function () {
                    function Axis() {
                    }
                    Axis.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.chart.axis.sprite.Axis", config, extraArgs);
                    };
                    return Axis;
                }());
                sprite.Axis = Axis;
            })(sprite = axis.sprite || (axis.sprite = {}));
        })(axis = chart.axis || (chart.axis = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var axis;
        (function (axis) {
            var sprite;
            (function (sprite) {
                var Axis3D = (function () {
                    function Axis3D() {
                    }
                    Axis3D.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.chart.axis.sprite.Axis3D", config, extraArgs);
                    };
                    return Axis3D;
                }());
                sprite.Axis3D = Axis3D;
            })(sprite = axis.sprite || (axis.sprite = {}));
        })(axis = chart.axis || (chart.axis = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var axis;
        (function (axis) {
            var Time = (function () {
                function Time() {
                }
                Time.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.axis.Time", config, extraArgs);
                };
                return Time;
            }());
            axis.Time = Time;
        })(axis = chart.axis || (chart.axis = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var axis;
        (function (axis) {
            var Time3D = (function () {
                function Time3D() {
                }
                Time3D.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.axis.Time3D", config, extraArgs);
                };
                return Time3D;
            }());
            axis.Time3D = Time3D;
        })(axis = chart.axis || (chart.axis = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var CartesianChart = (function () {
            function CartesianChart() {
            }
            CartesianChart.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.chart.CartesianChart", config, extraArgs);
            };
            return CartesianChart;
        }());
        chart.CartesianChart = CartesianChart;
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var Chart = (function () {
            function Chart() {
            }
            Chart.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.chart.Chart", config, extraArgs);
            };
            return Chart;
        }());
        chart.Chart = Chart;
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var grid;
        (function (grid) {
            var CircularGrid = (function () {
                function CircularGrid() {
                }
                CircularGrid.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.grid.CircularGrid", config, extraArgs);
                };
                return CircularGrid;
            }());
            grid.CircularGrid = CircularGrid;
        })(grid = chart.grid || (chart.grid = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var grid;
        (function (grid) {
            var HorizontalGrid = (function () {
                function HorizontalGrid() {
                }
                HorizontalGrid.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.grid.HorizontalGrid", config, extraArgs);
                };
                return HorizontalGrid;
            }());
            grid.HorizontalGrid = HorizontalGrid;
        })(grid = chart.grid || (chart.grid = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var grid;
        (function (grid) {
            var HorizontalGrid3D = (function () {
                function HorizontalGrid3D() {
                }
                HorizontalGrid3D.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.grid.HorizontalGrid3D", config, extraArgs);
                };
                return HorizontalGrid3D;
            }());
            grid.HorizontalGrid3D = HorizontalGrid3D;
        })(grid = chart.grid || (chart.grid = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var grid;
        (function (grid) {
            var RadialGrid = (function () {
                function RadialGrid() {
                }
                RadialGrid.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.grid.RadialGrid", config, extraArgs);
                };
                return RadialGrid;
            }());
            grid.RadialGrid = RadialGrid;
        })(grid = chart.grid || (chart.grid = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var grid;
        (function (grid) {
            var VerticalGrid = (function () {
                function VerticalGrid() {
                }
                VerticalGrid.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.grid.VerticalGrid", config, extraArgs);
                };
                return VerticalGrid;
            }());
            grid.VerticalGrid = VerticalGrid;
        })(grid = chart.grid || (chart.grid = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var grid;
        (function (grid) {
            var VerticalGrid3D = (function () {
                function VerticalGrid3D() {
                }
                VerticalGrid3D.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.grid.VerticalGrid3D", config, extraArgs);
                };
                return VerticalGrid3D;
            }());
            grid.VerticalGrid3D = VerticalGrid3D;
        })(grid = chart.grid || (chart.grid = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var interactions;
        (function (interactions) {
            var Abstract = (function () {
                function Abstract() {
                }
                Abstract.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.interactions.Abstract", config, extraArgs);
                };
                return Abstract;
            }());
            interactions.Abstract = Abstract;
        })(interactions = chart.interactions || (chart.interactions = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var interactions;
        (function (interactions) {
            var Crosshair = (function () {
                function Crosshair() {
                }
                Crosshair.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.interactions.Crosshair", config, extraArgs);
                };
                return Crosshair;
            }());
            interactions.Crosshair = Crosshair;
        })(interactions = chart.interactions || (chart.interactions = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var interactions;
        (function (interactions) {
            var CrossZoom = (function () {
                function CrossZoom() {
                }
                CrossZoom.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.interactions.CrossZoom", config, extraArgs);
                };
                return CrossZoom;
            }());
            interactions.CrossZoom = CrossZoom;
        })(interactions = chart.interactions || (chart.interactions = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var interactions;
        (function (interactions) {
            var ItemHighlight = (function () {
                function ItemHighlight() {
                }
                ItemHighlight.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.interactions.ItemHighlight", config, extraArgs);
                };
                return ItemHighlight;
            }());
            interactions.ItemHighlight = ItemHighlight;
        })(interactions = chart.interactions || (chart.interactions = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var interactions;
        (function (interactions) {
            var ItemInfo = (function () {
                function ItemInfo() {
                }
                ItemInfo.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.interactions.ItemInfo", config, extraArgs);
                };
                return ItemInfo;
            }());
            interactions.ItemInfo = ItemInfo;
        })(interactions = chart.interactions || (chart.interactions = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var interactions;
        (function (interactions) {
            var PanZoom = (function () {
                function PanZoom() {
                }
                PanZoom.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.interactions.PanZoom", config, extraArgs);
                };
                return PanZoom;
            }());
            interactions.PanZoom = PanZoom;
        })(interactions = chart.interactions || (chart.interactions = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var interactions;
        (function (interactions) {
            var Rotate = (function () {
                function Rotate() {
                }
                Rotate.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.interactions.Rotate", config, extraArgs);
                };
                return Rotate;
            }());
            interactions.Rotate = Rotate;
        })(interactions = chart.interactions || (chart.interactions = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var interactions;
        (function (interactions) {
            var RotatePie3D = (function () {
                function RotatePie3D() {
                }
                RotatePie3D.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.interactions.RotatePie3D", config, extraArgs);
                };
                return RotatePie3D;
            }());
            interactions.RotatePie3D = RotatePie3D;
        })(interactions = chart.interactions || (chart.interactions = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var label;
        (function (label) {
            var Callout = (function () {
                function Callout() {
                }
                Callout.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.label.Callout", config, extraArgs);
                };
                return Callout;
            }());
            label.Callout = Callout;
        })(label = chart.label || (chart.label = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var label;
        (function (label) {
            var Label = (function () {
                function Label() {
                }
                Label.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.label.Label", config, extraArgs);
                };
                return Label;
            }());
            label.Label = Label;
        })(label = chart.label || (chart.label = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var Legend = (function () {
            function Legend() {
            }
            Legend.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.chart.Legend", config, extraArgs);
            };
            return Legend;
        }());
        chart.Legend = Legend;
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var LegendBase = (function () {
            function LegendBase() {
            }
            LegendBase.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.chart.LegendBase", config, extraArgs);
            };
            return LegendBase;
        }());
        chart.LegendBase = LegendBase;
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var MarkerHolder = (function () {
            function MarkerHolder() {
            }
            MarkerHolder.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.chart.MarkerHolder", config, extraArgs);
            };
            return MarkerHolder;
        }());
        chart.MarkerHolder = MarkerHolder;
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var Markers = (function () {
            function Markers() {
            }
            Markers.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.chart.Markers", config, extraArgs);
            };
            return Markers;
        }());
        chart.Markers = Markers;
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var plugin;
        (function (plugin) {
            var ItemEvents = (function () {
                function ItemEvents() {
                }
                ItemEvents.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.plugin.ItemEvents", config, extraArgs);
                };
                return ItemEvents;
            }());
            plugin.ItemEvents = ItemEvents;
        })(plugin = chart.plugin || (chart.plugin = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var PolarChart = (function () {
            function PolarChart() {
            }
            PolarChart.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.chart.PolarChart", config, extraArgs);
            };
            return PolarChart;
        }());
        chart.PolarChart = PolarChart;
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var Area = (function () {
                function Area() {
                }
                Area.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.series.Area", config, extraArgs);
                };
                return Area;
            }());
            series.Area = Area;
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var Bar = (function () {
                function Bar() {
                }
                Bar.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.series.Bar", config, extraArgs);
                };
                return Bar;
            }());
            series.Bar = Bar;
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var Bar3D = (function () {
                function Bar3D() {
                }
                Bar3D.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.series.Bar3D", config, extraArgs);
                };
                return Bar3D;
            }());
            series.Bar3D = Bar3D;
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var CandleStick = (function () {
                function CandleStick() {
                }
                CandleStick.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.series.CandleStick", config, extraArgs);
                };
                return CandleStick;
            }());
            series.CandleStick = CandleStick;
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var Cartesian = (function () {
                function Cartesian() {
                }
                Cartesian.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.series.Cartesian", config, extraArgs);
                };
                return Cartesian;
            }());
            series.Cartesian = Cartesian;
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var Gauge = (function () {
                function Gauge() {
                }
                Gauge.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.series.Gauge", config, extraArgs);
                };
                return Gauge;
            }());
            series.Gauge = Gauge;
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var Line = (function () {
                function Line() {
                }
                Line.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.series.Line", config, extraArgs);
                };
                return Line;
            }());
            series.Line = Line;
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var Pie = (function () {
                function Pie() {
                }
                Pie.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.series.Pie", config, extraArgs);
                };
                return Pie;
            }());
            series.Pie = Pie;
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var Pie3D = (function () {
                function Pie3D() {
                }
                Pie3D.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.series.Pie3D", config, extraArgs);
                };
                return Pie3D;
            }());
            series.Pie3D = Pie3D;
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var Polar = (function () {
                function Polar() {
                }
                Polar.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.series.Polar", config, extraArgs);
                };
                return Polar;
            }());
            series.Polar = Polar;
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var Radar = (function () {
                function Radar() {
                }
                Radar.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.series.Radar", config, extraArgs);
                };
                return Radar;
            }());
            series.Radar = Radar;
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var Scatter = (function () {
                function Scatter() {
                }
                Scatter.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.series.Scatter", config, extraArgs);
                };
                return Scatter;
            }());
            series.Scatter = Scatter;
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var Series = (function () {
                function Series() {
                }
                Series.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.series.Series", config, extraArgs);
                };
                return Series;
            }());
            series.Series = Series;
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var sprite;
            (function (sprite) {
                var Aggregative = (function () {
                    function Aggregative() {
                    }
                    Aggregative.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.chart.series.sprite.Aggregative", config, extraArgs);
                    };
                    return Aggregative;
                }());
                sprite.Aggregative = Aggregative;
            })(sprite = series.sprite || (series.sprite = {}));
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var sprite;
            (function (sprite) {
                var Area = (function () {
                    function Area() {
                    }
                    Area.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.chart.series.sprite.Area", config, extraArgs);
                    };
                    return Area;
                }());
                sprite.Area = Area;
            })(sprite = series.sprite || (series.sprite = {}));
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var sprite;
            (function (sprite) {
                var Bar = (function () {
                    function Bar() {
                    }
                    Bar.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.chart.series.sprite.Bar", config, extraArgs);
                    };
                    return Bar;
                }());
                sprite.Bar = Bar;
            })(sprite = series.sprite || (series.sprite = {}));
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var sprite;
            (function (sprite) {
                var Bar3D = (function () {
                    function Bar3D() {
                    }
                    Bar3D.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.chart.series.sprite.Bar3D", config, extraArgs);
                    };
                    return Bar3D;
                }());
                sprite.Bar3D = Bar3D;
            })(sprite = series.sprite || (series.sprite = {}));
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var sprite;
            (function (sprite) {
                var Box = (function () {
                    function Box() {
                    }
                    Box.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.chart.series.sprite.Box", config, extraArgs);
                    };
                    return Box;
                }());
                sprite.Box = Box;
            })(sprite = series.sprite || (series.sprite = {}));
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var sprite;
            (function (sprite) {
                var CandleStick = (function () {
                    function CandleStick() {
                    }
                    CandleStick.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.chart.series.sprite.CandleStick", config, extraArgs);
                    };
                    return CandleStick;
                }());
                sprite.CandleStick = CandleStick;
            })(sprite = series.sprite || (series.sprite = {}));
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var sprite;
            (function (sprite) {
                var Cartesian = (function () {
                    function Cartesian() {
                    }
                    Cartesian.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.chart.series.sprite.Cartesian", config, extraArgs);
                    };
                    return Cartesian;
                }());
                sprite.Cartesian = Cartesian;
            })(sprite = series.sprite || (series.sprite = {}));
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var sprite;
            (function (sprite) {
                var Line = (function () {
                    function Line() {
                    }
                    Line.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.chart.series.sprite.Line", config, extraArgs);
                    };
                    return Line;
                }());
                sprite.Line = Line;
            })(sprite = series.sprite || (series.sprite = {}));
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var sprite;
            (function (sprite) {
                var Pie3DPart = (function () {
                    function Pie3DPart() {
                    }
                    Pie3DPart.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.chart.series.sprite.Pie3DPart", config, extraArgs);
                    };
                    return Pie3DPart;
                }());
                sprite.Pie3DPart = Pie3DPart;
            })(sprite = series.sprite || (series.sprite = {}));
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var sprite;
            (function (sprite) {
                var PieSlice = (function () {
                    function PieSlice() {
                    }
                    PieSlice.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.chart.series.sprite.PieSlice", config, extraArgs);
                    };
                    return PieSlice;
                }());
                sprite.PieSlice = PieSlice;
            })(sprite = series.sprite || (series.sprite = {}));
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var sprite;
            (function (sprite) {
                var Polar = (function () {
                    function Polar() {
                    }
                    Polar.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.chart.series.sprite.Polar", config, extraArgs);
                    };
                    return Polar;
                }());
                sprite.Polar = Polar;
            })(sprite = series.sprite || (series.sprite = {}));
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var sprite;
            (function (sprite) {
                var Radar = (function () {
                    function Radar() {
                    }
                    Radar.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.chart.series.sprite.Radar", config, extraArgs);
                    };
                    return Radar;
                }());
                sprite.Radar = Radar;
            })(sprite = series.sprite || (series.sprite = {}));
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var sprite;
            (function (sprite) {
                var Scatter = (function () {
                    function Scatter() {
                    }
                    Scatter.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.chart.series.sprite.Scatter", config, extraArgs);
                    };
                    return Scatter;
                }());
                sprite.Scatter = Scatter;
            })(sprite = series.sprite || (series.sprite = {}));
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var sprite;
            (function (sprite) {
                var StackedCartesian = (function () {
                    function StackedCartesian() {
                    }
                    StackedCartesian.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.chart.series.sprite.StackedCartesian", config, extraArgs);
                    };
                    return StackedCartesian;
                }());
                sprite.StackedCartesian = StackedCartesian;
            })(sprite = series.sprite || (series.sprite = {}));
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var series;
        (function (series) {
            var StackedCartesian = (function () {
                function StackedCartesian() {
                }
                StackedCartesian.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.series.StackedCartesian", config, extraArgs);
                };
                return StackedCartesian;
            }());
            series.StackedCartesian = StackedCartesian;
        })(series = chart.series || (chart.series = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var SpaceFillingChart = (function () {
            function SpaceFillingChart() {
            }
            SpaceFillingChart.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.chart.SpaceFillingChart", config, extraArgs);
            };
            return SpaceFillingChart;
        }());
        chart.SpaceFillingChart = SpaceFillingChart;
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var theme;
        (function (theme) {
            var Base = (function () {
                function Base() {
                }
                Base.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.theme.Base", config, extraArgs);
                };
                return Base;
            }());
            theme.Base = Base;
        })(theme = chart.theme || (chart.theme = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var theme;
        (function (theme) {
            var Default = (function () {
                function Default() {
                }
                Default.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.chart.theme.Default", config, extraArgs);
                };
                return Default;
            }());
            theme.Default = Default;
        })(theme = chart.theme || (chart.theme = {}));
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var chart;
    (function (chart) {
        var TipSurface = (function () {
            function TipSurface() {
            }
            TipSurface.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.chart.TipSurface", config, extraArgs);
            };
            return TipSurface;
        }());
        chart.TipSurface = TipSurface;
    })(chart = TypExt.chart || (TypExt.chart = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Class = (function () {
        function Class() {
        }
        Class.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Class", config, extraArgs);
        };
        return Class;
    }());
    TypExt.Class = Class;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ClassManager = (function () {
        function ClassManager() {
        }
        ClassManager.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.ClassManager", config, extraArgs);
        };
        return ClassManager;
    }());
    TypExt.ClassManager = ClassManager;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Component = (function () {
        function Component() {
        }
        Component.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Component", config, extraArgs);
        };
        return Component;
    }());
    TypExt.Component = Component;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var AbstractComponent = (function () {
        function AbstractComponent() {
        }
        AbstractComponent.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.AbstractComponent", config, extraArgs);
        };
        return AbstractComponent;
    }());
    TypExt.AbstractComponent = AbstractComponent;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ComponentLoader = (function () {
        function ComponentLoader() {
        }
        ComponentLoader.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.ComponentLoader", config, extraArgs);
        };
        return ComponentLoader;
    }());
    TypExt.ComponentLoader = ComponentLoader;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ComponentManager = (function () {
        function ComponentManager() {
        }
        ComponentManager.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.ComponentManager", config, extraArgs);
        };
        return ComponentManager;
    }());
    TypExt.ComponentManager = ComponentManager;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ComponentMgr = (function () {
        function ComponentMgr() {
        }
        ComponentMgr.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.ComponentMgr", config, extraArgs);
        };
        return ComponentMgr;
    }());
    TypExt.ComponentMgr = ComponentMgr;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ComponentQuery = (function () {
        function ComponentQuery() {
        }
        ComponentQuery.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.ComponentQuery", config, extraArgs);
        };
        return ComponentQuery;
    }());
    TypExt.ComponentQuery = ComponentQuery;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Config = (function () {
        function Config() {
        }
        Config.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Config", config, extraArgs);
        };
        return Config;
    }());
    TypExt.Config = Config;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Configurator = (function () {
        function Configurator() {
        }
        Configurator.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Configurator", config, extraArgs);
        };
        return Configurator;
    }());
    TypExt.Configurator = Configurator;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var container;
    (function (container) {
        var ButtonGroup = (function () {
            function ButtonGroup() {
            }
            ButtonGroup.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.container.ButtonGroup", config, extraArgs);
            };
            return ButtonGroup;
        }());
        container.ButtonGroup = ButtonGroup;
    })(container = TypExt.container || (TypExt.container = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ButtonGroup = (function () {
        function ButtonGroup() {
        }
        ButtonGroup.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.ButtonGroup", config, extraArgs);
        };
        return ButtonGroup;
    }());
    TypExt.ButtonGroup = ButtonGroup;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var container;
    (function (container) {
        var Container = (function () {
            function Container() {
            }
            Container.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.container.Container", config, extraArgs);
            };
            return Container;
        }());
        container.Container = Container;
    })(container = TypExt.container || (TypExt.container = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Container = (function () {
        function Container() {
        }
        Container.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Container", config, extraArgs);
        };
        return Container;
    }());
    TypExt.Container = Container;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var AbstractContainer = (function () {
        function AbstractContainer() {
        }
        AbstractContainer.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.AbstractContainer", config, extraArgs);
        };
        return AbstractContainer;
    }());
    TypExt.AbstractContainer = AbstractContainer;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var container;
    (function (container) {
        var DockingContainer = (function () {
            function DockingContainer() {
            }
            DockingContainer.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.container.DockingContainer", config, extraArgs);
            };
            return DockingContainer;
        }());
        container.DockingContainer = DockingContainer;
    })(container = TypExt.container || (TypExt.container = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var container;
    (function (container) {
        var Monitor = (function () {
            function Monitor() {
            }
            Monitor.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.container.Monitor", config, extraArgs);
            };
            return Monitor;
        }());
        container.Monitor = Monitor;
    })(container = TypExt.container || (TypExt.container = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var container;
    (function (container) {
        var Viewport = (function () {
            function Viewport() {
            }
            Viewport.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.container.Viewport", config, extraArgs);
            };
            return Viewport;
        }());
        container.Viewport = Viewport;
    })(container = TypExt.container || (TypExt.container = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Viewport = (function () {
        function Viewport() {
        }
        Viewport.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Viewport", config, extraArgs);
        };
        return Viewport;
    }());
    TypExt.Viewport = Viewport;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dashboard;
    (function (dashboard) {
        var Column = (function () {
            function Column() {
            }
            Column.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dashboard.Column", config, extraArgs);
            };
            return Column;
        }());
        dashboard.Column = Column;
    })(dashboard = TypExt.dashboard || (TypExt.dashboard = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dashboard;
    (function (dashboard) {
        var Dashboard = (function () {
            function Dashboard() {
            }
            Dashboard.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dashboard.Dashboard", config, extraArgs);
            };
            return Dashboard;
        }());
        dashboard.Dashboard = Dashboard;
    })(dashboard = TypExt.dashboard || (TypExt.dashboard = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dashboard;
    (function (dashboard) {
        var DropZone = (function () {
            function DropZone() {
            }
            DropZone.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dashboard.DropZone", config, extraArgs);
            };
            return DropZone;
        }());
        dashboard.DropZone = DropZone;
    })(dashboard = TypExt.dashboard || (TypExt.dashboard = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dashboard;
    (function (dashboard) {
        var Panel = (function () {
            function Panel() {
            }
            Panel.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dashboard.Panel", config, extraArgs);
            };
            return Panel;
        }());
        dashboard.Panel = Panel;
    })(dashboard = TypExt.dashboard || (TypExt.dashboard = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dashboard;
    (function (dashboard) {
        var Part = (function () {
            function Part() {
            }
            Part.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dashboard.Part", config, extraArgs);
            };
            return Part;
        }());
        dashboard.Part = Part;
    })(dashboard = TypExt.dashboard || (TypExt.dashboard = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var AbstractStore = (function () {
            function AbstractStore() {
            }
            AbstractStore.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.AbstractStore", config, extraArgs);
            };
            return AbstractStore;
        }());
        data.AbstractStore = AbstractStore;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var ArrayStore = (function () {
            function ArrayStore() {
            }
            ArrayStore.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.ArrayStore", config, extraArgs);
            };
            return ArrayStore;
        }());
        data.ArrayStore = ArrayStore;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var SimpleStore = (function () {
            function SimpleStore() {
            }
            SimpleStore.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.SimpleStore", config, extraArgs);
            };
            return SimpleStore;
        }());
        data.SimpleStore = SimpleStore;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var Batch = (function () {
            function Batch() {
            }
            Batch.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.Batch", config, extraArgs);
            };
            return Batch;
        }());
        data.Batch = Batch;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var BufferedStore = (function () {
            function BufferedStore() {
            }
            BufferedStore.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.BufferedStore", config, extraArgs);
            };
            return BufferedStore;
        }());
        data.BufferedStore = BufferedStore;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var ChainedStore = (function () {
            function ChainedStore() {
            }
            ChainedStore.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.ChainedStore", config, extraArgs);
            };
            return ChainedStore;
        }());
        data.ChainedStore = ChainedStore;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var Connection = (function () {
            function Connection() {
            }
            Connection.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.Connection", config, extraArgs);
            };
            return Connection;
        }());
        data.Connection = Connection;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var DirectStore = (function () {
            function DirectStore() {
            }
            DirectStore.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.DirectStore", config, extraArgs);
            };
            return DirectStore;
        }());
        data.DirectStore = DirectStore;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var Error = (function () {
            function Error() {
            }
            Error.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.Error", config, extraArgs);
            };
            return Error;
        }());
        data.Error = Error;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var ErrorCollection = (function () {
            function ErrorCollection() {
            }
            ErrorCollection.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.ErrorCollection", config, extraArgs);
            };
            return ErrorCollection;
        }());
        data.ErrorCollection = ErrorCollection;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var Errors = (function () {
            function Errors() {
            }
            Errors.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.Errors", config, extraArgs);
            };
            return Errors;
        }());
        data.Errors = Errors;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var field;
        (function (field) {
            var Boolean = (function () {
                function Boolean() {
                }
                Boolean.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.field.Boolean", config, extraArgs);
                };
                return Boolean;
            }());
            field.Boolean = Boolean;
        })(field = data.field || (data.field = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var field;
        (function (field) {
            var Date = (function () {
                function Date() {
                }
                Date.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.field.Date", config, extraArgs);
                };
                return Date;
            }());
            field.Date = Date;
        })(field = data.field || (data.field = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var field;
        (function (field) {
            var Field = (function () {
                function Field() {
                }
                Field.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.field.Field", config, extraArgs);
                };
                return Field;
            }());
            field.Field = Field;
        })(field = data.field || (data.field = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var Field = (function () {
            function Field() {
            }
            Field.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.Field", config, extraArgs);
            };
            return Field;
        }());
        data.Field = Field;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var field;
        (function (field) {
            var Integer = (function () {
                function Integer() {
                }
                Integer.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.field.Integer", config, extraArgs);
                };
                return Integer;
            }());
            field.Integer = Integer;
        })(field = data.field || (data.field = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var field;
        (function (field) {
            var Number = (function () {
                function Number() {
                }
                Number.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.field.Number", config, extraArgs);
                };
                return Number;
            }());
            field.Number = Number;
        })(field = data.field || (data.field = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var field;
        (function (field) {
            var String = (function () {
                function String() {
                }
                String.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.field.String", config, extraArgs);
                };
                return String;
            }());
            field.String = String;
        })(field = data.field || (data.field = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var flash;
        (function (flash) {
            var BinaryXhr = (function () {
                function BinaryXhr() {
                }
                BinaryXhr.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.flash.BinaryXhr", config, extraArgs);
                };
                return BinaryXhr;
            }());
            flash.BinaryXhr = BinaryXhr;
        })(flash = data.flash || (data.flash = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var identifier;
        (function (identifier) {
            var Generator = (function () {
                function Generator() {
                }
                Generator.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.identifier.Generator", config, extraArgs);
                };
                return Generator;
            }());
            identifier.Generator = Generator;
        })(identifier = data.identifier || (data.identifier = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var identifier;
        (function (identifier) {
            var Negative = (function () {
                function Negative() {
                }
                Negative.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.identifier.Negative", config, extraArgs);
                };
                return Negative;
            }());
            identifier.Negative = Negative;
        })(identifier = data.identifier || (data.identifier = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var identifier;
        (function (identifier) {
            var Sequential = (function () {
                function Sequential() {
                }
                Sequential.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.identifier.Sequential", config, extraArgs);
                };
                return Sequential;
            }());
            identifier.Sequential = Sequential;
        })(identifier = data.identifier || (data.identifier = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var identifier;
        (function (identifier) {
            var Uuid = (function () {
                function Uuid() {
                }
                Uuid.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.identifier.Uuid", config, extraArgs);
                };
                return Uuid;
            }());
            identifier.Uuid = Uuid;
        })(identifier = data.identifier || (data.identifier = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var JsonP = (function () {
            function JsonP() {
            }
            JsonP.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.JsonP", config, extraArgs);
            };
            return JsonP;
        }());
        data.JsonP = JsonP;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var JsonPStore = (function () {
            function JsonPStore() {
            }
            JsonPStore.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.JsonPStore", config, extraArgs);
            };
            return JsonPStore;
        }());
        data.JsonPStore = JsonPStore;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var JsonStore = (function () {
            function JsonStore() {
            }
            JsonStore.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.JsonStore", config, extraArgs);
            };
            return JsonStore;
        }());
        data.JsonStore = JsonStore;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var LocalStore = (function () {
            function LocalStore() {
            }
            LocalStore.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.LocalStore", config, extraArgs);
            };
            return LocalStore;
        }());
        data.LocalStore = LocalStore;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var matrix;
        (function (matrix) {
            var Matrix = (function () {
                function Matrix() {
                }
                Matrix.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.matrix.Matrix", config, extraArgs);
                };
                return Matrix;
            }());
            matrix.Matrix = Matrix;
        })(matrix = data.matrix || (data.matrix = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var matrix;
        (function (matrix) {
            var Side = (function () {
                function Side() {
                }
                Side.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.matrix.Side", config, extraArgs);
                };
                return Side;
            }());
            matrix.Side = Side;
        })(matrix = data.matrix || (data.matrix = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var matrix;
        (function (matrix) {
            var Slice = (function () {
                function Slice() {
                }
                Slice.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.matrix.Slice", config, extraArgs);
                };
                return Slice;
            }());
            matrix.Slice = Slice;
        })(matrix = data.matrix || (data.matrix = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var Model = (function () {
            function Model() {
            }
            Model.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.Model", config, extraArgs);
            };
            return Model;
        }());
        data.Model = Model;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var Record = (function () {
            function Record() {
            }
            Record.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.Record", config, extraArgs);
            };
            return Record;
        }());
        data.Record = Record;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var ModelManager = (function () {
            function ModelManager() {
            }
            ModelManager.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.ModelManager", config, extraArgs);
            };
            return ModelManager;
        }());
        data.ModelManager = ModelManager;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ModelMgr = (function () {
        function ModelMgr() {
        }
        ModelMgr.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.ModelMgr", config, extraArgs);
        };
        return ModelMgr;
    }());
    TypExt.ModelMgr = ModelMgr;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var NodeInterface = (function () {
            function NodeInterface() {
            }
            NodeInterface.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.NodeInterface", config, extraArgs);
            };
            return NodeInterface;
        }());
        data.NodeInterface = NodeInterface;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var NodeStore = (function () {
            function NodeStore() {
            }
            NodeStore.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.NodeStore", config, extraArgs);
            };
            return NodeStore;
        }());
        data.NodeStore = NodeStore;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var operation;
        (function (operation) {
            var Create = (function () {
                function Create() {
                }
                Create.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.operation.Create", config, extraArgs);
                };
                return Create;
            }());
            operation.Create = Create;
        })(operation = data.operation || (data.operation = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var operation;
        (function (operation) {
            var Destroy = (function () {
                function Destroy() {
                }
                Destroy.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.operation.Destroy", config, extraArgs);
                };
                return Destroy;
            }());
            operation.Destroy = Destroy;
        })(operation = data.operation || (data.operation = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var operation;
        (function (operation) {
            var Operation = (function () {
                function Operation() {
                }
                Operation.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.operation.Operation", config, extraArgs);
                };
                return Operation;
            }());
            operation.Operation = Operation;
        })(operation = data.operation || (data.operation = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var Operation = (function () {
            function Operation() {
            }
            Operation.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.Operation", config, extraArgs);
            };
            return Operation;
        }());
        data.Operation = Operation;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var operation;
        (function (operation) {
            var Read = (function () {
                function Read() {
                }
                Read.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.operation.Read", config, extraArgs);
                };
                return Read;
            }());
            operation.Read = Read;
        })(operation = data.operation || (data.operation = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var operation;
        (function (operation) {
            var Update = (function () {
                function Update() {
                }
                Update.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.operation.Update", config, extraArgs);
                };
                return Update;
            }());
            operation.Update = Update;
        })(operation = data.operation || (data.operation = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var PageMap = (function () {
            function PageMap() {
            }
            PageMap.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.PageMap", config, extraArgs);
            };
            return PageMap;
        }());
        data.PageMap = PageMap;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var proxy;
        (function (proxy) {
            var Ajax = (function () {
                function Ajax() {
                }
                Ajax.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.proxy.Ajax", config, extraArgs);
                };
                return Ajax;
            }());
            proxy.Ajax = Ajax;
        })(proxy = data.proxy || (data.proxy = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var HttpProxy = (function () {
            function HttpProxy() {
            }
            HttpProxy.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.HttpProxy", config, extraArgs);
            };
            return HttpProxy;
        }());
        data.HttpProxy = HttpProxy;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var AjaxProxy = (function () {
            function AjaxProxy() {
            }
            AjaxProxy.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.AjaxProxy", config, extraArgs);
            };
            return AjaxProxy;
        }());
        data.AjaxProxy = AjaxProxy;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var proxy;
        (function (proxy) {
            var Client = (function () {
                function Client() {
                }
                Client.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.proxy.Client", config, extraArgs);
                };
                return Client;
            }());
            proxy.Client = Client;
        })(proxy = data.proxy || (data.proxy = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var ClientProxy = (function () {
            function ClientProxy() {
            }
            ClientProxy.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.ClientProxy", config, extraArgs);
            };
            return ClientProxy;
        }());
        data.ClientProxy = ClientProxy;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var proxy;
        (function (proxy) {
            var Direct = (function () {
                function Direct() {
                }
                Direct.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.proxy.Direct", config, extraArgs);
                };
                return Direct;
            }());
            proxy.Direct = Direct;
        })(proxy = data.proxy || (data.proxy = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var DirectProxy = (function () {
            function DirectProxy() {
            }
            DirectProxy.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.DirectProxy", config, extraArgs);
            };
            return DirectProxy;
        }());
        data.DirectProxy = DirectProxy;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var proxy;
        (function (proxy) {
            var JsonP = (function () {
                function JsonP() {
                }
                JsonP.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.proxy.JsonP", config, extraArgs);
                };
                return JsonP;
            }());
            proxy.JsonP = JsonP;
        })(proxy = data.proxy || (data.proxy = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var ScriptTagProxy = (function () {
            function ScriptTagProxy() {
            }
            ScriptTagProxy.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.ScriptTagProxy", config, extraArgs);
            };
            return ScriptTagProxy;
        }());
        data.ScriptTagProxy = ScriptTagProxy;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var proxy;
        (function (proxy) {
            var LocalStorage = (function () {
                function LocalStorage() {
                }
                LocalStorage.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.proxy.LocalStorage", config, extraArgs);
                };
                return LocalStorage;
            }());
            proxy.LocalStorage = LocalStorage;
        })(proxy = data.proxy || (data.proxy = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var LocalStorageProxy = (function () {
            function LocalStorageProxy() {
            }
            LocalStorageProxy.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.LocalStorageProxy", config, extraArgs);
            };
            return LocalStorageProxy;
        }());
        data.LocalStorageProxy = LocalStorageProxy;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var proxy;
        (function (proxy) {
            var Memory = (function () {
                function Memory() {
                }
                Memory.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.proxy.Memory", config, extraArgs);
                };
                return Memory;
            }());
            proxy.Memory = Memory;
        })(proxy = data.proxy || (data.proxy = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var MemoryProxy = (function () {
            function MemoryProxy() {
            }
            MemoryProxy.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.MemoryProxy", config, extraArgs);
            };
            return MemoryProxy;
        }());
        data.MemoryProxy = MemoryProxy;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var proxy;
        (function (proxy) {
            var Proxy = (function () {
                function Proxy() {
                }
                Proxy.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.proxy.Proxy", config, extraArgs);
                };
                return Proxy;
            }());
            proxy.Proxy = Proxy;
        })(proxy = data.proxy || (data.proxy = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var DataProxy = (function () {
            function DataProxy() {
            }
            DataProxy.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.DataProxy", config, extraArgs);
            };
            return DataProxy;
        }());
        data.DataProxy = DataProxy;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var Proxy = (function () {
            function Proxy() {
            }
            Proxy.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.Proxy", config, extraArgs);
            };
            return Proxy;
        }());
        data.Proxy = Proxy;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var proxy;
        (function (proxy) {
            var Rest = (function () {
                function Rest() {
                }
                Rest.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.proxy.Rest", config, extraArgs);
                };
                return Rest;
            }());
            proxy.Rest = Rest;
        })(proxy = data.proxy || (data.proxy = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var RestProxy = (function () {
            function RestProxy() {
            }
            RestProxy.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.RestProxy", config, extraArgs);
            };
            return RestProxy;
        }());
        data.RestProxy = RestProxy;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var proxy;
        (function (proxy) {
            var Server = (function () {
                function Server() {
                }
                Server.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.proxy.Server", config, extraArgs);
                };
                return Server;
            }());
            proxy.Server = Server;
        })(proxy = data.proxy || (data.proxy = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var ServerProxy = (function () {
            function ServerProxy() {
            }
            ServerProxy.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.ServerProxy", config, extraArgs);
            };
            return ServerProxy;
        }());
        data.ServerProxy = ServerProxy;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var proxy;
        (function (proxy) {
            var SessionStorage = (function () {
                function SessionStorage() {
                }
                SessionStorage.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.proxy.SessionStorage", config, extraArgs);
                };
                return SessionStorage;
            }());
            proxy.SessionStorage = SessionStorage;
        })(proxy = data.proxy || (data.proxy = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var SessionStorageProxy = (function () {
            function SessionStorageProxy() {
            }
            SessionStorageProxy.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.SessionStorageProxy", config, extraArgs);
            };
            return SessionStorageProxy;
        }());
        data.SessionStorageProxy = SessionStorageProxy;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var proxy;
        (function (proxy) {
            var Sql = (function () {
                function Sql() {
                }
                Sql.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.proxy.Sql", config, extraArgs);
                };
                return Sql;
            }());
            proxy.Sql = Sql;
        })(proxy = data.proxy || (data.proxy = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var proxy;
        (function (proxy) {
            var WebStorage = (function () {
                function WebStorage() {
                }
                WebStorage.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.proxy.WebStorage", config, extraArgs);
                };
                return WebStorage;
            }());
            proxy.WebStorage = WebStorage;
        })(proxy = data.proxy || (data.proxy = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var WebStorageProxy = (function () {
            function WebStorageProxy() {
            }
            WebStorageProxy.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.WebStorageProxy", config, extraArgs);
            };
            return WebStorageProxy;
        }());
        data.WebStorageProxy = WebStorageProxy;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var ProxyStore = (function () {
            function ProxyStore() {
            }
            ProxyStore.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.ProxyStore", config, extraArgs);
            };
            return ProxyStore;
        }());
        data.ProxyStore = ProxyStore;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var reader;
        (function (reader) {
            var Array = (function () {
                function Array() {
                }
                Array.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.reader.Array", config, extraArgs);
                };
                return Array;
            }());
            reader.Array = Array;
        })(reader = data.reader || (data.reader = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var ArrayReader = (function () {
            function ArrayReader() {
            }
            ArrayReader.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.ArrayReader", config, extraArgs);
            };
            return ArrayReader;
        }());
        data.ArrayReader = ArrayReader;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var reader;
        (function (reader) {
            var Json = (function () {
                function Json() {
                }
                Json.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.reader.Json", config, extraArgs);
                };
                return Json;
            }());
            reader.Json = Json;
        })(reader = data.reader || (data.reader = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var JsonReader = (function () {
            function JsonReader() {
            }
            JsonReader.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.JsonReader", config, extraArgs);
            };
            return JsonReader;
        }());
        data.JsonReader = JsonReader;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var reader;
        (function (reader) {
            var Reader = (function () {
                function Reader() {
                }
                Reader.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.reader.Reader", config, extraArgs);
                };
                return Reader;
            }());
            reader.Reader = Reader;
        })(reader = data.reader || (data.reader = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var Reader = (function () {
            function Reader() {
            }
            Reader.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.Reader", config, extraArgs);
            };
            return Reader;
        }());
        data.Reader = Reader;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var DataReader = (function () {
            function DataReader() {
            }
            DataReader.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.DataReader", config, extraArgs);
            };
            return DataReader;
        }());
        data.DataReader = DataReader;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var reader;
        (function (reader) {
            var Xml = (function () {
                function Xml() {
                }
                Xml.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.reader.Xml", config, extraArgs);
                };
                return Xml;
            }());
            reader.Xml = Xml;
        })(reader = data.reader || (data.reader = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var XmlReader = (function () {
            function XmlReader() {
            }
            XmlReader.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.XmlReader", config, extraArgs);
            };
            return XmlReader;
        }());
        data.XmlReader = XmlReader;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var Request = (function () {
            function Request() {
            }
            Request.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.Request", config, extraArgs);
            };
            return Request;
        }());
        data.Request = Request;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var ResultSet = (function () {
            function ResultSet() {
            }
            ResultSet.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.ResultSet", config, extraArgs);
            };
            return ResultSet;
        }());
        data.ResultSet = ResultSet;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var schema;
        (function (schema) {
            var Association = (function () {
                function Association() {
                }
                Association.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.schema.Association", config, extraArgs);
                };
                return Association;
            }());
            schema.Association = Association;
        })(schema = data.schema || (data.schema = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var schema;
        (function (schema) {
            var ManyToMany = (function () {
                function ManyToMany() {
                }
                ManyToMany.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.schema.ManyToMany", config, extraArgs);
                };
                return ManyToMany;
            }());
            schema.ManyToMany = ManyToMany;
        })(schema = data.schema || (data.schema = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var schema;
        (function (schema) {
            var ManyToOne = (function () {
                function ManyToOne() {
                }
                ManyToOne.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.schema.ManyToOne", config, extraArgs);
                };
                return ManyToOne;
            }());
            schema.ManyToOne = ManyToOne;
        })(schema = data.schema || (data.schema = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var schema;
        (function (schema) {
            var Namer = (function () {
                function Namer() {
                }
                Namer.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.schema.Namer", config, extraArgs);
                };
                return Namer;
            }());
            schema.Namer = Namer;
        })(schema = data.schema || (data.schema = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var schema;
        (function (schema) {
            var OneToOne = (function () {
                function OneToOne() {
                }
                OneToOne.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.schema.OneToOne", config, extraArgs);
                };
                return OneToOne;
            }());
            schema.OneToOne = OneToOne;
        })(schema = data.schema || (data.schema = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var schema;
        (function (schema) {
            var Role = (function () {
                function Role() {
                }
                Role.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.schema.Role", config, extraArgs);
                };
                return Role;
            }());
            schema.Role = Role;
        })(schema = data.schema || (data.schema = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var schema;
        (function (schema) {
            var Schema = (function () {
                function Schema() {
                }
                Schema.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.schema.Schema", config, extraArgs);
                };
                return Schema;
            }());
            schema.Schema = Schema;
        })(schema = data.schema || (data.schema = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var session;
        (function (session) {
            var BatchVisitor = (function () {
                function BatchVisitor() {
                }
                BatchVisitor.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.session.BatchVisitor", config, extraArgs);
                };
                return BatchVisitor;
            }());
            session.BatchVisitor = BatchVisitor;
        })(session = data.session || (data.session = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var session;
        (function (session) {
            var ChangesVisitor = (function () {
                function ChangesVisitor() {
                }
                ChangesVisitor.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.session.ChangesVisitor", config, extraArgs);
                };
                return ChangesVisitor;
            }());
            session.ChangesVisitor = ChangesVisitor;
        })(session = data.session || (data.session = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var session;
        (function (session) {
            var ChildChangesVisitor = (function () {
                function ChildChangesVisitor() {
                }
                ChildChangesVisitor.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.session.ChildChangesVisitor", config, extraArgs);
                };
                return ChildChangesVisitor;
            }());
            session.ChildChangesVisitor = ChildChangesVisitor;
        })(session = data.session || (data.session = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var Session = (function () {
            function Session() {
            }
            Session.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.Session", config, extraArgs);
            };
            return Session;
        }());
        data.Session = Session;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var soap;
        (function (soap) {
            var Proxy = (function () {
                function Proxy() {
                }
                Proxy.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.soap.Proxy", config, extraArgs);
                };
                return Proxy;
            }());
            soap.Proxy = Proxy;
        })(soap = data.soap || (data.soap = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var soap;
        (function (soap) {
            var Reader = (function () {
                function Reader() {
                }
                Reader.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.soap.Reader", config, extraArgs);
                };
                return Reader;
            }());
            soap.Reader = Reader;
        })(soap = data.soap || (data.soap = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var SortTypes = (function () {
            function SortTypes() {
            }
            SortTypes.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.SortTypes", config, extraArgs);
            };
            return SortTypes;
        }());
        data.SortTypes = SortTypes;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var Store = (function () {
            function Store() {
            }
            Store.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.Store", config, extraArgs);
            };
            return Store;
        }());
        data.Store = Store;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var StoreManager = (function () {
            function StoreManager() {
            }
            StoreManager.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.StoreManager", config, extraArgs);
            };
            return StoreManager;
        }());
        data.StoreManager = StoreManager;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var StoreMgr = (function () {
        function StoreMgr() {
        }
        StoreMgr.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.StoreMgr", config, extraArgs);
        };
        return StoreMgr;
    }());
    TypExt.StoreMgr = StoreMgr;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var StoreMgr = (function () {
            function StoreMgr() {
            }
            StoreMgr.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.StoreMgr", config, extraArgs);
            };
            return StoreMgr;
        }());
        data.StoreMgr = StoreMgr;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var StoreManager = (function () {
        function StoreManager() {
        }
        StoreManager.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.StoreManager", config, extraArgs);
        };
        return StoreManager;
    }());
    TypExt.StoreManager = StoreManager;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var TreeModel = (function () {
            function TreeModel() {
            }
            TreeModel.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.TreeModel", config, extraArgs);
            };
            return TreeModel;
        }());
        data.TreeModel = TreeModel;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var TreeStore = (function () {
            function TreeStore() {
            }
            TreeStore.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.TreeStore", config, extraArgs);
            };
            return TreeStore;
        }());
        data.TreeStore = TreeStore;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var Types = (function () {
            function Types() {
            }
            Types.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.Types", config, extraArgs);
            };
            return Types;
        }());
        data.Types = Types;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var Validation = (function () {
            function Validation() {
            }
            Validation.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.Validation", config, extraArgs);
            };
            return Validation;
        }());
        data.Validation = Validation;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var validator;
        (function (validator) {
            var Bound = (function () {
                function Bound() {
                }
                Bound.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.validator.Bound", config, extraArgs);
                };
                return Bound;
            }());
            validator.Bound = Bound;
        })(validator = data.validator || (data.validator = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var validator;
        (function (validator) {
            var Email = (function () {
                function Email() {
                }
                Email.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.validator.Email", config, extraArgs);
                };
                return Email;
            }());
            validator.Email = Email;
        })(validator = data.validator || (data.validator = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var validator;
        (function (validator) {
            var Exclusion = (function () {
                function Exclusion() {
                }
                Exclusion.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.validator.Exclusion", config, extraArgs);
                };
                return Exclusion;
            }());
            validator.Exclusion = Exclusion;
        })(validator = data.validator || (data.validator = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var validator;
        (function (validator) {
            var Format = (function () {
                function Format() {
                }
                Format.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.validator.Format", config, extraArgs);
                };
                return Format;
            }());
            validator.Format = Format;
        })(validator = data.validator || (data.validator = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var validator;
        (function (validator) {
            var Inclusion = (function () {
                function Inclusion() {
                }
                Inclusion.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.validator.Inclusion", config, extraArgs);
                };
                return Inclusion;
            }());
            validator.Inclusion = Inclusion;
        })(validator = data.validator || (data.validator = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var validator;
        (function (validator) {
            var Length = (function () {
                function Length() {
                }
                Length.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.validator.Length", config, extraArgs);
                };
                return Length;
            }());
            validator.Length = Length;
        })(validator = data.validator || (data.validator = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var validator;
        (function (validator) {
            var List = (function () {
                function List() {
                }
                List.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.validator.List", config, extraArgs);
                };
                return List;
            }());
            validator.List = List;
        })(validator = data.validator || (data.validator = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var validator;
        (function (validator) {
            var Presence = (function () {
                function Presence() {
                }
                Presence.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.validator.Presence", config, extraArgs);
                };
                return Presence;
            }());
            validator.Presence = Presence;
        })(validator = data.validator || (data.validator = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var validator;
        (function (validator) {
            var Range = (function () {
                function Range() {
                }
                Range.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.validator.Range", config, extraArgs);
                };
                return Range;
            }());
            validator.Range = Range;
        })(validator = data.validator || (data.validator = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var validator;
        (function (validator) {
            var Validator = (function () {
                function Validator() {
                }
                Validator.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.validator.Validator", config, extraArgs);
                };
                return Validator;
            }());
            validator.Validator = Validator;
        })(validator = data.validator || (data.validator = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var writer;
        (function (writer) {
            var Json = (function () {
                function Json() {
                }
                Json.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.writer.Json", config, extraArgs);
                };
                return Json;
            }());
            writer.Json = Json;
        })(writer = data.writer || (data.writer = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var JsonWriter = (function () {
            function JsonWriter() {
            }
            JsonWriter.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.JsonWriter", config, extraArgs);
            };
            return JsonWriter;
        }());
        data.JsonWriter = JsonWriter;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var writer;
        (function (writer) {
            var Writer = (function () {
                function Writer() {
                }
                Writer.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.writer.Writer", config, extraArgs);
                };
                return Writer;
            }());
            writer.Writer = Writer;
        })(writer = data.writer || (data.writer = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var DataWriter = (function () {
            function DataWriter() {
            }
            DataWriter.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.DataWriter", config, extraArgs);
            };
            return DataWriter;
        }());
        data.DataWriter = DataWriter;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var Writer = (function () {
            function Writer() {
            }
            Writer.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.Writer", config, extraArgs);
            };
            return Writer;
        }());
        data.Writer = Writer;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var writer;
        (function (writer) {
            var Xml = (function () {
                function Xml() {
                }
                Xml.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.data.writer.Xml", config, extraArgs);
                };
                return Xml;
            }());
            writer.Xml = Xml;
        })(writer = data.writer || (data.writer = {}));
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var XmlWriter = (function () {
            function XmlWriter() {
            }
            XmlWriter.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.XmlWriter", config, extraArgs);
            };
            return XmlWriter;
        }());
        data.XmlWriter = XmlWriter;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var data;
    (function (data) {
        var XmlStore = (function () {
            function XmlStore() {
            }
            XmlStore.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.data.XmlStore", config, extraArgs);
            };
            return XmlStore;
        }());
        data.XmlStore = XmlStore;
    })(data = TypExt.data || (TypExt.data = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Date = (function () {
        function Date() {
        }
        Date.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Date", config, extraArgs);
        };
        return Date;
    }());
    TypExt.Date = Date;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dd;
    (function (dd) {
        var DD = (function () {
            function DD() {
            }
            DD.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dd.DD", config, extraArgs);
            };
            return DD;
        }());
        dd.DD = DD;
    })(dd = TypExt.dd || (TypExt.dd = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dd;
    (function (dd) {
        var DDProxy = (function () {
            function DDProxy() {
            }
            DDProxy.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dd.DDProxy", config, extraArgs);
            };
            return DDProxy;
        }());
        dd.DDProxy = DDProxy;
    })(dd = TypExt.dd || (TypExt.dd = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dd;
    (function (dd) {
        var DDTarget = (function () {
            function DDTarget() {
            }
            DDTarget.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dd.DDTarget", config, extraArgs);
            };
            return DDTarget;
        }());
        dd.DDTarget = DDTarget;
    })(dd = TypExt.dd || (TypExt.dd = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dd;
    (function (dd) {
        var DragDrop = (function () {
            function DragDrop() {
            }
            DragDrop.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dd.DragDrop", config, extraArgs);
            };
            return DragDrop;
        }());
        dd.DragDrop = DragDrop;
    })(dd = TypExt.dd || (TypExt.dd = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dd;
    (function (dd) {
        var DragDropElement = (function () {
            function DragDropElement() {
            }
            DragDropElement.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dd.DragDropElement", config, extraArgs);
            };
            return DragDropElement;
        }());
        dd.DragDropElement = DragDropElement;
    })(dd = TypExt.dd || (TypExt.dd = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dd;
    (function (dd) {
        var dragdropmanager;
        (function (dragdropmanager) {
            var ElementWrapper = (function () {
                function ElementWrapper() {
                }
                ElementWrapper.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.dd.dragdropmanager.ElementWrapper", config, extraArgs);
                };
                return ElementWrapper;
            }());
            dragdropmanager.ElementWrapper = ElementWrapper;
        })(dragdropmanager = dd.dragdropmanager || (dd.dragdropmanager = {}));
    })(dd = TypExt.dd || (TypExt.dd = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dd;
    (function (dd) {
        var DragDropManager = (function () {
            function DragDropManager() {
            }
            DragDropManager.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dd.DragDropManager", config, extraArgs);
            };
            return DragDropManager;
        }());
        dd.DragDropManager = DragDropManager;
    })(dd = TypExt.dd || (TypExt.dd = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dd;
    (function (dd) {
        var DragDropMgr = (function () {
            function DragDropMgr() {
            }
            DragDropMgr.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dd.DragDropMgr", config, extraArgs);
            };
            return DragDropMgr;
        }());
        dd.DragDropMgr = DragDropMgr;
    })(dd = TypExt.dd || (TypExt.dd = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dd;
    (function (dd) {
        var DDM = (function () {
            function DDM() {
            }
            DDM.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dd.DDM", config, extraArgs);
            };
            return DDM;
        }());
        dd.DDM = DDM;
    })(dd = TypExt.dd || (TypExt.dd = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dd;
    (function (dd) {
        var DragSource = (function () {
            function DragSource() {
            }
            DragSource.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dd.DragSource", config, extraArgs);
            };
            return DragSource;
        }());
        dd.DragSource = DragSource;
    })(dd = TypExt.dd || (TypExt.dd = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dd;
    (function (dd) {
        var DragTracker = (function () {
            function DragTracker() {
            }
            DragTracker.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dd.DragTracker", config, extraArgs);
            };
            return DragTracker;
        }());
        dd.DragTracker = DragTracker;
    })(dd = TypExt.dd || (TypExt.dd = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dd;
    (function (dd) {
        var DragZone = (function () {
            function DragZone() {
            }
            DragZone.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dd.DragZone", config, extraArgs);
            };
            return DragZone;
        }());
        dd.DragZone = DragZone;
    })(dd = TypExt.dd || (TypExt.dd = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dd;
    (function (dd) {
        var DropTarget = (function () {
            function DropTarget() {
            }
            DropTarget.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dd.DropTarget", config, extraArgs);
            };
            return DropTarget;
        }());
        dd.DropTarget = DropTarget;
    })(dd = TypExt.dd || (TypExt.dd = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dd;
    (function (dd) {
        var DropZone = (function () {
            function DropZone() {
            }
            DropZone.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dd.DropZone", config, extraArgs);
            };
            return DropZone;
        }());
        dd.DropZone = DropZone;
    })(dd = TypExt.dd || (TypExt.dd = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dd;
    (function (dd) {
        var Registry = (function () {
            function Registry() {
            }
            Registry.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dd.Registry", config, extraArgs);
            };
            return Registry;
        }());
        dd.Registry = Registry;
    })(dd = TypExt.dd || (TypExt.dd = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dd;
    (function (dd) {
        var ScrollManager = (function () {
            function ScrollManager() {
            }
            ScrollManager.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dd.ScrollManager", config, extraArgs);
            };
            return ScrollManager;
        }());
        dd.ScrollManager = ScrollManager;
    })(dd = TypExt.dd || (TypExt.dd = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dd;
    (function (dd) {
        var StatusProxy = (function () {
            function StatusProxy() {
            }
            StatusProxy.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dd.StatusProxy", config, extraArgs);
            };
            return StatusProxy;
        }());
        dd.StatusProxy = StatusProxy;
    })(dd = TypExt.dd || (TypExt.dd = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var direct;
    (function (direct) {
        var Event = (function () {
            function Event() {
            }
            Event.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.direct.Event", config, extraArgs);
            };
            return Event;
        }());
        direct.Event = Event;
    })(direct = TypExt.direct || (TypExt.direct = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var direct;
    (function (direct) {
        var ExceptionEvent = (function () {
            function ExceptionEvent() {
            }
            ExceptionEvent.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.direct.ExceptionEvent", config, extraArgs);
            };
            return ExceptionEvent;
        }());
        direct.ExceptionEvent = ExceptionEvent;
    })(direct = TypExt.direct || (TypExt.direct = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var direct;
    (function (direct) {
        var JsonProvider = (function () {
            function JsonProvider() {
            }
            JsonProvider.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.direct.JsonProvider", config, extraArgs);
            };
            return JsonProvider;
        }());
        direct.JsonProvider = JsonProvider;
    })(direct = TypExt.direct || (TypExt.direct = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var direct;
    (function (direct) {
        var Manager = (function () {
            function Manager() {
            }
            Manager.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.direct.Manager", config, extraArgs);
            };
            return Manager;
        }());
        direct.Manager = Manager;
    })(direct = TypExt.direct || (TypExt.direct = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Direct = (function () {
        function Direct() {
        }
        Direct.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Direct", config, extraArgs);
        };
        return Direct;
    }());
    TypExt.Direct = Direct;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var direct;
    (function (direct) {
        var PollingProvider = (function () {
            function PollingProvider() {
            }
            PollingProvider.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.direct.PollingProvider", config, extraArgs);
            };
            return PollingProvider;
        }());
        direct.PollingProvider = PollingProvider;
    })(direct = TypExt.direct || (TypExt.direct = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var direct;
    (function (direct) {
        var Provider = (function () {
            function Provider() {
            }
            Provider.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.direct.Provider", config, extraArgs);
            };
            return Provider;
        }());
        direct.Provider = Provider;
    })(direct = TypExt.direct || (TypExt.direct = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var direct;
    (function (direct) {
        var RemotingEvent = (function () {
            function RemotingEvent() {
            }
            RemotingEvent.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.direct.RemotingEvent", config, extraArgs);
            };
            return RemotingEvent;
        }());
        direct.RemotingEvent = RemotingEvent;
    })(direct = TypExt.direct || (TypExt.direct = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var direct;
    (function (direct) {
        var RemotingMethod = (function () {
            function RemotingMethod() {
            }
            RemotingMethod.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.direct.RemotingMethod", config, extraArgs);
            };
            return RemotingMethod;
        }());
        direct.RemotingMethod = RemotingMethod;
    })(direct = TypExt.direct || (TypExt.direct = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var direct;
    (function (direct) {
        var RemotingProvider = (function () {
            function RemotingProvider() {
            }
            RemotingProvider.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.direct.RemotingProvider", config, extraArgs);
            };
            return RemotingProvider;
        }());
        direct.RemotingProvider = RemotingProvider;
    })(direct = TypExt.direct || (TypExt.direct = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var direct;
    (function (direct) {
        var Transaction = (function () {
            function Transaction() {
            }
            Transaction.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.direct.Transaction", config, extraArgs);
            };
            return Transaction;
        }());
        direct.Transaction = Transaction;
    })(direct = TypExt.direct || (TypExt.direct = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dom;
    (function (dom) {
        var ButtonElement = (function () {
            function ButtonElement() {
            }
            ButtonElement.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dom.ButtonElement", config, extraArgs);
            };
            return ButtonElement;
        }());
        dom.ButtonElement = ButtonElement;
    })(dom = TypExt.dom || (TypExt.dom = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dom;
    (function (dom) {
        var CompositeElement = (function () {
            function CompositeElement() {
            }
            CompositeElement.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dom.CompositeElement", config, extraArgs);
            };
            return CompositeElement;
        }());
        dom.CompositeElement = CompositeElement;
    })(dom = TypExt.dom || (TypExt.dom = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var CompositeElement = (function () {
        function CompositeElement() {
        }
        CompositeElement.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.CompositeElement", config, extraArgs);
        };
        return CompositeElement;
    }());
    TypExt.CompositeElement = CompositeElement;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dom;
    (function (dom) {
        var CompositeElementLite = (function () {
            function CompositeElementLite() {
            }
            CompositeElementLite.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dom.CompositeElementLite", config, extraArgs);
            };
            return CompositeElementLite;
        }());
        dom.CompositeElementLite = CompositeElementLite;
    })(dom = TypExt.dom || (TypExt.dom = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var CompositeElementLite = (function () {
        function CompositeElementLite() {
        }
        CompositeElementLite.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.CompositeElementLite", config, extraArgs);
        };
        return CompositeElementLite;
    }());
    TypExt.CompositeElementLite = CompositeElementLite;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dom;
    (function (dom) {
        var Element = (function () {
            function Element() {
            }
            Element.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dom.Element", config, extraArgs);
            };
            return Element;
        }());
        dom.Element = Element;
    })(dom = TypExt.dom || (TypExt.dom = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Element = (function () {
        function Element() {
        }
        Element.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Element", config, extraArgs);
        };
        return Element;
    }());
    TypExt.Element = Element;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dom;
    (function (dom) {
        var ElementEvent = (function () {
            function ElementEvent() {
            }
            ElementEvent.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dom.ElementEvent", config, extraArgs);
            };
            return ElementEvent;
        }());
        dom.ElementEvent = ElementEvent;
    })(dom = TypExt.dom || (TypExt.dom = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dom;
    (function (dom) {
        var Fly = (function () {
            function Fly() {
            }
            Fly.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dom.Fly", config, extraArgs);
            };
            return Fly;
        }());
        dom.Fly = Fly;
    })(dom = TypExt.dom || (TypExt.dom = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dom;
    (function (dom) {
        var element;
        (function (element) {
            var Fly = (function () {
                function Fly() {
                }
                Fly.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.dom.element.Fly", config, extraArgs);
                };
                return Fly;
            }());
            element.Fly = Fly;
        })(element = dom.element || (dom.element = {}));
    })(dom = TypExt.dom || (TypExt.dom = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dom;
    (function (dom) {
        var GarbageCollector = (function () {
            function GarbageCollector() {
            }
            GarbageCollector.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dom.GarbageCollector", config, extraArgs);
            };
            return GarbageCollector;
        }());
        dom.GarbageCollector = GarbageCollector;
    })(dom = TypExt.dom || (TypExt.dom = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dom;
    (function (dom) {
        var Helper = (function () {
            function Helper() {
            }
            Helper.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dom.Helper", config, extraArgs);
            };
            return Helper;
        }());
        dom.Helper = Helper;
    })(dom = TypExt.dom || (TypExt.dom = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var DomHelper = (function () {
        function DomHelper() {
        }
        DomHelper.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.DomHelper", config, extraArgs);
        };
        return DomHelper;
    }());
    TypExt.DomHelper = DomHelper;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dom;
    (function (dom) {
        var Layer = (function () {
            function Layer() {
            }
            Layer.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dom.Layer", config, extraArgs);
            };
            return Layer;
        }());
        dom.Layer = Layer;
    })(dom = TypExt.dom || (TypExt.dom = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Layer = (function () {
        function Layer() {
        }
        Layer.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Layer", config, extraArgs);
        };
        return Layer;
    }());
    TypExt.Layer = Layer;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dom;
    (function (dom) {
        var Query = (function () {
            function Query() {
            }
            Query.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dom.Query", config, extraArgs);
            };
            return Query;
        }());
        dom.Query = Query;
    })(dom = TypExt.dom || (TypExt.dom = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var DomQuery = (function () {
        function DomQuery() {
        }
        DomQuery.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.DomQuery", config, extraArgs);
        };
        return DomQuery;
    }());
    TypExt.DomQuery = DomQuery;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var core;
    (function (core) {
        var DomQuery = (function () {
            function DomQuery() {
            }
            DomQuery.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.core.DomQuery", config, extraArgs);
            };
            return DomQuery;
        }());
        core.DomQuery = DomQuery;
    })(core = TypExt.core || (TypExt.core = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dom;
    (function (dom) {
        var Shadow = (function () {
            function Shadow() {
            }
            Shadow.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dom.Shadow", config, extraArgs);
            };
            return Shadow;
        }());
        dom.Shadow = Shadow;
    })(dom = TypExt.dom || (TypExt.dom = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Shadow = (function () {
        function Shadow() {
        }
        Shadow.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Shadow", config, extraArgs);
        };
        return Shadow;
    }());
    TypExt.Shadow = Shadow;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dom;
    (function (dom) {
        var Shim = (function () {
            function Shim() {
            }
            Shim.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dom.Shim", config, extraArgs);
            };
            return Shim;
        }());
        dom.Shim = Shim;
    })(dom = TypExt.dom || (TypExt.dom = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dom;
    (function (dom) {
        var Underlay = (function () {
            function Underlay() {
            }
            Underlay.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dom.Underlay", config, extraArgs);
            };
            return Underlay;
        }());
        dom.Underlay = Underlay;
    })(dom = TypExt.dom || (TypExt.dom = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dom;
    (function (dom) {
        var UnderlayPool = (function () {
            function UnderlayPool() {
            }
            UnderlayPool.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dom.UnderlayPool", config, extraArgs);
            };
            return UnderlayPool;
        }());
        dom.UnderlayPool = UnderlayPool;
    })(dom = TypExt.dom || (TypExt.dom = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var Animator = (function () {
            function Animator() {
            }
            Animator.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.draw.Animator", config, extraArgs);
            };
            return Animator;
        }());
        draw.Animator = Animator;
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var Color = (function () {
            function Color() {
            }
            Color.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.draw.Color", config, extraArgs);
            };
            return Color;
        }());
        draw.Color = Color;
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var Container = (function () {
            function Container() {
            }
            Container.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.draw.Container", config, extraArgs);
            };
            return Container;
        }());
        draw.Container = Container;
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var Component = (function () {
            function Component() {
            }
            Component.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.draw.Component", config, extraArgs);
            };
            return Component;
        }());
        draw.Component = Component;
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var ContainerBase = (function () {
            function ContainerBase() {
            }
            ContainerBase.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.draw.ContainerBase", config, extraArgs);
            };
            return ContainerBase;
        }());
        draw.ContainerBase = ContainerBase;
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var Draw = (function () {
            function Draw() {
            }
            Draw.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.draw.Draw", config, extraArgs);
            };
            return Draw;
        }());
        draw.Draw = Draw;
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var engine;
        (function (engine) {
            var Canvas = (function () {
                function Canvas() {
                }
                Canvas.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.engine.Canvas", config, extraArgs);
                };
                return Canvas;
            }());
            engine.Canvas = Canvas;
        })(engine = draw.engine || (draw.engine = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var engine;
        (function (engine) {
            var Excanvas = (function () {
                function Excanvas() {
                }
                Excanvas.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.engine.Excanvas", config, extraArgs);
                };
                return Excanvas;
            }());
            engine.Excanvas = Excanvas;
        })(engine = draw.engine || (draw.engine = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var engine;
        (function (engine) {
            var Svg = (function () {
                function Svg() {
                }
                Svg.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.engine.Svg", config, extraArgs);
                };
                return Svg;
            }());
            engine.Svg = Svg;
        })(engine = draw.engine || (draw.engine = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var engine;
        (function (engine) {
            var svgcontext;
            (function (svgcontext) {
                var Gradient = (function () {
                    function Gradient() {
                    }
                    Gradient.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.draw.engine.svgcontext.Gradient", config, extraArgs);
                    };
                    return Gradient;
                }());
                svgcontext.Gradient = Gradient;
            })(svgcontext = engine.svgcontext || (engine.svgcontext = {}));
        })(engine = draw.engine || (draw.engine = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var engine;
        (function (engine) {
            var SvgContext = (function () {
                function SvgContext() {
                }
                SvgContext.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.engine.SvgContext", config, extraArgs);
                };
                return SvgContext;
            }());
            engine.SvgContext = SvgContext;
        })(engine = draw.engine || (draw.engine = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var gradient;
        (function (gradient) {
            var Gradient = (function () {
                function Gradient() {
                }
                Gradient.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.gradient.Gradient", config, extraArgs);
                };
                return Gradient;
            }());
            gradient.Gradient = Gradient;
        })(gradient = draw.gradient || (draw.gradient = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var gradient;
        (function (gradient) {
            var GradientDefinition = (function () {
                function GradientDefinition() {
                }
                GradientDefinition.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.gradient.GradientDefinition", config, extraArgs);
                };
                return GradientDefinition;
            }());
            gradient.GradientDefinition = GradientDefinition;
        })(gradient = draw.gradient || (draw.gradient = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var gradient;
        (function (gradient) {
            var Linear = (function () {
                function Linear() {
                }
                Linear.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.gradient.Linear", config, extraArgs);
                };
                return Linear;
            }());
            gradient.Linear = Linear;
        })(gradient = draw.gradient || (draw.gradient = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var gradient;
        (function (gradient) {
            var Radial = (function () {
                function Radial() {
                }
                Radial.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.gradient.Radial", config, extraArgs);
                };
                return Radial;
            }());
            gradient.Radial = Radial;
        })(gradient = draw.gradient || (draw.gradient = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var LimitedCache = (function () {
            function LimitedCache() {
            }
            LimitedCache.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.draw.LimitedCache", config, extraArgs);
            };
            return LimitedCache;
        }());
        draw.LimitedCache = LimitedCache;
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var Matrix = (function () {
            function Matrix() {
            }
            Matrix.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.draw.Matrix", config, extraArgs);
            };
            return Matrix;
        }());
        draw.Matrix = Matrix;
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var modifier;
        (function (modifier) {
            var Animation = (function () {
                function Animation() {
                }
                Animation.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.modifier.Animation", config, extraArgs);
                };
                return Animation;
            }());
            modifier.Animation = Animation;
        })(modifier = draw.modifier || (draw.modifier = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var modifier;
        (function (modifier) {
            var Highlight = (function () {
                function Highlight() {
                }
                Highlight.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.modifier.Highlight", config, extraArgs);
                };
                return Highlight;
            }());
            modifier.Highlight = Highlight;
        })(modifier = draw.modifier || (draw.modifier = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var modifier;
        (function (modifier) {
            var Modifier = (function () {
                function Modifier() {
                }
                Modifier.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.modifier.Modifier", config, extraArgs);
                };
                return Modifier;
            }());
            modifier.Modifier = Modifier;
        })(modifier = draw.modifier || (draw.modifier = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var modifier;
        (function (modifier) {
            var Target = (function () {
                function Target() {
                }
                Target.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.modifier.Target", config, extraArgs);
                };
                return Target;
            }());
            modifier.Target = Target;
        })(modifier = draw.modifier || (draw.modifier = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var Path = (function () {
            function Path() {
            }
            Path.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.draw.Path", config, extraArgs);
            };
            return Path;
        }());
        draw.Path = Path;
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var PathUtil = (function () {
            function PathUtil() {
            }
            PathUtil.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.draw.PathUtil", config, extraArgs);
            };
            return PathUtil;
        }());
        draw.PathUtil = PathUtil;
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var plugin;
        (function (plugin) {
            var SpriteEvents = (function () {
                function SpriteEvents() {
                }
                SpriteEvents.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.plugin.SpriteEvents", config, extraArgs);
                };
                return SpriteEvents;
            }());
            plugin.SpriteEvents = SpriteEvents;
        })(plugin = draw.plugin || (draw.plugin = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var SegmentTree = (function () {
            function SegmentTree() {
            }
            SegmentTree.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.draw.SegmentTree", config, extraArgs);
            };
            return SegmentTree;
        }());
        draw.SegmentTree = SegmentTree;
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var sprite;
        (function (sprite) {
            var AnimationParser = (function () {
                function AnimationParser() {
                }
                AnimationParser.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.sprite.AnimationParser", config, extraArgs);
                };
                return AnimationParser;
            }());
            sprite.AnimationParser = AnimationParser;
        })(sprite = draw.sprite || (draw.sprite = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var sprite;
        (function (sprite) {
            var Arc = (function () {
                function Arc() {
                }
                Arc.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.sprite.Arc", config, extraArgs);
                };
                return Arc;
            }());
            sprite.Arc = Arc;
        })(sprite = draw.sprite || (draw.sprite = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var sprite;
        (function (sprite) {
            var Arrow = (function () {
                function Arrow() {
                }
                Arrow.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.sprite.Arrow", config, extraArgs);
                };
                return Arrow;
            }());
            sprite.Arrow = Arrow;
        })(sprite = draw.sprite || (draw.sprite = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var sprite;
        (function (sprite) {
            var AttributeDefinition = (function () {
                function AttributeDefinition() {
                }
                AttributeDefinition.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.sprite.AttributeDefinition", config, extraArgs);
                };
                return AttributeDefinition;
            }());
            sprite.AttributeDefinition = AttributeDefinition;
        })(sprite = draw.sprite || (draw.sprite = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var sprite;
        (function (sprite) {
            var AttributeParser = (function () {
                function AttributeParser() {
                }
                AttributeParser.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.sprite.AttributeParser", config, extraArgs);
                };
                return AttributeParser;
            }());
            sprite.AttributeParser = AttributeParser;
        })(sprite = draw.sprite || (draw.sprite = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var sprite;
        (function (sprite) {
            var Circle = (function () {
                function Circle() {
                }
                Circle.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.sprite.Circle", config, extraArgs);
                };
                return Circle;
            }());
            sprite.Circle = Circle;
        })(sprite = draw.sprite || (draw.sprite = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var sprite;
        (function (sprite) {
            var Composite = (function () {
                function Composite() {
                }
                Composite.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.sprite.Composite", config, extraArgs);
                };
                return Composite;
            }());
            sprite.Composite = Composite;
        })(sprite = draw.sprite || (draw.sprite = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var sprite;
        (function (sprite) {
            var Cross = (function () {
                function Cross() {
                }
                Cross.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.sprite.Cross", config, extraArgs);
                };
                return Cross;
            }());
            sprite.Cross = Cross;
        })(sprite = draw.sprite || (draw.sprite = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var sprite;
        (function (sprite) {
            var Diamond = (function () {
                function Diamond() {
                }
                Diamond.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.sprite.Diamond", config, extraArgs);
                };
                return Diamond;
            }());
            sprite.Diamond = Diamond;
        })(sprite = draw.sprite || (draw.sprite = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var sprite;
        (function (sprite) {
            var Ellipse = (function () {
                function Ellipse() {
                }
                Ellipse.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.sprite.Ellipse", config, extraArgs);
                };
                return Ellipse;
            }());
            sprite.Ellipse = Ellipse;
        })(sprite = draw.sprite || (draw.sprite = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var sprite;
        (function (sprite) {
            var EllipticalArc = (function () {
                function EllipticalArc() {
                }
                EllipticalArc.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.sprite.EllipticalArc", config, extraArgs);
                };
                return EllipticalArc;
            }());
            sprite.EllipticalArc = EllipticalArc;
        })(sprite = draw.sprite || (draw.sprite = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var sprite;
        (function (sprite) {
            var Image = (function () {
                function Image() {
                }
                Image.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.sprite.Image", config, extraArgs);
                };
                return Image;
            }());
            sprite.Image = Image;
        })(sprite = draw.sprite || (draw.sprite = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var sprite;
        (function (sprite) {
            var Instancing = (function () {
                function Instancing() {
                }
                Instancing.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.sprite.Instancing", config, extraArgs);
                };
                return Instancing;
            }());
            sprite.Instancing = Instancing;
        })(sprite = draw.sprite || (draw.sprite = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var sprite;
        (function (sprite) {
            var Line = (function () {
                function Line() {
                }
                Line.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.sprite.Line", config, extraArgs);
                };
                return Line;
            }());
            sprite.Line = Line;
        })(sprite = draw.sprite || (draw.sprite = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var sprite;
        (function (sprite) {
            var Path = (function () {
                function Path() {
                }
                Path.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.sprite.Path", config, extraArgs);
                };
                return Path;
            }());
            sprite.Path = Path;
        })(sprite = draw.sprite || (draw.sprite = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var sprite;
        (function (sprite) {
            var Plus = (function () {
                function Plus() {
                }
                Plus.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.sprite.Plus", config, extraArgs);
                };
                return Plus;
            }());
            sprite.Plus = Plus;
        })(sprite = draw.sprite || (draw.sprite = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var sprite;
        (function (sprite) {
            var Rect = (function () {
                function Rect() {
                }
                Rect.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.sprite.Rect", config, extraArgs);
                };
                return Rect;
            }());
            sprite.Rect = Rect;
        })(sprite = draw.sprite || (draw.sprite = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var sprite;
        (function (sprite) {
            var Sector = (function () {
                function Sector() {
                }
                Sector.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.sprite.Sector", config, extraArgs);
                };
                return Sector;
            }());
            sprite.Sector = Sector;
        })(sprite = draw.sprite || (draw.sprite = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var sprite;
        (function (sprite) {
            var Sprite = (function () {
                function Sprite() {
                }
                Sprite.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.sprite.Sprite", config, extraArgs);
                };
                return Sprite;
            }());
            sprite.Sprite = Sprite;
        })(sprite = draw.sprite || (draw.sprite = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var sprite;
        (function (sprite) {
            var Square = (function () {
                function Square() {
                }
                Square.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.sprite.Square", config, extraArgs);
                };
                return Square;
            }());
            sprite.Square = Square;
        })(sprite = draw.sprite || (draw.sprite = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var sprite;
        (function (sprite) {
            var Text = (function () {
                function Text() {
                }
                Text.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.sprite.Text", config, extraArgs);
                };
                return Text;
            }());
            sprite.Text = Text;
        })(sprite = draw.sprite || (draw.sprite = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var sprite;
        (function (sprite) {
            var Tick = (function () {
                function Tick() {
                }
                Tick.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.sprite.Tick", config, extraArgs);
                };
                return Tick;
            }());
            sprite.Tick = Tick;
        })(sprite = draw.sprite || (draw.sprite = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var sprite;
        (function (sprite) {
            var Triangle = (function () {
                function Triangle() {
                }
                Triangle.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.draw.sprite.Triangle", config, extraArgs);
                };
                return Triangle;
            }());
            sprite.Triangle = Triangle;
        })(sprite = draw.sprite || (draw.sprite = {}));
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var Surface = (function () {
            function Surface() {
            }
            Surface.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.draw.Surface", config, extraArgs);
            };
            return Surface;
        }());
        draw.Surface = Surface;
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var SurfaceBase = (function () {
            function SurfaceBase() {
            }
            SurfaceBase.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.draw.SurfaceBase", config, extraArgs);
            };
            return SurfaceBase;
        }());
        draw.SurfaceBase = SurfaceBase;
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var TextMeasurer = (function () {
            function TextMeasurer() {
            }
            TextMeasurer.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.draw.TextMeasurer", config, extraArgs);
            };
            return TextMeasurer;
        }());
        draw.TextMeasurer = TextMeasurer;
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var draw;
    (function (draw) {
        var TimingFunctions = (function () {
            function TimingFunctions() {
            }
            TimingFunctions.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.draw.TimingFunctions", config, extraArgs);
            };
            return TimingFunctions;
        }());
        draw.TimingFunctions = TimingFunctions;
    })(draw = TypExt.draw || (TypExt.draw = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Editor = (function () {
        function Editor() {
        }
        Editor.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Editor", config, extraArgs);
        };
        return Editor;
    }());
    TypExt.Editor = Editor;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ElementLoader = (function () {
        function ElementLoader() {
        }
        ElementLoader.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.ElementLoader", config, extraArgs);
        };
        return ElementLoader;
    }());
    TypExt.ElementLoader = ElementLoader;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var enums;
    (function (enums) {
        var Feature = (function () {
            function Feature() {
            }
            Feature.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.enums.Feature", config, extraArgs);
            };
            return Feature;
        }());
        enums.Feature = Feature;
    })(enums = TypExt.enums || (TypExt.enums = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var enums;
    (function (enums) {
        var Layout = (function () {
            function Layout() {
            }
            Layout.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.enums.Layout", config, extraArgs);
            };
            return Layout;
        }());
        enums.Layout = Layout;
    })(enums = TypExt.enums || (TypExt.enums = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var enums;
    (function (enums) {
        var Plugin = (function () {
            function Plugin() {
            }
            Plugin.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.enums.Plugin", config, extraArgs);
            };
            return Plugin;
        }());
        enums.Plugin = Plugin;
    })(enums = TypExt.enums || (TypExt.enums = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var enums;
    (function (enums) {
        var Widget = (function () {
            function Widget() {
            }
            Widget.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.enums.Widget", config, extraArgs);
            };
            return Widget;
        }());
        enums.Widget = Widget;
    })(enums = TypExt.enums || (TypExt.enums = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var env;
    (function (env) {
        var Browser = (function () {
            function Browser() {
            }
            Browser.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.env.Browser", config, extraArgs);
            };
            return Browser;
        }());
        env.Browser = Browser;
    })(env = TypExt.env || (TypExt.env = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var env;
    (function (env) {
        var OS = (function () {
            function OS() {
            }
            OS.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.env.OS", config, extraArgs);
            };
            return OS;
        }());
        env.OS = OS;
    })(env = TypExt.env || (TypExt.env = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var env;
    (function (env) {
        var Ready = (function () {
            function Ready() {
            }
            Ready.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.env.Ready", config, extraArgs);
            };
            return Ready;
        }());
        env.Ready = Ready;
    })(env = TypExt.env || (TypExt.env = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Error = (function () {
        function Error() {
        }
        Error.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Error", config, extraArgs);
        };
        return Error;
    }());
    TypExt.Error = Error;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var event;
    (function (event) {
        var Event = (function () {
            function Event() {
            }
            Event.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.event.Event", config, extraArgs);
            };
            return Event;
        }());
        event.Event = Event;
    })(event = TypExt.event || (TypExt.event = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var EventObjectImpl = (function () {
        function EventObjectImpl() {
        }
        EventObjectImpl.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.EventObjectImpl", config, extraArgs);
        };
        return EventObjectImpl;
    }());
    TypExt.EventObjectImpl = EventObjectImpl;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var event;
    (function (event) {
        var gesture;
        (function (gesture) {
            var DoubleTap = (function () {
                function DoubleTap() {
                }
                DoubleTap.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.event.gesture.DoubleTap", config, extraArgs);
                };
                return DoubleTap;
            }());
            gesture.DoubleTap = DoubleTap;
        })(gesture = event.gesture || (event.gesture = {}));
    })(event = TypExt.event || (TypExt.event = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var event;
    (function (event) {
        var gesture;
        (function (gesture) {
            var Drag = (function () {
                function Drag() {
                }
                Drag.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.event.gesture.Drag", config, extraArgs);
                };
                return Drag;
            }());
            gesture.Drag = Drag;
        })(gesture = event.gesture || (event.gesture = {}));
    })(event = TypExt.event || (TypExt.event = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var event;
    (function (event) {
        var gesture;
        (function (gesture) {
            var EdgeSwipe = (function () {
                function EdgeSwipe() {
                }
                EdgeSwipe.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.event.gesture.EdgeSwipe", config, extraArgs);
                };
                return EdgeSwipe;
            }());
            gesture.EdgeSwipe = EdgeSwipe;
        })(gesture = event.gesture || (event.gesture = {}));
    })(event = TypExt.event || (TypExt.event = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var event;
    (function (event) {
        var gesture;
        (function (gesture) {
            var LongPress = (function () {
                function LongPress() {
                }
                LongPress.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.event.gesture.LongPress", config, extraArgs);
                };
                return LongPress;
            }());
            gesture.LongPress = LongPress;
        })(gesture = event.gesture || (event.gesture = {}));
    })(event = TypExt.event || (TypExt.event = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var event;
    (function (event) {
        var gesture;
        (function (gesture) {
            var MultiTouch = (function () {
                function MultiTouch() {
                }
                MultiTouch.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.event.gesture.MultiTouch", config, extraArgs);
                };
                return MultiTouch;
            }());
            gesture.MultiTouch = MultiTouch;
        })(gesture = event.gesture || (event.gesture = {}));
    })(event = TypExt.event || (TypExt.event = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var event;
    (function (event) {
        var gesture;
        (function (gesture) {
            var Pinch = (function () {
                function Pinch() {
                }
                Pinch.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.event.gesture.Pinch", config, extraArgs);
                };
                return Pinch;
            }());
            gesture.Pinch = Pinch;
        })(gesture = event.gesture || (event.gesture = {}));
    })(event = TypExt.event || (TypExt.event = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var event;
    (function (event) {
        var gesture;
        (function (gesture) {
            var Recognizer = (function () {
                function Recognizer() {
                }
                Recognizer.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.event.gesture.Recognizer", config, extraArgs);
                };
                return Recognizer;
            }());
            gesture.Recognizer = Recognizer;
        })(gesture = event.gesture || (event.gesture = {}));
    })(event = TypExt.event || (TypExt.event = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var event;
    (function (event) {
        var gesture;
        (function (gesture) {
            var Rotate = (function () {
                function Rotate() {
                }
                Rotate.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.event.gesture.Rotate", config, extraArgs);
                };
                return Rotate;
            }());
            gesture.Rotate = Rotate;
        })(gesture = event.gesture || (event.gesture = {}));
    })(event = TypExt.event || (TypExt.event = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var event;
    (function (event) {
        var gesture;
        (function (gesture) {
            var SingleTouch = (function () {
                function SingleTouch() {
                }
                SingleTouch.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.event.gesture.SingleTouch", config, extraArgs);
                };
                return SingleTouch;
            }());
            gesture.SingleTouch = SingleTouch;
        })(gesture = event.gesture || (event.gesture = {}));
    })(event = TypExt.event || (TypExt.event = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var event;
    (function (event) {
        var gesture;
        (function (gesture) {
            var Swipe = (function () {
                function Swipe() {
                }
                Swipe.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.event.gesture.Swipe", config, extraArgs);
                };
                return Swipe;
            }());
            gesture.Swipe = Swipe;
        })(gesture = event.gesture || (event.gesture = {}));
    })(event = TypExt.event || (TypExt.event = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var event;
    (function (event) {
        var gesture;
        (function (gesture) {
            var Tap = (function () {
                function Tap() {
                }
                Tap.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.event.gesture.Tap", config, extraArgs);
                };
                return Tap;
            }());
            gesture.Tap = Tap;
        })(gesture = event.gesture || (event.gesture = {}));
    })(event = TypExt.event || (TypExt.event = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var event;
    (function (event) {
        var publisher;
        (function (publisher) {
            var Dom = (function () {
                function Dom() {
                }
                Dom.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.event.publisher.Dom", config, extraArgs);
                };
                return Dom;
            }());
            publisher.Dom = Dom;
        })(publisher = event.publisher || (event.publisher = {}));
    })(event = TypExt.event || (TypExt.event = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var event;
    (function (event) {
        var publisher;
        (function (publisher) {
            var ElementPaint = (function () {
                function ElementPaint() {
                }
                ElementPaint.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.event.publisher.ElementPaint", config, extraArgs);
                };
                return ElementPaint;
            }());
            publisher.ElementPaint = ElementPaint;
        })(publisher = event.publisher || (event.publisher = {}));
    })(event = TypExt.event || (TypExt.event = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var event;
    (function (event) {
        var publisher;
        (function (publisher) {
            var ElementSize = (function () {
                function ElementSize() {
                }
                ElementSize.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.event.publisher.ElementSize", config, extraArgs);
                };
                return ElementSize;
            }());
            publisher.ElementSize = ElementSize;
        })(publisher = event.publisher || (event.publisher = {}));
    })(event = TypExt.event || (TypExt.event = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var event;
    (function (event) {
        var publisher;
        (function (publisher) {
            var Focus = (function () {
                function Focus() {
                }
                Focus.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.event.publisher.Focus", config, extraArgs);
                };
                return Focus;
            }());
            publisher.Focus = Focus;
        })(publisher = event.publisher || (event.publisher = {}));
    })(event = TypExt.event || (TypExt.event = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var event;
    (function (event) {
        var publisher;
        (function (publisher) {
            var Gesture = (function () {
                function Gesture() {
                }
                Gesture.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.event.publisher.Gesture", config, extraArgs);
                };
                return Gesture;
            }());
            publisher.Gesture = Gesture;
        })(publisher = event.publisher || (event.publisher = {}));
    })(event = TypExt.event || (TypExt.event = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var event;
    (function (event) {
        var publisher;
        (function (publisher) {
            var MouseEnterLeave = (function () {
                function MouseEnterLeave() {
                }
                MouseEnterLeave.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.event.publisher.MouseEnterLeave", config, extraArgs);
                };
                return MouseEnterLeave;
            }());
            publisher.MouseEnterLeave = MouseEnterLeave;
        })(publisher = event.publisher || (event.publisher = {}));
    })(event = TypExt.event || (TypExt.event = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var event;
    (function (event) {
        var publisher;
        (function (publisher) {
            var Publisher = (function () {
                function Publisher() {
                }
                Publisher.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.event.publisher.Publisher", config, extraArgs);
                };
                return Publisher;
            }());
            publisher.Publisher = Publisher;
        })(publisher = event.publisher || (event.publisher = {}));
    })(event = TypExt.event || (TypExt.event = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Evented = (function () {
        function Evented() {
        }
        Evented.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Evented", config, extraArgs);
        };
        return Evented;
    }());
    TypExt.Evented = Evented;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var EventedBase = (function () {
        function EventedBase() {
        }
        EventedBase.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.EventedBase", config, extraArgs);
        };
        return EventedBase;
    }());
    TypExt.EventedBase = EventedBase;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var EventManager = (function () {
        function EventManager() {
        }
        EventManager.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.EventManager", config, extraArgs);
        };
        return EventManager;
    }());
    TypExt.EventManager = EventManager;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Factory = (function () {
        function Factory() {
        }
        Factory.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Factory", config, extraArgs);
        };
        return Factory;
    }());
    TypExt.Factory = Factory;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Feature = (function () {
        function Feature() {
        }
        Feature.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Feature", config, extraArgs);
        };
        return Feature;
    }());
    TypExt.Feature = Feature;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var flash;
    (function (flash) {
        var Component = (function () {
            function Component() {
            }
            Component.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.flash.Component", config, extraArgs);
            };
            return Component;
        }());
        flash.Component = Component;
    })(flash = TypExt.flash || (TypExt.flash = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var FlashComponent = (function () {
        function FlashComponent() {
        }
        FlashComponent.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.FlashComponent", config, extraArgs);
        };
        return FlashComponent;
    }());
    TypExt.FlashComponent = FlashComponent;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var FocusManager = (function () {
        function FocusManager() {
        }
        FocusManager.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.FocusManager", config, extraArgs);
        };
        return FocusManager;
    }());
    TypExt.FocusManager = FocusManager;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var FocusMgr = (function () {
        function FocusMgr() {
        }
        FocusMgr.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.FocusMgr", config, extraArgs);
        };
        return FocusMgr;
    }());
    TypExt.FocusMgr = FocusMgr;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var action;
        (function (action) {
            var Action = (function () {
                function Action() {
                }
                Action.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.action.Action", config, extraArgs);
                };
                return Action;
            }());
            action.Action = Action;
        })(action = form.action || (form.action = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var Action = (function () {
            function Action() {
            }
            Action.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.Action", config, extraArgs);
            };
            return Action;
        }());
        form.Action = Action;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var action;
        (function (action) {
            var DirectAction = (function () {
                function DirectAction() {
                }
                DirectAction.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.action.DirectAction", config, extraArgs);
                };
                return DirectAction;
            }());
            action.DirectAction = DirectAction;
        })(action = form.action || (form.action = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var action;
        (function (action) {
            var DirectLoad = (function () {
                function DirectLoad() {
                }
                DirectLoad.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.action.DirectLoad", config, extraArgs);
                };
                return DirectLoad;
            }());
            action.DirectLoad = DirectLoad;
        })(action = form.action || (form.action = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var action;
        (function (action) {
            var DirectSubmit = (function () {
                function DirectSubmit() {
                }
                DirectSubmit.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.action.DirectSubmit", config, extraArgs);
                };
                return DirectSubmit;
            }());
            action.DirectSubmit = DirectSubmit;
        })(action = form.action || (form.action = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var action;
        (function (action) {
            var Load = (function () {
                function Load() {
                }
                Load.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.action.Load", config, extraArgs);
                };
                return Load;
            }());
            action.Load = Load;
        })(action = form.action || (form.action = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var action;
        (function (action) {
            var StandardSubmit = (function () {
                function StandardSubmit() {
                }
                StandardSubmit.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.action.StandardSubmit", config, extraArgs);
                };
                return StandardSubmit;
            }());
            action.StandardSubmit = StandardSubmit;
        })(action = form.action || (form.action = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var action;
        (function (action) {
            var Submit = (function () {
                function Submit() {
                }
                Submit.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.action.Submit", config, extraArgs);
                };
                return Submit;
            }());
            action.Submit = Submit;
        })(action = form.action || (form.action = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var Basic = (function () {
            function Basic() {
            }
            Basic.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.Basic", config, extraArgs);
            };
            return Basic;
        }());
        form.Basic = Basic;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var BasicForm = (function () {
            function BasicForm() {
            }
            BasicForm.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.BasicForm", config, extraArgs);
            };
            return BasicForm;
        }());
        form.BasicForm = BasicForm;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var CheckboxGroup = (function () {
            function CheckboxGroup() {
            }
            CheckboxGroup.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.CheckboxGroup", config, extraArgs);
            };
            return CheckboxGroup;
        }());
        form.CheckboxGroup = CheckboxGroup;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var CheckboxManager = (function () {
            function CheckboxManager() {
            }
            CheckboxManager.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.CheckboxManager", config, extraArgs);
            };
            return CheckboxManager;
        }());
        form.CheckboxManager = CheckboxManager;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var field;
        (function (field) {
            var Base = (function () {
                function Base() {
                }
                Base.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.field.Base", config, extraArgs);
                };
                return Base;
            }());
            field.Base = Base;
        })(field = form.field || (form.field = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var Field = (function () {
            function Field() {
            }
            Field.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.Field", config, extraArgs);
            };
            return Field;
        }());
        form.Field = Field;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var BaseField = (function () {
            function BaseField() {
            }
            BaseField.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.BaseField", config, extraArgs);
            };
            return BaseField;
        }());
        form.BaseField = BaseField;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var field;
        (function (field) {
            var Checkbox = (function () {
                function Checkbox() {
                }
                Checkbox.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.field.Checkbox", config, extraArgs);
                };
                return Checkbox;
            }());
            field.Checkbox = Checkbox;
        })(field = form.field || (form.field = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var Checkbox = (function () {
            function Checkbox() {
            }
            Checkbox.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.Checkbox", config, extraArgs);
            };
            return Checkbox;
        }());
        form.Checkbox = Checkbox;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var field;
        (function (field) {
            var ComboBox = (function () {
                function ComboBox() {
                }
                ComboBox.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.field.ComboBox", config, extraArgs);
                };
                return ComboBox;
            }());
            field.ComboBox = ComboBox;
        })(field = form.field || (form.field = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var ComboBox = (function () {
            function ComboBox() {
            }
            ComboBox.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.ComboBox", config, extraArgs);
            };
            return ComboBox;
        }());
        form.ComboBox = ComboBox;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var field;
        (function (field) {
            var Date = (function () {
                function Date() {
                }
                Date.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.field.Date", config, extraArgs);
                };
                return Date;
            }());
            field.Date = Date;
        })(field = form.field || (form.field = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var DateField = (function () {
            function DateField() {
            }
            DateField.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.DateField", config, extraArgs);
            };
            return DateField;
        }());
        form.DateField = DateField;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var Date = (function () {
            function Date() {
            }
            Date.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.Date", config, extraArgs);
            };
            return Date;
        }());
        form.Date = Date;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var field;
        (function (field) {
            var Display = (function () {
                function Display() {
                }
                Display.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.field.Display", config, extraArgs);
                };
                return Display;
            }());
            field.Display = Display;
        })(field = form.field || (form.field = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var DisplayField = (function () {
            function DisplayField() {
            }
            DisplayField.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.DisplayField", config, extraArgs);
            };
            return DisplayField;
        }());
        form.DisplayField = DisplayField;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var Display = (function () {
            function Display() {
            }
            Display.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.Display", config, extraArgs);
            };
            return Display;
        }());
        form.Display = Display;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var field;
        (function (field) {
            var Field = (function () {
                function Field() {
                }
                Field.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.field.Field", config, extraArgs);
                };
                return Field;
            }());
            field.Field = Field;
        })(field = form.field || (form.field = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var field;
        (function (field) {
            var File = (function () {
                function File() {
                }
                File.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.field.File", config, extraArgs);
                };
                return File;
            }());
            field.File = File;
        })(field = form.field || (form.field = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var FileUploadField = (function () {
            function FileUploadField() {
            }
            FileUploadField.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.FileUploadField", config, extraArgs);
            };
            return FileUploadField;
        }());
        form.FileUploadField = FileUploadField;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ux;
    (function (ux) {
        var form;
        (function (form) {
            var FileUploadField = (function () {
                function FileUploadField() {
                }
                FileUploadField.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.ux.form.FileUploadField", config, extraArgs);
                };
                return FileUploadField;
            }());
            form.FileUploadField = FileUploadField;
        })(form = ux.form || (ux.form = {}));
    })(ux = TypExt.ux || (TypExt.ux = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var File = (function () {
            function File() {
            }
            File.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.File", config, extraArgs);
            };
            return File;
        }());
        form.File = File;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var field;
        (function (field) {
            var FileButton = (function () {
                function FileButton() {
                }
                FileButton.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.field.FileButton", config, extraArgs);
                };
                return FileButton;
            }());
            field.FileButton = FileButton;
        })(field = form.field || (form.field = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var field;
        (function (field) {
            var Hidden = (function () {
                function Hidden() {
                }
                Hidden.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.field.Hidden", config, extraArgs);
                };
                return Hidden;
            }());
            field.Hidden = Hidden;
        })(field = form.field || (form.field = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var Hidden = (function () {
            function Hidden() {
            }
            Hidden.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.Hidden", config, extraArgs);
            };
            return Hidden;
        }());
        form.Hidden = Hidden;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var field;
        (function (field) {
            var HtmlEditor = (function () {
                function HtmlEditor() {
                }
                HtmlEditor.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.field.HtmlEditor", config, extraArgs);
                };
                return HtmlEditor;
            }());
            field.HtmlEditor = HtmlEditor;
        })(field = form.field || (form.field = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var HtmlEditor = (function () {
            function HtmlEditor() {
            }
            HtmlEditor.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.HtmlEditor", config, extraArgs);
            };
            return HtmlEditor;
        }());
        form.HtmlEditor = HtmlEditor;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var field;
        (function (field) {
            var Number = (function () {
                function Number() {
                }
                Number.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.field.Number", config, extraArgs);
                };
                return Number;
            }());
            field.Number = Number;
        })(field = form.field || (form.field = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var NumberField = (function () {
            function NumberField() {
            }
            NumberField.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.NumberField", config, extraArgs);
            };
            return NumberField;
        }());
        form.NumberField = NumberField;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var Number = (function () {
            function Number() {
            }
            Number.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.Number", config, extraArgs);
            };
            return Number;
        }());
        form.Number = Number;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var field;
        (function (field) {
            var Picker = (function () {
                function Picker() {
                }
                Picker.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.field.Picker", config, extraArgs);
                };
                return Picker;
            }());
            field.Picker = Picker;
        })(field = form.field || (form.field = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var Picker = (function () {
            function Picker() {
            }
            Picker.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.Picker", config, extraArgs);
            };
            return Picker;
        }());
        form.Picker = Picker;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var field;
        (function (field) {
            var Radio = (function () {
                function Radio() {
                }
                Radio.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.field.Radio", config, extraArgs);
                };
                return Radio;
            }());
            field.Radio = Radio;
        })(field = form.field || (form.field = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var Radio = (function () {
            function Radio() {
            }
            Radio.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.Radio", config, extraArgs);
            };
            return Radio;
        }());
        form.Radio = Radio;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var field;
        (function (field) {
            var Spinner = (function () {
                function Spinner() {
                }
                Spinner.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.field.Spinner", config, extraArgs);
                };
                return Spinner;
            }());
            field.Spinner = Spinner;
        })(field = form.field || (form.field = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var Spinner = (function () {
            function Spinner() {
            }
            Spinner.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.Spinner", config, extraArgs);
            };
            return Spinner;
        }());
        form.Spinner = Spinner;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var field;
        (function (field) {
            var Tag = (function () {
                function Tag() {
                }
                Tag.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.field.Tag", config, extraArgs);
                };
                return Tag;
            }());
            field.Tag = Tag;
        })(field = form.field || (form.field = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var field;
        (function (field) {
            var Text = (function () {
                function Text() {
                }
                Text.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.field.Text", config, extraArgs);
                };
                return Text;
            }());
            field.Text = Text;
        })(field = form.field || (form.field = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var TextField = (function () {
            function TextField() {
            }
            TextField.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.TextField", config, extraArgs);
            };
            return TextField;
        }());
        form.TextField = TextField;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var Text = (function () {
            function Text() {
            }
            Text.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.Text", config, extraArgs);
            };
            return Text;
        }());
        form.Text = Text;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var field;
        (function (field) {
            var TextArea = (function () {
                function TextArea() {
                }
                TextArea.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.field.TextArea", config, extraArgs);
                };
                return TextArea;
            }());
            field.TextArea = TextArea;
        })(field = form.field || (form.field = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var TextArea = (function () {
            function TextArea() {
            }
            TextArea.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.TextArea", config, extraArgs);
            };
            return TextArea;
        }());
        form.TextArea = TextArea;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var field;
        (function (field) {
            var Time = (function () {
                function Time() {
                }
                Time.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.field.Time", config, extraArgs);
                };
                return Time;
            }());
            field.Time = Time;
        })(field = form.field || (form.field = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var TimeField = (function () {
            function TimeField() {
            }
            TimeField.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.TimeField", config, extraArgs);
            };
            return TimeField;
        }());
        form.TimeField = TimeField;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var Time = (function () {
            function Time() {
            }
            Time.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.Time", config, extraArgs);
            };
            return Time;
        }());
        form.Time = Time;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var field;
        (function (field) {
            var Trigger = (function () {
                function Trigger() {
                }
                Trigger.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.field.Trigger", config, extraArgs);
                };
                return Trigger;
            }());
            field.Trigger = Trigger;
        })(field = form.field || (form.field = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var TriggerField = (function () {
            function TriggerField() {
            }
            TriggerField.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.TriggerField", config, extraArgs);
            };
            return TriggerField;
        }());
        form.TriggerField = TriggerField;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var TwinTriggerField = (function () {
            function TwinTriggerField() {
            }
            TwinTriggerField.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.TwinTriggerField", config, extraArgs);
            };
            return TwinTriggerField;
        }());
        form.TwinTriggerField = TwinTriggerField;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var Trigger = (function () {
            function Trigger() {
            }
            Trigger.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.Trigger", config, extraArgs);
            };
            return Trigger;
        }());
        form.Trigger = Trigger;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var field;
        (function (field) {
            var VTypes = (function () {
                function VTypes() {
                }
                VTypes.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.field.VTypes", config, extraArgs);
                };
                return VTypes;
            }());
            field.VTypes = VTypes;
        })(field = form.field || (form.field = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var VTypes = (function () {
            function VTypes() {
            }
            VTypes.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.VTypes", config, extraArgs);
            };
            return VTypes;
        }());
        form.VTypes = VTypes;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var FieldAncestor = (function () {
            function FieldAncestor() {
            }
            FieldAncestor.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.FieldAncestor", config, extraArgs);
            };
            return FieldAncestor;
        }());
        form.FieldAncestor = FieldAncestor;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var FieldContainer = (function () {
            function FieldContainer() {
            }
            FieldContainer.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.FieldContainer", config, extraArgs);
            };
            return FieldContainer;
        }());
        form.FieldContainer = FieldContainer;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var FieldSet = (function () {
            function FieldSet() {
            }
            FieldSet.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.FieldSet", config, extraArgs);
            };
            return FieldSet;
        }());
        form.FieldSet = FieldSet;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var Label = (function () {
            function Label() {
            }
            Label.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.Label", config, extraArgs);
            };
            return Label;
        }());
        form.Label = Label;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var Labelable = (function () {
            function Labelable() {
            }
            Labelable.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.Labelable", config, extraArgs);
            };
            return Labelable;
        }());
        form.Labelable = Labelable;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var Panel = (function () {
            function Panel() {
            }
            Panel.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.Panel", config, extraArgs);
            };
            return Panel;
        }());
        form.Panel = Panel;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var FormPanel = (function () {
        function FormPanel() {
        }
        FormPanel.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.FormPanel", config, extraArgs);
        };
        return FormPanel;
    }());
    TypExt.FormPanel = FormPanel;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var FormPanel = (function () {
            function FormPanel() {
            }
            FormPanel.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.FormPanel", config, extraArgs);
            };
            return FormPanel;
        }());
        form.FormPanel = FormPanel;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var RadioGroup = (function () {
            function RadioGroup() {
            }
            RadioGroup.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.RadioGroup", config, extraArgs);
            };
            return RadioGroup;
        }());
        form.RadioGroup = RadioGroup;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var RadioManager = (function () {
            function RadioManager() {
            }
            RadioManager.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.RadioManager", config, extraArgs);
            };
            return RadioManager;
        }());
        form.RadioManager = RadioManager;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var trigger;
        (function (trigger) {
            var Component = (function () {
                function Component() {
                }
                Component.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.trigger.Component", config, extraArgs);
                };
                return Component;
            }());
            trigger.Component = Component;
        })(trigger = form.trigger || (form.trigger = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var trigger;
        (function (trigger) {
            var Spinner = (function () {
                function Spinner() {
                }
                Spinner.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.trigger.Spinner", config, extraArgs);
                };
                return Spinner;
            }());
            trigger.Spinner = Spinner;
        })(trigger = form.trigger || (form.trigger = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var trigger;
        (function (trigger) {
            var Trigger = (function () {
                function Trigger() {
                }
                Trigger.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.form.trigger.Trigger", config, extraArgs);
                };
                return Trigger;
            }());
            trigger.Trigger = Trigger;
        })(trigger = form.trigger || (form.trigger = {}));
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Function = (function () {
        function Function() {
        }
        Function.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Function", config, extraArgs);
        };
        return Function;
    }());
    TypExt.Function = Function;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var Anim = (function () {
            function Anim() {
            }
            Anim.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.fx.Anim", config, extraArgs);
            };
            return Anim;
        }());
        fx.Anim = Anim;
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var animation;
        (function (animation) {
            var Abstract = (function () {
                function Abstract() {
                }
                Abstract.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.animation.Abstract", config, extraArgs);
                };
                return Abstract;
            }());
            animation.Abstract = Abstract;
        })(animation = fx.animation || (fx.animation = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var animation;
        (function (animation) {
            var Cube = (function () {
                function Cube() {
                }
                Cube.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.animation.Cube", config, extraArgs);
                };
                return Cube;
            }());
            animation.Cube = Cube;
        })(animation = fx.animation || (fx.animation = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var animation;
        (function (animation) {
            var Fade = (function () {
                function Fade() {
                }
                Fade.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.animation.Fade", config, extraArgs);
                };
                return Fade;
            }());
            animation.Fade = Fade;
        })(animation = fx.animation || (fx.animation = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var animation;
        (function (animation) {
            var FadeIn = (function () {
                function FadeIn() {
                }
                FadeIn.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.animation.FadeIn", config, extraArgs);
                };
                return FadeIn;
            }());
            animation.FadeIn = FadeIn;
        })(animation = fx.animation || (fx.animation = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var animation;
        (function (animation) {
            var FadeOut = (function () {
                function FadeOut() {
                }
                FadeOut.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.animation.FadeOut", config, extraArgs);
                };
                return FadeOut;
            }());
            animation.FadeOut = FadeOut;
        })(animation = fx.animation || (fx.animation = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var animation;
        (function (animation) {
            var Flip = (function () {
                function Flip() {
                }
                Flip.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.animation.Flip", config, extraArgs);
                };
                return Flip;
            }());
            animation.Flip = Flip;
        })(animation = fx.animation || (fx.animation = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var Animation = (function () {
            function Animation() {
            }
            Animation.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.fx.Animation", config, extraArgs);
            };
            return Animation;
        }());
        fx.Animation = Animation;
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var animation;
        (function (animation) {
            var Pop = (function () {
                function Pop() {
                }
                Pop.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.animation.Pop", config, extraArgs);
                };
                return Pop;
            }());
            animation.Pop = Pop;
        })(animation = fx.animation || (fx.animation = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var animation;
        (function (animation) {
            var PopIn = (function () {
                function PopIn() {
                }
                PopIn.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.animation.PopIn", config, extraArgs);
                };
                return PopIn;
            }());
            animation.PopIn = PopIn;
        })(animation = fx.animation || (fx.animation = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var animation;
        (function (animation) {
            var PopOut = (function () {
                function PopOut() {
                }
                PopOut.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.animation.PopOut", config, extraArgs);
                };
                return PopOut;
            }());
            animation.PopOut = PopOut;
        })(animation = fx.animation || (fx.animation = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var animation;
        (function (animation) {
            var Slide = (function () {
                function Slide() {
                }
                Slide.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.animation.Slide", config, extraArgs);
                };
                return Slide;
            }());
            animation.Slide = Slide;
        })(animation = fx.animation || (fx.animation = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var animation;
        (function (animation) {
            var SlideIn = (function () {
                function SlideIn() {
                }
                SlideIn.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.animation.SlideIn", config, extraArgs);
                };
                return SlideIn;
            }());
            animation.SlideIn = SlideIn;
        })(animation = fx.animation || (fx.animation = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var animation;
        (function (animation) {
            var SlideOut = (function () {
                function SlideOut() {
                }
                SlideOut.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.animation.SlideOut", config, extraArgs);
                };
                return SlideOut;
            }());
            animation.SlideOut = SlideOut;
        })(animation = fx.animation || (fx.animation = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var animation;
        (function (animation) {
            var Wipe = (function () {
                function Wipe() {
                }
                Wipe.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.animation.Wipe", config, extraArgs);
                };
                return Wipe;
            }());
            animation.Wipe = Wipe;
        })(animation = fx.animation || (fx.animation = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var animation;
        (function (animation) {
            var WipeIn = (function () {
                function WipeIn() {
                }
                WipeIn.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.animation.WipeIn", config, extraArgs);
                };
                return WipeIn;
            }());
            animation.WipeIn = WipeIn;
        })(animation = fx.animation || (fx.animation = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var animation;
        (function (animation) {
            var WipeOut = (function () {
                function WipeOut() {
                }
                WipeOut.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.animation.WipeOut", config, extraArgs);
                };
                return WipeOut;
            }());
            animation.WipeOut = WipeOut;
        })(animation = fx.animation || (fx.animation = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var Animator = (function () {
            function Animator() {
            }
            Animator.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.fx.Animator", config, extraArgs);
            };
            return Animator;
        }());
        fx.Animator = Animator;
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var CubicBezier = (function () {
            function CubicBezier() {
            }
            CubicBezier.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.fx.CubicBezier", config, extraArgs);
            };
            return CubicBezier;
        }());
        fx.CubicBezier = CubicBezier;
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var DrawPath = (function () {
            function DrawPath() {
            }
            DrawPath.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.fx.DrawPath", config, extraArgs);
            };
            return DrawPath;
        }());
        fx.DrawPath = DrawPath;
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var easing;
        (function (easing) {
            var Abstract = (function () {
                function Abstract() {
                }
                Abstract.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.easing.Abstract", config, extraArgs);
                };
                return Abstract;
            }());
            easing.Abstract = Abstract;
        })(easing = fx.easing || (fx.easing = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var easing;
        (function (easing) {
            var Bounce = (function () {
                function Bounce() {
                }
                Bounce.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.easing.Bounce", config, extraArgs);
                };
                return Bounce;
            }());
            easing.Bounce = Bounce;
        })(easing = fx.easing || (fx.easing = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var easing;
        (function (easing) {
            var BoundMomentum = (function () {
                function BoundMomentum() {
                }
                BoundMomentum.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.easing.BoundMomentum", config, extraArgs);
                };
                return BoundMomentum;
            }());
            easing.BoundMomentum = BoundMomentum;
        })(easing = fx.easing || (fx.easing = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var easing;
        (function (easing) {
            var EaseIn = (function () {
                function EaseIn() {
                }
                EaseIn.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.easing.EaseIn", config, extraArgs);
                };
                return EaseIn;
            }());
            easing.EaseIn = EaseIn;
        })(easing = fx.easing || (fx.easing = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var easing;
        (function (easing) {
            var EaseOut = (function () {
                function EaseOut() {
                }
                EaseOut.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.easing.EaseOut", config, extraArgs);
                };
                return EaseOut;
            }());
            easing.EaseOut = EaseOut;
        })(easing = fx.easing || (fx.easing = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var easing;
        (function (easing) {
            var Easing = (function () {
                function Easing() {
                }
                Easing.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.easing.Easing", config, extraArgs);
                };
                return Easing;
            }());
            easing.Easing = Easing;
        })(easing = fx.easing || (fx.easing = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var Easing = (function () {
            function Easing() {
            }
            Easing.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.fx.Easing", config, extraArgs);
            };
            return Easing;
        }());
        fx.Easing = Easing;
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var easing;
        (function (easing) {
            var Linear = (function () {
                function Linear() {
                }
                Linear.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.easing.Linear", config, extraArgs);
                };
                return Linear;
            }());
            easing.Linear = Linear;
        })(easing = fx.easing || (fx.easing = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var easing;
        (function (easing) {
            var Momentum = (function () {
                function Momentum() {
                }
                Momentum.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.easing.Momentum", config, extraArgs);
                };
                return Momentum;
            }());
            easing.Momentum = Momentum;
        })(easing = fx.easing || (fx.easing = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var layout;
        (function (layout) {
            var card;
            (function (card) {
                var Abstract = (function () {
                    function Abstract() {
                    }
                    Abstract.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.fx.layout.card.Abstract", config, extraArgs);
                    };
                    return Abstract;
                }());
                card.Abstract = Abstract;
            })(card = layout.card || (layout.card = {}));
        })(layout = fx.layout || (fx.layout = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var layout;
        (function (layout) {
            var card;
            (function (card) {
                var Cover = (function () {
                    function Cover() {
                    }
                    Cover.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.fx.layout.card.Cover", config, extraArgs);
                    };
                    return Cover;
                }());
                card.Cover = Cover;
            })(card = layout.card || (layout.card = {}));
        })(layout = fx.layout || (fx.layout = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var layout;
        (function (layout) {
            var card;
            (function (card) {
                var Cube = (function () {
                    function Cube() {
                    }
                    Cube.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.fx.layout.card.Cube", config, extraArgs);
                    };
                    return Cube;
                }());
                card.Cube = Cube;
            })(card = layout.card || (layout.card = {}));
        })(layout = fx.layout || (fx.layout = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var layout;
        (function (layout) {
            var card;
            (function (card) {
                var Fade = (function () {
                    function Fade() {
                    }
                    Fade.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.fx.layout.card.Fade", config, extraArgs);
                    };
                    return Fade;
                }());
                card.Fade = Fade;
            })(card = layout.card || (layout.card = {}));
        })(layout = fx.layout || (fx.layout = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var layout;
        (function (layout) {
            var card;
            (function (card) {
                var Flip = (function () {
                    function Flip() {
                    }
                    Flip.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.fx.layout.card.Flip", config, extraArgs);
                    };
                    return Flip;
                }());
                card.Flip = Flip;
            })(card = layout.card || (layout.card = {}));
        })(layout = fx.layout || (fx.layout = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var layout;
        (function (layout) {
            var Card = (function () {
                function Card() {
                }
                Card.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.layout.Card", config, extraArgs);
                };
                return Card;
            }());
            layout.Card = Card;
        })(layout = fx.layout || (fx.layout = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var layout;
        (function (layout) {
            var card;
            (function (card) {
                var Pop = (function () {
                    function Pop() {
                    }
                    Pop.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.fx.layout.card.Pop", config, extraArgs);
                    };
                    return Pop;
                }());
                card.Pop = Pop;
            })(card = layout.card || (layout.card = {}));
        })(layout = fx.layout || (fx.layout = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var layout;
        (function (layout) {
            var card;
            (function (card) {
                var Reveal = (function () {
                    function Reveal() {
                    }
                    Reveal.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.fx.layout.card.Reveal", config, extraArgs);
                    };
                    return Reveal;
                }());
                card.Reveal = Reveal;
            })(card = layout.card || (layout.card = {}));
        })(layout = fx.layout || (fx.layout = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var layout;
        (function (layout) {
            var card;
            (function (card) {
                var Scroll = (function () {
                    function Scroll() {
                    }
                    Scroll.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.fx.layout.card.Scroll", config, extraArgs);
                    };
                    return Scroll;
                }());
                card.Scroll = Scroll;
            })(card = layout.card || (layout.card = {}));
        })(layout = fx.layout || (fx.layout = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var layout;
        (function (layout) {
            var card;
            (function (card) {
                var ScrollCover = (function () {
                    function ScrollCover() {
                    }
                    ScrollCover.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.fx.layout.card.ScrollCover", config, extraArgs);
                    };
                    return ScrollCover;
                }());
                card.ScrollCover = ScrollCover;
            })(card = layout.card || (layout.card = {}));
        })(layout = fx.layout || (fx.layout = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var layout;
        (function (layout) {
            var card;
            (function (card) {
                var ScrollReveal = (function () {
                    function ScrollReveal() {
                    }
                    ScrollReveal.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.fx.layout.card.ScrollReveal", config, extraArgs);
                    };
                    return ScrollReveal;
                }());
                card.ScrollReveal = ScrollReveal;
            })(card = layout.card || (layout.card = {}));
        })(layout = fx.layout || (fx.layout = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var layout;
        (function (layout) {
            var card;
            (function (card) {
                var Slide = (function () {
                    function Slide() {
                    }
                    Slide.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.fx.layout.card.Slide", config, extraArgs);
                    };
                    return Slide;
                }());
                card.Slide = Slide;
            })(card = layout.card || (layout.card = {}));
        })(layout = fx.layout || (fx.layout = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var layout;
        (function (layout) {
            var card;
            (function (card) {
                var Style = (function () {
                    function Style() {
                    }
                    Style.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.fx.layout.card.Style", config, extraArgs);
                    };
                    return Style;
                }());
                card.Style = Style;
            })(card = layout.card || (layout.card = {}));
        })(layout = fx.layout || (fx.layout = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var Manager = (function () {
            function Manager() {
            }
            Manager.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.fx.Manager", config, extraArgs);
            };
            return Manager;
        }());
        fx.Manager = Manager;
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var PropertyHandler = (function () {
            function PropertyHandler() {
            }
            PropertyHandler.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.fx.PropertyHandler", config, extraArgs);
            };
            return PropertyHandler;
        }());
        fx.PropertyHandler = PropertyHandler;
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var Queue = (function () {
            function Queue() {
            }
            Queue.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.fx.Queue", config, extraArgs);
            };
            return Queue;
        }());
        fx.Queue = Queue;
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var runner;
        (function (runner) {
            var Css = (function () {
                function Css() {
                }
                Css.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.runner.Css", config, extraArgs);
                };
                return Css;
            }());
            runner.Css = Css;
        })(runner = fx.runner || (fx.runner = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var runner;
        (function (runner) {
            var CssAnimation = (function () {
                function CssAnimation() {
                }
                CssAnimation.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.runner.CssAnimation", config, extraArgs);
                };
                return CssAnimation;
            }());
            runner.CssAnimation = CssAnimation;
        })(runner = fx.runner || (fx.runner = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var runner;
        (function (runner) {
            var CssTransition = (function () {
                function CssTransition() {
                }
                CssTransition.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.runner.CssTransition", config, extraArgs);
                };
                return CssTransition;
            }());
            runner.CssTransition = CssTransition;
        })(runner = fx.runner || (fx.runner = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Animator = (function () {
        function Animator() {
        }
        Animator.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Animator", config, extraArgs);
        };
        return Animator;
    }());
    TypExt.Animator = Animator;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var Runner = (function () {
            function Runner() {
            }
            Runner.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.fx.Runner", config, extraArgs);
            };
            return Runner;
        }());
        fx.Runner = Runner;
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var State = (function () {
            function State() {
            }
            State.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.fx.State", config, extraArgs);
            };
            return State;
        }());
        fx.State = State;
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var target;
        (function (target) {
            var Component = (function () {
                function Component() {
                }
                Component.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.target.Component", config, extraArgs);
                };
                return Component;
            }());
            target.Component = Component;
        })(target = fx.target || (fx.target = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var target;
        (function (target) {
            var CompositeElement = (function () {
                function CompositeElement() {
                }
                CompositeElement.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.target.CompositeElement", config, extraArgs);
                };
                return CompositeElement;
            }());
            target.CompositeElement = CompositeElement;
        })(target = fx.target || (fx.target = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var target;
        (function (target) {
            var CompositeElementCSS = (function () {
                function CompositeElementCSS() {
                }
                CompositeElementCSS.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.target.CompositeElementCSS", config, extraArgs);
                };
                return CompositeElementCSS;
            }());
            target.CompositeElementCSS = CompositeElementCSS;
        })(target = fx.target || (fx.target = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var target;
        (function (target) {
            var CompositeSprite = (function () {
                function CompositeSprite() {
                }
                CompositeSprite.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.target.CompositeSprite", config, extraArgs);
                };
                return CompositeSprite;
            }());
            target.CompositeSprite = CompositeSprite;
        })(target = fx.target || (fx.target = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var target;
        (function (target) {
            var Element = (function () {
                function Element() {
                }
                Element.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.target.Element", config, extraArgs);
                };
                return Element;
            }());
            target.Element = Element;
        })(target = fx.target || (fx.target = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var target;
        (function (target) {
            var ElementCSS = (function () {
                function ElementCSS() {
                }
                ElementCSS.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.target.ElementCSS", config, extraArgs);
                };
                return ElementCSS;
            }());
            target.ElementCSS = ElementCSS;
        })(target = fx.target || (fx.target = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var target;
        (function (target) {
            var Sprite = (function () {
                function Sprite() {
                }
                Sprite.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.target.Sprite", config, extraArgs);
                };
                return Sprite;
            }());
            target.Sprite = Sprite;
        })(target = fx.target || (fx.target = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var fx;
    (function (fx) {
        var target;
        (function (target) {
            var Target = (function () {
                function Target() {
                }
                Target.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.fx.target.Target", config, extraArgs);
                };
                return Target;
            }());
            target.Target = Target;
        })(target = fx.target || (fx.target = {}));
    })(fx = TypExt.fx || (TypExt.fx = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var GlobalEvents = (function () {
        function GlobalEvents() {
        }
        GlobalEvents.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.GlobalEvents", config, extraArgs);
        };
        return GlobalEvents;
    }());
    TypExt.GlobalEvents = GlobalEvents;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var CellContext = (function () {
            function CellContext() {
            }
            CellContext.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.grid.CellContext", config, extraArgs);
            };
            return CellContext;
        }());
        grid.CellContext = CellContext;
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var CellEditor = (function () {
            function CellEditor() {
            }
            CellEditor.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.grid.CellEditor", config, extraArgs);
            };
            return CellEditor;
        }());
        grid.CellEditor = CellEditor;
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var column;
        (function (column) {
            var Action = (function () {
                function Action() {
                }
                Action.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.column.Action", config, extraArgs);
                };
                return Action;
            }());
            column.Action = Action;
        })(column = grid.column || (grid.column = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var ActionColumn = (function () {
            function ActionColumn() {
            }
            ActionColumn.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.grid.ActionColumn", config, extraArgs);
            };
            return ActionColumn;
        }());
        grid.ActionColumn = ActionColumn;
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var column;
        (function (column) {
            var Boolean = (function () {
                function Boolean() {
                }
                Boolean.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.column.Boolean", config, extraArgs);
                };
                return Boolean;
            }());
            column.Boolean = Boolean;
        })(column = grid.column || (grid.column = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var BooleanColumn = (function () {
            function BooleanColumn() {
            }
            BooleanColumn.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.grid.BooleanColumn", config, extraArgs);
            };
            return BooleanColumn;
        }());
        grid.BooleanColumn = BooleanColumn;
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var column;
        (function (column) {
            var Check = (function () {
                function Check() {
                }
                Check.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.column.Check", config, extraArgs);
                };
                return Check;
            }());
            column.Check = Check;
        })(column = grid.column || (grid.column = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ux;
    (function (ux) {
        var CheckColumn = (function () {
            function CheckColumn() {
            }
            CheckColumn.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.ux.CheckColumn", config, extraArgs);
            };
            return CheckColumn;
        }());
        ux.CheckColumn = CheckColumn;
    })(ux = TypExt.ux || (TypExt.ux = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var column;
        (function (column) {
            var CheckColumn = (function () {
                function CheckColumn() {
                }
                CheckColumn.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.column.CheckColumn", config, extraArgs);
                };
                return CheckColumn;
            }());
            column.CheckColumn = CheckColumn;
        })(column = grid.column || (grid.column = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var column;
        (function (column) {
            var Column = (function () {
                function Column() {
                }
                Column.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.column.Column", config, extraArgs);
                };
                return Column;
            }());
            column.Column = Column;
        })(column = grid.column || (grid.column = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var Column = (function () {
            function Column() {
            }
            Column.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.grid.Column", config, extraArgs);
            };
            return Column;
        }());
        grid.Column = Column;
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var column;
        (function (column) {
            var Date = (function () {
                function Date() {
                }
                Date.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.column.Date", config, extraArgs);
                };
                return Date;
            }());
            column.Date = Date;
        })(column = grid.column || (grid.column = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var DateColumn = (function () {
            function DateColumn() {
            }
            DateColumn.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.grid.DateColumn", config, extraArgs);
            };
            return DateColumn;
        }());
        grid.DateColumn = DateColumn;
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var column;
        (function (column) {
            var Number = (function () {
                function Number() {
                }
                Number.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.column.Number", config, extraArgs);
                };
                return Number;
            }());
            column.Number = Number;
        })(column = grid.column || (grid.column = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var NumberColumn = (function () {
            function NumberColumn() {
            }
            NumberColumn.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.grid.NumberColumn", config, extraArgs);
            };
            return NumberColumn;
        }());
        grid.NumberColumn = NumberColumn;
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var column;
        (function (column) {
            var RowNumberer = (function () {
                function RowNumberer() {
                }
                RowNumberer.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.column.RowNumberer", config, extraArgs);
                };
                return RowNumberer;
            }());
            column.RowNumberer = RowNumberer;
        })(column = grid.column || (grid.column = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var RowNumberer = (function () {
            function RowNumberer() {
            }
            RowNumberer.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.grid.RowNumberer", config, extraArgs);
            };
            return RowNumberer;
        }());
        grid.RowNumberer = RowNumberer;
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var column;
        (function (column) {
            var Template = (function () {
                function Template() {
                }
                Template.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.column.Template", config, extraArgs);
                };
                return Template;
            }());
            column.Template = Template;
        })(column = grid.column || (grid.column = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var TemplateColumn = (function () {
            function TemplateColumn() {
            }
            TemplateColumn.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.grid.TemplateColumn", config, extraArgs);
            };
            return TemplateColumn;
        }());
        grid.TemplateColumn = TemplateColumn;
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var column;
        (function (column) {
            var Widget = (function () {
                function Widget() {
                }
                Widget.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.column.Widget", config, extraArgs);
                };
                return Widget;
            }());
            column.Widget = Widget;
        })(column = grid.column || (grid.column = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var ColumnComponentLayout = (function () {
            function ColumnComponentLayout() {
            }
            ColumnComponentLayout.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.grid.ColumnComponentLayout", config, extraArgs);
            };
            return ColumnComponentLayout;
        }());
        grid.ColumnComponentLayout = ColumnComponentLayout;
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var ColumnLayout = (function () {
            function ColumnLayout() {
            }
            ColumnLayout.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.grid.ColumnLayout", config, extraArgs);
            };
            return ColumnLayout;
        }());
        grid.ColumnLayout = ColumnLayout;
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var ColumnManager = (function () {
            function ColumnManager() {
            }
            ColumnManager.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.grid.ColumnManager", config, extraArgs);
            };
            return ColumnManager;
        }());
        grid.ColumnManager = ColumnManager;
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var ColumnModel = (function () {
            function ColumnModel() {
            }
            ColumnModel.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.grid.ColumnModel", config, extraArgs);
            };
            return ColumnModel;
        }());
        grid.ColumnModel = ColumnModel;
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var feature;
        (function (feature) {
            var AbstractSummary = (function () {
                function AbstractSummary() {
                }
                AbstractSummary.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.feature.AbstractSummary", config, extraArgs);
                };
                return AbstractSummary;
            }());
            feature.AbstractSummary = AbstractSummary;
        })(feature = grid.feature || (grid.feature = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var feature;
        (function (feature) {
            var Feature = (function () {
                function Feature() {
                }
                Feature.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.feature.Feature", config, extraArgs);
                };
                return Feature;
            }());
            feature.Feature = Feature;
        })(feature = grid.feature || (grid.feature = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var feature;
        (function (feature) {
            var Grouping = (function () {
                function Grouping() {
                }
                Grouping.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.feature.Grouping", config, extraArgs);
                };
                return Grouping;
            }());
            feature.Grouping = Grouping;
        })(feature = grid.feature || (grid.feature = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var feature;
        (function (feature) {
            var GroupingSummary = (function () {
                function GroupingSummary() {
                }
                GroupingSummary.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.feature.GroupingSummary", config, extraArgs);
                };
                return GroupingSummary;
            }());
            feature.GroupingSummary = GroupingSummary;
        })(feature = grid.feature || (grid.feature = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var feature;
        (function (feature) {
            var GroupStore = (function () {
                function GroupStore() {
                }
                GroupStore.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.feature.GroupStore", config, extraArgs);
                };
                return GroupStore;
            }());
            feature.GroupStore = GroupStore;
        })(feature = grid.feature || (grid.feature = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var feature;
        (function (feature) {
            var RowBody = (function () {
                function RowBody() {
                }
                RowBody.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.feature.RowBody", config, extraArgs);
                };
                return RowBody;
            }());
            feature.RowBody = RowBody;
        })(feature = grid.feature || (grid.feature = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var feature;
        (function (feature) {
            var Summary = (function () {
                function Summary() {
                }
                Summary.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.feature.Summary", config, extraArgs);
                };
                return Summary;
            }());
            feature.Summary = Summary;
        })(feature = grid.feature || (grid.feature = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var filters;
        (function (filters) {
            var filter;
            (function (filter) {
                var Base = (function () {
                    function Base() {
                    }
                    Base.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.grid.filters.filter.Base", config, extraArgs);
                    };
                    return Base;
                }());
                filter.Base = Base;
            })(filter = filters.filter || (filters.filter = {}));
        })(filters = grid.filters || (grid.filters = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var filters;
        (function (filters) {
            var filter;
            (function (filter) {
                var Boolean = (function () {
                    function Boolean() {
                    }
                    Boolean.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.grid.filters.filter.Boolean", config, extraArgs);
                    };
                    return Boolean;
                }());
                filter.Boolean = Boolean;
            })(filter = filters.filter || (filters.filter = {}));
        })(filters = grid.filters || (grid.filters = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var filters;
        (function (filters) {
            var filter;
            (function (filter) {
                var Date = (function () {
                    function Date() {
                    }
                    Date.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.grid.filters.filter.Date", config, extraArgs);
                    };
                    return Date;
                }());
                filter.Date = Date;
            })(filter = filters.filter || (filters.filter = {}));
        })(filters = grid.filters || (grid.filters = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var filters;
        (function (filters) {
            var filter;
            (function (filter) {
                var List = (function () {
                    function List() {
                    }
                    List.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.grid.filters.filter.List", config, extraArgs);
                    };
                    return List;
                }());
                filter.List = List;
            })(filter = filters.filter || (filters.filter = {}));
        })(filters = grid.filters || (grid.filters = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var filters;
        (function (filters) {
            var filter;
            (function (filter) {
                var Number = (function () {
                    function Number() {
                    }
                    Number.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.grid.filters.filter.Number", config, extraArgs);
                    };
                    return Number;
                }());
                filter.Number = Number;
            })(filter = filters.filter || (filters.filter = {}));
        })(filters = grid.filters || (grid.filters = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var filters;
        (function (filters) {
            var filter;
            (function (filter) {
                var SingleFilter = (function () {
                    function SingleFilter() {
                    }
                    SingleFilter.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.grid.filters.filter.SingleFilter", config, extraArgs);
                    };
                    return SingleFilter;
                }());
                filter.SingleFilter = SingleFilter;
            })(filter = filters.filter || (filters.filter = {}));
        })(filters = grid.filters || (grid.filters = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var filters;
        (function (filters) {
            var filter;
            (function (filter) {
                var String = (function () {
                    function String() {
                    }
                    String.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.grid.filters.filter.String", config, extraArgs);
                    };
                    return String;
                }());
                filter.String = String;
            })(filter = filters.filter || (filters.filter = {}));
        })(filters = grid.filters || (grid.filters = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var filters;
        (function (filters) {
            var filter;
            (function (filter) {
                var TriFilter = (function () {
                    function TriFilter() {
                    }
                    TriFilter.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.grid.filters.filter.TriFilter", config, extraArgs);
                    };
                    return TriFilter;
                }());
                filter.TriFilter = TriFilter;
            })(filter = filters.filter || (filters.filter = {}));
        })(filters = grid.filters || (grid.filters = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var filters;
        (function (filters) {
            var Filters = (function () {
                function Filters() {
                }
                Filters.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.filters.Filters", config, extraArgs);
                };
                return Filters;
            }());
            filters.Filters = Filters;
        })(filters = grid.filters || (grid.filters = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var header;
        (function (header) {
            var Container = (function () {
                function Container() {
                }
                Container.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.header.Container", config, extraArgs);
                };
                return Container;
            }());
            header.Container = Container;
        })(header = grid.header || (grid.header = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var header;
        (function (header) {
            var DragZone = (function () {
                function DragZone() {
                }
                DragZone.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.header.DragZone", config, extraArgs);
                };
                return DragZone;
            }());
            header.DragZone = DragZone;
        })(header = grid.header || (grid.header = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var header;
        (function (header) {
            var DropZone = (function () {
                function DropZone() {
                }
                DropZone.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.header.DropZone", config, extraArgs);
                };
                return DropZone;
            }());
            header.DropZone = DropZone;
        })(header = grid.header || (grid.header = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var locking;
        (function (locking) {
            var HeaderContainer = (function () {
                function HeaderContainer() {
                }
                HeaderContainer.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.locking.HeaderContainer", config, extraArgs);
                };
                return HeaderContainer;
            }());
            locking.HeaderContainer = HeaderContainer;
        })(locking = grid.locking || (grid.locking = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var locking;
        (function (locking) {
            var Lockable = (function () {
                function Lockable() {
                }
                Lockable.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.locking.Lockable", config, extraArgs);
                };
                return Lockable;
            }());
            locking.Lockable = Lockable;
        })(locking = grid.locking || (grid.locking = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var Lockable = (function () {
            function Lockable() {
            }
            Lockable.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.grid.Lockable", config, extraArgs);
            };
            return Lockable;
        }());
        grid.Lockable = Lockable;
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var locking;
        (function (locking) {
            var RowSynchronizer = (function () {
                function RowSynchronizer() {
                }
                RowSynchronizer.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.locking.RowSynchronizer", config, extraArgs);
                };
                return RowSynchronizer;
            }());
            locking.RowSynchronizer = RowSynchronizer;
        })(locking = grid.locking || (grid.locking = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var locking;
        (function (locking) {
            var View = (function () {
                function View() {
                }
                View.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.locking.View", config, extraArgs);
                };
                return View;
            }());
            locking.View = View;
        })(locking = grid.locking || (grid.locking = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var LockingView = (function () {
            function LockingView() {
            }
            LockingView.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.grid.LockingView", config, extraArgs);
            };
            return LockingView;
        }());
        grid.LockingView = LockingView;
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var NavigationModel = (function () {
            function NavigationModel() {
            }
            NavigationModel.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.grid.NavigationModel", config, extraArgs);
            };
            return NavigationModel;
        }());
        grid.NavigationModel = NavigationModel;
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var Panel = (function () {
            function Panel() {
            }
            Panel.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.grid.Panel", config, extraArgs);
            };
            return Panel;
        }());
        grid.Panel = Panel;
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var list;
    (function (list) {
        var ListView = (function () {
            function ListView() {
            }
            ListView.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.list.ListView", config, extraArgs);
            };
            return ListView;
        }());
        list.ListView = ListView;
    })(list = TypExt.list || (TypExt.list = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ListView = (function () {
        function ListView() {
        }
        ListView.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.ListView", config, extraArgs);
        };
        return ListView;
    }());
    TypExt.ListView = ListView;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var GridPanel = (function () {
            function GridPanel() {
            }
            GridPanel.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.grid.GridPanel", config, extraArgs);
            };
            return GridPanel;
        }());
        grid.GridPanel = GridPanel;
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var plugin;
        (function (plugin) {
            var BufferedRenderer = (function () {
                function BufferedRenderer() {
                }
                BufferedRenderer.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.plugin.BufferedRenderer", config, extraArgs);
                };
                return BufferedRenderer;
            }());
            plugin.BufferedRenderer = BufferedRenderer;
        })(plugin = grid.plugin || (grid.plugin = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var plugin;
        (function (plugin) {
            var CellEditing = (function () {
                function CellEditing() {
                }
                CellEditing.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.plugin.CellEditing", config, extraArgs);
                };
                return CellEditing;
            }());
            plugin.CellEditing = CellEditing;
        })(plugin = grid.plugin || (grid.plugin = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var plugin;
        (function (plugin) {
            var Clipboard = (function () {
                function Clipboard() {
                }
                Clipboard.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.plugin.Clipboard", config, extraArgs);
                };
                return Clipboard;
            }());
            plugin.Clipboard = Clipboard;
        })(plugin = grid.plugin || (grid.plugin = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var plugin;
        (function (plugin) {
            var DragDrop = (function () {
                function DragDrop() {
                }
                DragDrop.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.plugin.DragDrop", config, extraArgs);
                };
                return DragDrop;
            }());
            plugin.DragDrop = DragDrop;
        })(plugin = grid.plugin || (grid.plugin = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var plugin;
        (function (plugin) {
            var Editing = (function () {
                function Editing() {
                }
                Editing.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.plugin.Editing", config, extraArgs);
                };
                return Editing;
            }());
            plugin.Editing = Editing;
        })(plugin = grid.plugin || (grid.plugin = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var plugin;
        (function (plugin) {
            var HeaderReorderer = (function () {
                function HeaderReorderer() {
                }
                HeaderReorderer.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.plugin.HeaderReorderer", config, extraArgs);
                };
                return HeaderReorderer;
            }());
            plugin.HeaderReorderer = HeaderReorderer;
        })(plugin = grid.plugin || (grid.plugin = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var plugin;
        (function (plugin) {
            var HeaderResizer = (function () {
                function HeaderResizer() {
                }
                HeaderResizer.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.plugin.HeaderResizer", config, extraArgs);
                };
                return HeaderResizer;
            }());
            plugin.HeaderResizer = HeaderResizer;
        })(plugin = grid.plugin || (grid.plugin = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var plugin;
        (function (plugin) {
            var RowEditing = (function () {
                function RowEditing() {
                }
                RowEditing.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.plugin.RowEditing", config, extraArgs);
                };
                return RowEditing;
            }());
            plugin.RowEditing = RowEditing;
        })(plugin = grid.plugin || (grid.plugin = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var plugin;
        (function (plugin) {
            var RowExpander = (function () {
                function RowExpander() {
                }
                RowExpander.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.plugin.RowExpander", config, extraArgs);
                };
                return RowExpander;
            }());
            plugin.RowExpander = RowExpander;
        })(plugin = grid.plugin || (grid.plugin = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var property;
        (function (property) {
            var Grid = (function () {
                function Grid() {
                }
                Grid.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.property.Grid", config, extraArgs);
                };
                return Grid;
            }());
            property.Grid = Grid;
        })(property = grid.property || (grid.property = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var PropertyGrid = (function () {
            function PropertyGrid() {
            }
            PropertyGrid.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.grid.PropertyGrid", config, extraArgs);
            };
            return PropertyGrid;
        }());
        grid.PropertyGrid = PropertyGrid;
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var property;
        (function (property) {
            var HeaderContainer = (function () {
                function HeaderContainer() {
                }
                HeaderContainer.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.property.HeaderContainer", config, extraArgs);
                };
                return HeaderContainer;
            }());
            property.HeaderContainer = HeaderContainer;
        })(property = grid.property || (grid.property = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var PropertyColumnModel = (function () {
            function PropertyColumnModel() {
            }
            PropertyColumnModel.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.grid.PropertyColumnModel", config, extraArgs);
            };
            return PropertyColumnModel;
        }());
        grid.PropertyColumnModel = PropertyColumnModel;
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var property;
        (function (property) {
            var Property = (function () {
                function Property() {
                }
                Property.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.property.Property", config, extraArgs);
                };
                return Property;
            }());
            property.Property = Property;
        })(property = grid.property || (grid.property = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var PropGridProperty = (function () {
        function PropGridProperty() {
        }
        PropGridProperty.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.PropGridProperty", config, extraArgs);
        };
        return PropGridProperty;
    }());
    TypExt.PropGridProperty = PropGridProperty;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var property;
        (function (property) {
            var Reader = (function () {
                function Reader() {
                }
                Reader.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.property.Reader", config, extraArgs);
                };
                return Reader;
            }());
            property.Reader = Reader;
        })(property = grid.property || (grid.property = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var property;
        (function (property) {
            var Store = (function () {
                function Store() {
                }
                Store.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.property.Store", config, extraArgs);
                };
                return Store;
            }());
            property.Store = Store;
        })(property = grid.property || (grid.property = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var PropertyStore = (function () {
            function PropertyStore() {
            }
            PropertyStore.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.grid.PropertyStore", config, extraArgs);
            };
            return PropertyStore;
        }());
        grid.PropertyStore = PropertyStore;
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var RowEditor = (function () {
            function RowEditor() {
            }
            RowEditor.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.grid.RowEditor", config, extraArgs);
            };
            return RowEditor;
        }());
        grid.RowEditor = RowEditor;
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var RowEditorButtons = (function () {
            function RowEditorButtons() {
            }
            RowEditorButtons.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.grid.RowEditorButtons", config, extraArgs);
            };
            return RowEditorButtons;
        }());
        grid.RowEditorButtons = RowEditorButtons;
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var selection;
        (function (selection) {
            var Cells = (function () {
                function Cells() {
                }
                Cells.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.selection.Cells", config, extraArgs);
                };
                return Cells;
            }());
            selection.Cells = Cells;
        })(selection = grid.selection || (grid.selection = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var selection;
        (function (selection) {
            var Columns = (function () {
                function Columns() {
                }
                Columns.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.selection.Columns", config, extraArgs);
                };
                return Columns;
            }());
            selection.Columns = Columns;
        })(selection = grid.selection || (grid.selection = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var selection;
        (function (selection) {
            var Rows = (function () {
                function Rows() {
                }
                Rows.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.selection.Rows", config, extraArgs);
                };
                return Rows;
            }());
            selection.Rows = Rows;
        })(selection = grid.selection || (grid.selection = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var selection;
        (function (selection) {
            var Selection = (function () {
                function Selection() {
                }
                Selection.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.selection.Selection", config, extraArgs);
                };
                return Selection;
            }());
            selection.Selection = Selection;
        })(selection = grid.selection || (grid.selection = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var selection;
        (function (selection) {
            var SpreadsheetModel = (function () {
                function SpreadsheetModel() {
                }
                SpreadsheetModel.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.grid.selection.SpreadsheetModel", config, extraArgs);
                };
                return SpreadsheetModel;
            }());
            selection.SpreadsheetModel = SpreadsheetModel;
        })(selection = grid.selection || (grid.selection = {}));
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var ViewDropZone = (function () {
            function ViewDropZone() {
            }
            ViewDropZone.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.grid.ViewDropZone", config, extraArgs);
            };
            return ViewDropZone;
        }());
        grid.ViewDropZone = ViewDropZone;
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Img = (function () {
        function Img() {
        }
        Img.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Img", config, extraArgs);
        };
        return Img;
    }());
    TypExt.Img = Img;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Inventory = (function () {
        function Inventory() {
        }
        Inventory.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Inventory", config, extraArgs);
        };
        return Inventory;
    }());
    TypExt.Inventory = Inventory;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var JSON = (function () {
        function JSON() {
        }
        JSON.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.JSON", config, extraArgs);
        };
        return JSON;
    }());
    TypExt.JSON = JSON;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var component;
        (function (component) {
            var Auto = (function () {
                function Auto() {
                }
                Auto.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.component.Auto", config, extraArgs);
                };
                return Auto;
            }());
            component.Auto = Auto;
        })(component = layout.component || (layout.component = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var component;
        (function (component) {
            var Body = (function () {
                function Body() {
                }
                Body.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.component.Body", config, extraArgs);
                };
                return Body;
            }());
            component.Body = Body;
        })(component = layout.component || (layout.component = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var component;
        (function (component) {
            var BoundList = (function () {
                function BoundList() {
                }
                BoundList.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.component.BoundList", config, extraArgs);
                };
                return BoundList;
            }());
            component.BoundList = BoundList;
        })(component = layout.component || (layout.component = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var component;
        (function (component) {
            var Component = (function () {
                function Component() {
                }
                Component.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.component.Component", config, extraArgs);
                };
                return Component;
            }());
            component.Component = Component;
        })(component = layout.component || (layout.component = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var component;
        (function (component) {
            var Dock = (function () {
                function Dock() {
                }
                Dock.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.component.Dock", config, extraArgs);
                };
                return Dock;
            }());
            component.Dock = Dock;
        })(component = layout.component || (layout.component = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var component;
        (function (component) {
            var AbstractDock = (function () {
                function AbstractDock() {
                }
                AbstractDock.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.component.AbstractDock", config, extraArgs);
                };
                return AbstractDock;
            }());
            component.AbstractDock = AbstractDock;
        })(component = layout.component || (layout.component = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var component;
        (function (component) {
            var field;
            (function (field) {
                var FieldContainer = (function () {
                    function FieldContainer() {
                    }
                    FieldContainer.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.layout.component.field.FieldContainer", config, extraArgs);
                    };
                    return FieldContainer;
                }());
                field.FieldContainer = FieldContainer;
            })(field = component.field || (component.field = {}));
        })(component = layout.component || (layout.component = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var component;
        (function (component) {
            var field;
            (function (field) {
                var HtmlEditor = (function () {
                    function HtmlEditor() {
                    }
                    HtmlEditor.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.layout.component.field.HtmlEditor", config, extraArgs);
                    };
                    return HtmlEditor;
                }());
                field.HtmlEditor = HtmlEditor;
            })(field = component.field || (component.field = {}));
        })(component = layout.component || (layout.component = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var component;
        (function (component) {
            var FieldSet = (function () {
                function FieldSet() {
                }
                FieldSet.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.component.FieldSet", config, extraArgs);
                };
                return FieldSet;
            }());
            component.FieldSet = FieldSet;
        })(component = layout.component || (layout.component = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var component;
        (function (component) {
            var ProgressBar = (function () {
                function ProgressBar() {
                }
                ProgressBar.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.component.ProgressBar", config, extraArgs);
                };
                return ProgressBar;
            }());
            component.ProgressBar = ProgressBar;
        })(component = layout.component || (layout.component = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var container;
        (function (container) {
            var Absolute = (function () {
                function Absolute() {
                }
                Absolute.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.container.Absolute", config, extraArgs);
                };
                return Absolute;
            }());
            container.Absolute = Absolute;
        })(container = layout.container || (layout.container = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var AbsoluteLayout = (function () {
            function AbsoluteLayout() {
            }
            AbsoluteLayout.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.layout.AbsoluteLayout", config, extraArgs);
            };
            return AbsoluteLayout;
        }());
        layout.AbsoluteLayout = AbsoluteLayout;
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var container;
        (function (container) {
            var Accordion = (function () {
                function Accordion() {
                }
                Accordion.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.container.Accordion", config, extraArgs);
                };
                return Accordion;
            }());
            container.Accordion = Accordion;
        })(container = layout.container || (layout.container = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var AccordionLayout = (function () {
            function AccordionLayout() {
            }
            AccordionLayout.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.layout.AccordionLayout", config, extraArgs);
            };
            return AccordionLayout;
        }());
        layout.AccordionLayout = AccordionLayout;
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var container;
        (function (container) {
            var Anchor = (function () {
                function Anchor() {
                }
                Anchor.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.container.Anchor", config, extraArgs);
                };
                return Anchor;
            }());
            container.Anchor = Anchor;
        })(container = layout.container || (layout.container = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var AnchorLayout = (function () {
            function AnchorLayout() {
            }
            AnchorLayout.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.layout.AnchorLayout", config, extraArgs);
            };
            return AnchorLayout;
        }());
        layout.AnchorLayout = AnchorLayout;
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var container;
        (function (container) {
            var Auto = (function () {
                function Auto() {
                }
                Auto.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.container.Auto", config, extraArgs);
                };
                return Auto;
            }());
            container.Auto = Auto;
        })(container = layout.container || (layout.container = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var container;
        (function (container) {
            var Border = (function () {
                function Border() {
                }
                Border.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.container.Border", config, extraArgs);
                };
                return Border;
            }());
            container.Border = Border;
        })(container = layout.container || (layout.container = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var BorderLayout = (function () {
            function BorderLayout() {
            }
            BorderLayout.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.layout.BorderLayout", config, extraArgs);
            };
            return BorderLayout;
        }());
        layout.BorderLayout = BorderLayout;
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var container;
        (function (container) {
            var Box = (function () {
                function Box() {
                }
                Box.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.container.Box", config, extraArgs);
                };
                return Box;
            }());
            container.Box = Box;
        })(container = layout.container || (layout.container = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var BoxLayout = (function () {
            function BoxLayout() {
            }
            BoxLayout.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.layout.BoxLayout", config, extraArgs);
            };
            return BoxLayout;
        }());
        layout.BoxLayout = BoxLayout;
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var container;
        (function (container) {
            var boxoverflow;
            (function (boxoverflow) {
                var Menu = (function () {
                    function Menu() {
                    }
                    Menu.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.layout.container.boxoverflow.Menu", config, extraArgs);
                    };
                    return Menu;
                }());
                boxoverflow.Menu = Menu;
            })(boxoverflow = container.boxoverflow || (container.boxoverflow = {}));
        })(container = layout.container || (layout.container = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var boxoverflow;
        (function (boxoverflow) {
            var Menu = (function () {
                function Menu() {
                }
                Menu.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.boxoverflow.Menu", config, extraArgs);
                };
                return Menu;
            }());
            boxoverflow.Menu = Menu;
        })(boxoverflow = layout.boxoverflow || (layout.boxoverflow = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var container;
        (function (container) {
            var boxoverflow;
            (function (boxoverflow) {
                var None = (function () {
                    function None() {
                    }
                    None.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.layout.container.boxoverflow.None", config, extraArgs);
                    };
                    return None;
                }());
                boxoverflow.None = None;
            })(boxoverflow = container.boxoverflow || (container.boxoverflow = {}));
        })(container = layout.container || (layout.container = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var boxoverflow;
        (function (boxoverflow) {
            var None = (function () {
                function None() {
                }
                None.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.boxoverflow.None", config, extraArgs);
                };
                return None;
            }());
            boxoverflow.None = None;
        })(boxoverflow = layout.boxoverflow || (layout.boxoverflow = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var container;
        (function (container) {
            var boxoverflow;
            (function (boxoverflow) {
                var Scroller = (function () {
                    function Scroller() {
                    }
                    Scroller.create = function (config, extraArgs) {
                        return TypExt.Object.create("Ext.layout.container.boxoverflow.Scroller", config, extraArgs);
                    };
                    return Scroller;
                }());
                boxoverflow.Scroller = Scroller;
            })(boxoverflow = container.boxoverflow || (container.boxoverflow = {}));
        })(container = layout.container || (layout.container = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var boxoverflow;
        (function (boxoverflow) {
            var Scroller = (function () {
                function Scroller() {
                }
                Scroller.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.boxoverflow.Scroller", config, extraArgs);
                };
                return Scroller;
            }());
            boxoverflow.Scroller = Scroller;
        })(boxoverflow = layout.boxoverflow || (layout.boxoverflow = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var container;
        (function (container) {
            var Card = (function () {
                function Card() {
                }
                Card.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.container.Card", config, extraArgs);
                };
                return Card;
            }());
            container.Card = Card;
        })(container = layout.container || (layout.container = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var CardLayout = (function () {
            function CardLayout() {
            }
            CardLayout.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.layout.CardLayout", config, extraArgs);
            };
            return CardLayout;
        }());
        layout.CardLayout = CardLayout;
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var container;
        (function (container) {
            var Center = (function () {
                function Center() {
                }
                Center.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.container.Center", config, extraArgs);
                };
                return Center;
            }());
            container.Center = Center;
        })(container = layout.container || (layout.container = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ux;
    (function (ux) {
        var layout;
        (function (layout) {
            var Center = (function () {
                function Center() {
                }
                Center.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.ux.layout.Center", config, extraArgs);
                };
                return Center;
            }());
            layout.Center = Center;
        })(layout = ux.layout || (ux.layout = {}));
    })(ux = TypExt.ux || (TypExt.ux = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var container;
        (function (container) {
            var CheckboxGroup = (function () {
                function CheckboxGroup() {
                }
                CheckboxGroup.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.container.CheckboxGroup", config, extraArgs);
                };
                return CheckboxGroup;
            }());
            container.CheckboxGroup = CheckboxGroup;
        })(container = layout.container || (layout.container = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var container;
        (function (container) {
            var Column = (function () {
                function Column() {
                }
                Column.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.container.Column", config, extraArgs);
                };
                return Column;
            }());
            container.Column = Column;
        })(container = layout.container || (layout.container = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var ColumnLayout = (function () {
            function ColumnLayout() {
            }
            ColumnLayout.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.layout.ColumnLayout", config, extraArgs);
            };
            return ColumnLayout;
        }());
        layout.ColumnLayout = ColumnLayout;
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var container;
        (function (container) {
            var ColumnSplitter = (function () {
                function ColumnSplitter() {
                }
                ColumnSplitter.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.container.ColumnSplitter", config, extraArgs);
                };
                return ColumnSplitter;
            }());
            container.ColumnSplitter = ColumnSplitter;
        })(container = layout.container || (layout.container = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var container;
        (function (container) {
            var ColumnSplitterTracker = (function () {
                function ColumnSplitterTracker() {
                }
                ColumnSplitterTracker.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.container.ColumnSplitterTracker", config, extraArgs);
                };
                return ColumnSplitterTracker;
            }());
            container.ColumnSplitterTracker = ColumnSplitterTracker;
        })(container = layout.container || (layout.container = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var container;
        (function (container) {
            var Container = (function () {
                function Container() {
                }
                Container.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.container.Container", config, extraArgs);
                };
                return Container;
            }());
            container.Container = Container;
        })(container = layout.container || (layout.container = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var ContainerLayout = (function () {
            function ContainerLayout() {
            }
            ContainerLayout.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.layout.ContainerLayout", config, extraArgs);
            };
            return ContainerLayout;
        }());
        layout.ContainerLayout = ContainerLayout;
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var container;
        (function (container) {
            var Dashboard = (function () {
                function Dashboard() {
                }
                Dashboard.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.container.Dashboard", config, extraArgs);
                };
                return Dashboard;
            }());
            container.Dashboard = Dashboard;
        })(container = layout.container || (layout.container = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var container;
        (function (container) {
            var Editor = (function () {
                function Editor() {
                }
                Editor.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.container.Editor", config, extraArgs);
                };
                return Editor;
            }());
            container.Editor = Editor;
        })(container = layout.container || (layout.container = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var container;
        (function (container) {
            var Fit = (function () {
                function Fit() {
                }
                Fit.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.container.Fit", config, extraArgs);
                };
                return Fit;
            }());
            container.Fit = Fit;
        })(container = layout.container || (layout.container = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var FitLayout = (function () {
            function FitLayout() {
            }
            FitLayout.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.layout.FitLayout", config, extraArgs);
            };
            return FitLayout;
        }());
        layout.FitLayout = FitLayout;
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var container;
        (function (container) {
            var Form = (function () {
                function Form() {
                }
                Form.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.container.Form", config, extraArgs);
                };
                return Form;
            }());
            container.Form = Form;
        })(container = layout.container || (layout.container = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var FormLayout = (function () {
            function FormLayout() {
            }
            FormLayout.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.layout.FormLayout", config, extraArgs);
            };
            return FormLayout;
        }());
        layout.FormLayout = FormLayout;
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var container;
        (function (container) {
            var HBox = (function () {
                function HBox() {
                }
                HBox.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.container.HBox", config, extraArgs);
                };
                return HBox;
            }());
            container.HBox = HBox;
        })(container = layout.container || (layout.container = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var HBoxLayout = (function () {
            function HBoxLayout() {
            }
            HBoxLayout.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.layout.HBoxLayout", config, extraArgs);
            };
            return HBoxLayout;
        }());
        layout.HBoxLayout = HBoxLayout;
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var container;
        (function (container) {
            var SegmentedButton = (function () {
                function SegmentedButton() {
                }
                SegmentedButton.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.container.SegmentedButton", config, extraArgs);
                };
                return SegmentedButton;
            }());
            container.SegmentedButton = SegmentedButton;
        })(container = layout.container || (layout.container = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var container;
        (function (container) {
            var Table = (function () {
                function Table() {
                }
                Table.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.container.Table", config, extraArgs);
                };
                return Table;
            }());
            container.Table = Table;
        })(container = layout.container || (layout.container = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var TableLayout = (function () {
            function TableLayout() {
            }
            TableLayout.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.layout.TableLayout", config, extraArgs);
            };
            return TableLayout;
        }());
        layout.TableLayout = TableLayout;
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var container;
        (function (container) {
            var VBox = (function () {
                function VBox() {
                }
                VBox.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.layout.container.VBox", config, extraArgs);
                };
                return VBox;
            }());
            container.VBox = VBox;
        })(container = layout.container || (layout.container = {}));
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var VBoxLayout = (function () {
            function VBoxLayout() {
            }
            VBoxLayout.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.layout.VBoxLayout", config, extraArgs);
            };
            return VBoxLayout;
        }());
        layout.VBoxLayout = VBoxLayout;
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var Context = (function () {
            function Context() {
            }
            Context.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.layout.Context", config, extraArgs);
            };
            return Context;
        }());
        layout.Context = Context;
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var ContextItem = (function () {
            function ContextItem() {
            }
            ContextItem.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.layout.ContextItem", config, extraArgs);
            };
            return ContextItem;
        }());
        layout.ContextItem = ContextItem;
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var Layout = (function () {
            function Layout() {
            }
            Layout.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.layout.Layout", config, extraArgs);
            };
            return Layout;
        }());
        layout.Layout = Layout;
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var SizeModel = (function () {
            function SizeModel() {
            }
            SizeModel.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.layout.SizeModel", config, extraArgs);
            };
            return SizeModel;
        }());
        layout.SizeModel = SizeModel;
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var layout;
    (function (layout) {
        var SizePolicy = (function () {
            function SizePolicy() {
            }
            SizePolicy.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.layout.SizePolicy", config, extraArgs);
            };
            return SizePolicy;
        }());
        layout.SizePolicy = SizePolicy;
    })(layout = TypExt.layout || (TypExt.layout = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Loader = (function () {
        function Loader() {
        }
        Loader.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Loader", config, extraArgs);
        };
        return Loader;
    }());
    TypExt.Loader = Loader;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var LoadMask = (function () {
        function LoadMask() {
        }
        LoadMask.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.LoadMask", config, extraArgs);
        };
        return LoadMask;
    }());
    TypExt.LoadMask = LoadMask;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var menu;
    (function (menu) {
        var CheckItem = (function () {
            function CheckItem() {
            }
            CheckItem.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.menu.CheckItem", config, extraArgs);
            };
            return CheckItem;
        }());
        menu.CheckItem = CheckItem;
    })(menu = TypExt.menu || (TypExt.menu = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var menu;
    (function (menu) {
        var ColorPicker = (function () {
            function ColorPicker() {
            }
            ColorPicker.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.menu.ColorPicker", config, extraArgs);
            };
            return ColorPicker;
        }());
        menu.ColorPicker = ColorPicker;
    })(menu = TypExt.menu || (TypExt.menu = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var menu;
    (function (menu) {
        var DatePicker = (function () {
            function DatePicker() {
            }
            DatePicker.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.menu.DatePicker", config, extraArgs);
            };
            return DatePicker;
        }());
        menu.DatePicker = DatePicker;
    })(menu = TypExt.menu || (TypExt.menu = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var menu;
    (function (menu) {
        var Item = (function () {
            function Item() {
            }
            Item.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.menu.Item", config, extraArgs);
            };
            return Item;
        }());
        menu.Item = Item;
    })(menu = TypExt.menu || (TypExt.menu = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var menu;
    (function (menu) {
        var TextItem = (function () {
            function TextItem() {
            }
            TextItem.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.menu.TextItem", config, extraArgs);
            };
            return TextItem;
        }());
        menu.TextItem = TextItem;
    })(menu = TypExt.menu || (TypExt.menu = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var menu;
    (function (menu) {
        var Manager = (function () {
            function Manager() {
            }
            Manager.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.menu.Manager", config, extraArgs);
            };
            return Manager;
        }());
        menu.Manager = Manager;
    })(menu = TypExt.menu || (TypExt.menu = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var menu;
    (function (menu) {
        var MenuMgr = (function () {
            function MenuMgr() {
            }
            MenuMgr.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.menu.MenuMgr", config, extraArgs);
            };
            return MenuMgr;
        }());
        menu.MenuMgr = MenuMgr;
    })(menu = TypExt.menu || (TypExt.menu = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var menu;
    (function (menu) {
        var Menu = (function () {
            function Menu() {
            }
            Menu.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.menu.Menu", config, extraArgs);
            };
            return Menu;
        }());
        menu.Menu = Menu;
    })(menu = TypExt.menu || (TypExt.menu = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var menu;
    (function (menu) {
        var Separator = (function () {
            function Separator() {
            }
            Separator.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.menu.Separator", config, extraArgs);
            };
            return Separator;
        }());
        menu.Separator = Separator;
    })(menu = TypExt.menu || (TypExt.menu = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var MessageBox = (function () {
        function MessageBox() {
        }
        MessageBox.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.MessageBox", config, extraArgs);
        };
        return MessageBox;
    }());
    TypExt.MessageBox = MessageBox;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Msg = (function () {
        function Msg() {
        }
        Msg.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Msg", config, extraArgs);
        };
        return Msg;
    }());
    TypExt.Msg = Msg;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var mixin;
    (function (mixin) {
        var Bindable = (function () {
            function Bindable() {
            }
            Bindable.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.mixin.Bindable", config, extraArgs);
            };
            return Bindable;
        }());
        mixin.Bindable = Bindable;
    })(mixin = TypExt.mixin || (TypExt.mixin = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var mixin;
    (function (mixin) {
        var Factoryable = (function () {
            function Factoryable() {
            }
            Factoryable.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.mixin.Factoryable", config, extraArgs);
            };
            return Factoryable;
        }());
        mixin.Factoryable = Factoryable;
    })(mixin = TypExt.mixin || (TypExt.mixin = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var mixin;
    (function (mixin) {
        var Hookable = (function () {
            function Hookable() {
            }
            Hookable.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.mixin.Hookable", config, extraArgs);
            };
            return Hookable;
        }());
        mixin.Hookable = Hookable;
    })(mixin = TypExt.mixin || (TypExt.mixin = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var mixin;
    (function (mixin) {
        var Identifiable = (function () {
            function Identifiable() {
            }
            Identifiable.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.mixin.Identifiable", config, extraArgs);
            };
            return Identifiable;
        }());
        mixin.Identifiable = Identifiable;
    })(mixin = TypExt.mixin || (TypExt.mixin = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var mixin;
    (function (mixin) {
        var Inheritable = (function () {
            function Inheritable() {
            }
            Inheritable.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.mixin.Inheritable", config, extraArgs);
            };
            return Inheritable;
        }());
        mixin.Inheritable = Inheritable;
    })(mixin = TypExt.mixin || (TypExt.mixin = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Mixin = (function () {
        function Mixin() {
        }
        Mixin.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Mixin", config, extraArgs);
        };
        return Mixin;
    }());
    TypExt.Mixin = Mixin;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var mixin;
    (function (mixin) {
        var Mashup = (function () {
            function Mashup() {
            }
            Mashup.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.mixin.Mashup", config, extraArgs);
            };
            return Mashup;
        }());
        mixin.Mashup = Mashup;
    })(mixin = TypExt.mixin || (TypExt.mixin = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var mixin;
    (function (mixin) {
        var Observable = (function () {
            function Observable() {
            }
            Observable.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.mixin.Observable", config, extraArgs);
            };
            return Observable;
        }());
        mixin.Observable = Observable;
    })(mixin = TypExt.mixin || (TypExt.mixin = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var mixin;
    (function (mixin) {
        var Queryable = (function () {
            function Queryable() {
            }
            Queryable.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.mixin.Queryable", config, extraArgs);
            };
            return Queryable;
        }());
        mixin.Queryable = Queryable;
    })(mixin = TypExt.mixin || (TypExt.mixin = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var mixin;
    (function (mixin) {
        var Responsive = (function () {
            function Responsive() {
            }
            Responsive.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.mixin.Responsive", config, extraArgs);
            };
            return Responsive;
        }());
        mixin.Responsive = Responsive;
    })(mixin = TypExt.mixin || (TypExt.mixin = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var mixin;
    (function (mixin) {
        var Selectable = (function () {
            function Selectable() {
            }
            Selectable.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.mixin.Selectable", config, extraArgs);
            };
            return Selectable;
        }());
        mixin.Selectable = Selectable;
    })(mixin = TypExt.mixin || (TypExt.mixin = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var mixin;
    (function (mixin) {
        var Templatable = (function () {
            function Templatable() {
            }
            Templatable.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.mixin.Templatable", config, extraArgs);
            };
            return Templatable;
        }());
        mixin.Templatable = Templatable;
    })(mixin = TypExt.mixin || (TypExt.mixin = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var mixin;
    (function (mixin) {
        var Traversable = (function () {
            function Traversable() {
            }
            Traversable.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.mixin.Traversable", config, extraArgs);
            };
            return Traversable;
        }());
        mixin.Traversable = Traversable;
    })(mixin = TypExt.mixin || (TypExt.mixin = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Number = (function () {
        function Number() {
        }
        Number.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Number", config, extraArgs);
        };
        return Number;
    }());
    TypExt.Number = Number;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Os = (function () {
        function Os() {
        }
        Os.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Os", config, extraArgs);
        };
        return Os;
    }());
    TypExt.Os = Os;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var panel;
    (function (panel) {
        var Bar = (function () {
            function Bar() {
            }
            Bar.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.panel.Bar", config, extraArgs);
            };
            return Bar;
        }());
        panel.Bar = Bar;
    })(panel = TypExt.panel || (TypExt.panel = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var panel;
    (function (panel) {
        var DD = (function () {
            function DD() {
            }
            DD.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.panel.DD", config, extraArgs);
            };
            return DD;
        }());
        panel.DD = DD;
    })(panel = TypExt.panel || (TypExt.panel = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var panel;
    (function (panel) {
        var Header = (function () {
            function Header() {
            }
            Header.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.panel.Header", config, extraArgs);
            };
            return Header;
        }());
        panel.Header = Header;
    })(panel = TypExt.panel || (TypExt.panel = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var panel;
    (function (panel) {
        var Panel = (function () {
            function Panel() {
            }
            Panel.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.panel.Panel", config, extraArgs);
            };
            return Panel;
        }());
        panel.Panel = Panel;
    })(panel = TypExt.panel || (TypExt.panel = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Panel = (function () {
        function Panel() {
        }
        Panel.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Panel", config, extraArgs);
        };
        return Panel;
    }());
    TypExt.Panel = Panel;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var panel;
    (function (panel) {
        var Pinnable = (function () {
            function Pinnable() {
            }
            Pinnable.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.panel.Pinnable", config, extraArgs);
            };
            return Pinnable;
        }());
        panel.Pinnable = Pinnable;
    })(panel = TypExt.panel || (TypExt.panel = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var panel;
    (function (panel) {
        var Proxy = (function () {
            function Proxy() {
            }
            Proxy.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.panel.Proxy", config, extraArgs);
            };
            return Proxy;
        }());
        panel.Proxy = Proxy;
    })(panel = TypExt.panel || (TypExt.panel = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var dd;
    (function (dd) {
        var PanelProxy = (function () {
            function PanelProxy() {
            }
            PanelProxy.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.dd.PanelProxy", config, extraArgs);
            };
            return PanelProxy;
        }());
        dd.PanelProxy = PanelProxy;
    })(dd = TypExt.dd || (TypExt.dd = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var panel;
    (function (panel) {
        var Table = (function () {
            function Table() {
            }
            Table.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.panel.Table", config, extraArgs);
            };
            return Table;
        }());
        panel.Table = Table;
    })(panel = TypExt.panel || (TypExt.panel = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var panel;
    (function (panel) {
        var Title = (function () {
            function Title() {
            }
            Title.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.panel.Title", config, extraArgs);
            };
            return Title;
        }());
        panel.Title = Title;
    })(panel = TypExt.panel || (TypExt.panel = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var panel;
    (function (panel) {
        var Tool = (function () {
            function Tool() {
            }
            Tool.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.panel.Tool", config, extraArgs);
            };
            return Tool;
        }());
        panel.Tool = Tool;
    })(panel = TypExt.panel || (TypExt.panel = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var perf;
    (function (perf) {
        var Accumulator = (function () {
            function Accumulator() {
            }
            Accumulator.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.perf.Accumulator", config, extraArgs);
            };
            return Accumulator;
        }());
        perf.Accumulator = Accumulator;
    })(perf = TypExt.perf || (TypExt.perf = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var perf;
    (function (perf) {
        var Monitor = (function () {
            function Monitor() {
            }
            Monitor.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.perf.Monitor", config, extraArgs);
            };
            return Monitor;
        }());
        perf.Monitor = Monitor;
    })(perf = TypExt.perf || (TypExt.perf = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Perf = (function () {
        function Perf() {
        }
        Perf.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Perf", config, extraArgs);
        };
        return Perf;
    }());
    TypExt.Perf = Perf;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var picker;
    (function (picker) {
        var Color = (function () {
            function Color() {
            }
            Color.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.picker.Color", config, extraArgs);
            };
            return Color;
        }());
        picker.Color = Color;
    })(picker = TypExt.picker || (TypExt.picker = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ColorPalette = (function () {
        function ColorPalette() {
        }
        ColorPalette.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.ColorPalette", config, extraArgs);
        };
        return ColorPalette;
    }());
    TypExt.ColorPalette = ColorPalette;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var picker;
    (function (picker) {
        var Date = (function () {
            function Date() {
            }
            Date.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.picker.Date", config, extraArgs);
            };
            return Date;
        }());
        picker.Date = Date;
    })(picker = TypExt.picker || (TypExt.picker = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var DatePicker = (function () {
        function DatePicker() {
        }
        DatePicker.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.DatePicker", config, extraArgs);
        };
        return DatePicker;
    }());
    TypExt.DatePicker = DatePicker;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var picker;
    (function (picker) {
        var Month = (function () {
            function Month() {
            }
            Month.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.picker.Month", config, extraArgs);
            };
            return Month;
        }());
        picker.Month = Month;
    })(picker = TypExt.picker || (TypExt.picker = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var MonthPicker = (function () {
        function MonthPicker() {
        }
        MonthPicker.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.MonthPicker", config, extraArgs);
        };
        return MonthPicker;
    }());
    TypExt.MonthPicker = MonthPicker;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var picker;
    (function (picker) {
        var Time = (function () {
            function Time() {
            }
            Time.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.picker.Time", config, extraArgs);
            };
            return Time;
        }());
        picker.Time = Time;
    })(picker = TypExt.picker || (TypExt.picker = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var plugin;
    (function (plugin) {
        var Abstract = (function () {
            function Abstract() {
            }
            Abstract.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.plugin.Abstract", config, extraArgs);
            };
            return Abstract;
        }());
        plugin.Abstract = Abstract;
    })(plugin = TypExt.plugin || (TypExt.plugin = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var AbstractPlugin = (function () {
        function AbstractPlugin() {
        }
        AbstractPlugin.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.AbstractPlugin", config, extraArgs);
        };
        return AbstractPlugin;
    }());
    TypExt.AbstractPlugin = AbstractPlugin;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var plugin;
    (function (plugin) {
        var AbstractClipboard = (function () {
            function AbstractClipboard() {
            }
            AbstractClipboard.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.plugin.AbstractClipboard", config, extraArgs);
            };
            return AbstractClipboard;
        }());
        plugin.AbstractClipboard = AbstractClipboard;
    })(plugin = TypExt.plugin || (TypExt.plugin = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var plugin;
    (function (plugin) {
        var LazyItems = (function () {
            function LazyItems() {
            }
            LazyItems.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.plugin.LazyItems", config, extraArgs);
            };
            return LazyItems;
        }());
        plugin.LazyItems = LazyItems;
    })(plugin = TypExt.plugin || (TypExt.plugin = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var plugin;
    (function (plugin) {
        var Manager = (function () {
            function Manager() {
            }
            Manager.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.plugin.Manager", config, extraArgs);
            };
            return Manager;
        }());
        plugin.Manager = Manager;
    })(plugin = TypExt.plugin || (TypExt.plugin = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var PluginManager = (function () {
        function PluginManager() {
        }
        PluginManager.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.PluginManager", config, extraArgs);
        };
        return PluginManager;
    }());
    TypExt.PluginManager = PluginManager;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var PluginMgr = (function () {
        function PluginMgr() {
        }
        PluginMgr.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.PluginMgr", config, extraArgs);
        };
        return PluginMgr;
    }());
    TypExt.PluginMgr = PluginMgr;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var plugin;
    (function (plugin) {
        var Responsive = (function () {
            function Responsive() {
            }
            Responsive.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.plugin.Responsive", config, extraArgs);
            };
            return Responsive;
        }());
        plugin.Responsive = Responsive;
    })(plugin = TypExt.plugin || (TypExt.plugin = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var plugin;
    (function (plugin) {
        var Viewport = (function () {
            function Viewport() {
            }
            Viewport.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.plugin.Viewport", config, extraArgs);
            };
            return Viewport;
        }());
        plugin.Viewport = Viewport;
    })(plugin = TypExt.plugin || (TypExt.plugin = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ProgressBar = (function () {
        function ProgressBar() {
        }
        ProgressBar.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.ProgressBar", config, extraArgs);
        };
        return ProgressBar;
    }());
    TypExt.ProgressBar = ProgressBar;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ProgressBarWidget = (function () {
        function ProgressBarWidget() {
        }
        ProgressBarWidget.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.ProgressBarWidget", config, extraArgs);
        };
        return ProgressBarWidget;
    }());
    TypExt.ProgressBarWidget = ProgressBarWidget;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var resizer;
    (function (resizer) {
        var BorderSplitter = (function () {
            function BorderSplitter() {
            }
            BorderSplitter.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.resizer.BorderSplitter", config, extraArgs);
            };
            return BorderSplitter;
        }());
        resizer.BorderSplitter = BorderSplitter;
    })(resizer = TypExt.resizer || (TypExt.resizer = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var resizer;
    (function (resizer) {
        var BorderSplitterTracker = (function () {
            function BorderSplitterTracker() {
            }
            BorderSplitterTracker.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.resizer.BorderSplitterTracker", config, extraArgs);
            };
            return BorderSplitterTracker;
        }());
        resizer.BorderSplitterTracker = BorderSplitterTracker;
    })(resizer = TypExt.resizer || (TypExt.resizer = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var resizer;
    (function (resizer) {
        var Handle = (function () {
            function Handle() {
            }
            Handle.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.resizer.Handle", config, extraArgs);
            };
            return Handle;
        }());
        resizer.Handle = Handle;
    })(resizer = TypExt.resizer || (TypExt.resizer = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var resizer;
    (function (resizer) {
        var Resizer = (function () {
            function Resizer() {
            }
            Resizer.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.resizer.Resizer", config, extraArgs);
            };
            return Resizer;
        }());
        resizer.Resizer = Resizer;
    })(resizer = TypExt.resizer || (TypExt.resizer = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Resizable = (function () {
        function Resizable() {
        }
        Resizable.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Resizable", config, extraArgs);
        };
        return Resizable;
    }());
    TypExt.Resizable = Resizable;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var resizer;
    (function (resizer) {
        var ResizeTracker = (function () {
            function ResizeTracker() {
            }
            ResizeTracker.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.resizer.ResizeTracker", config, extraArgs);
            };
            return ResizeTracker;
        }());
        resizer.ResizeTracker = ResizeTracker;
    })(resizer = TypExt.resizer || (TypExt.resizer = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var resizer;
    (function (resizer) {
        var Splitter = (function () {
            function Splitter() {
            }
            Splitter.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.resizer.Splitter", config, extraArgs);
            };
            return Splitter;
        }());
        resizer.Splitter = Splitter;
    })(resizer = TypExt.resizer || (TypExt.resizer = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var resizer;
    (function (resizer) {
        var SplitterTracker = (function () {
            function SplitterTracker() {
            }
            SplitterTracker.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.resizer.SplitterTracker", config, extraArgs);
            };
            return SplitterTracker;
        }());
        resizer.SplitterTracker = SplitterTracker;
    })(resizer = TypExt.resizer || (TypExt.resizer = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var scroll;
    (function (scroll) {
        var DomScroller = (function () {
            function DomScroller() {
            }
            DomScroller.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.scroll.DomScroller", config, extraArgs);
            };
            return DomScroller;
        }());
        scroll.DomScroller = DomScroller;
    })(scroll = TypExt.scroll || (TypExt.scroll = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var scroll;
    (function (scroll) {
        var Indicator = (function () {
            function Indicator() {
            }
            Indicator.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.scroll.Indicator", config, extraArgs);
            };
            return Indicator;
        }());
        scroll.Indicator = Indicator;
    })(scroll = TypExt.scroll || (TypExt.scroll = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var scroll;
    (function (scroll) {
        var Scroller = (function () {
            function Scroller() {
            }
            Scroller.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.scroll.Scroller", config, extraArgs);
            };
            return Scroller;
        }());
        scroll.Scroller = Scroller;
    })(scroll = TypExt.scroll || (TypExt.scroll = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var scroll;
    (function (scroll) {
        var TouchScroller = (function () {
            function TouchScroller() {
            }
            TouchScroller.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.scroll.TouchScroller", config, extraArgs);
            };
            return TouchScroller;
        }());
        scroll.TouchScroller = TouchScroller;
    })(scroll = TypExt.scroll || (TypExt.scroll = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var selection;
    (function (selection) {
        var CellModel = (function () {
            function CellModel() {
            }
            CellModel.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.selection.CellModel", config, extraArgs);
            };
            return CellModel;
        }());
        selection.CellModel = CellModel;
    })(selection = TypExt.selection || (TypExt.selection = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var selection;
    (function (selection) {
        var CheckboxModel = (function () {
            function CheckboxModel() {
            }
            CheckboxModel.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.selection.CheckboxModel", config, extraArgs);
            };
            return CheckboxModel;
        }());
        selection.CheckboxModel = CheckboxModel;
    })(selection = TypExt.selection || (TypExt.selection = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var selection;
    (function (selection) {
        var DataViewModel = (function () {
            function DataViewModel() {
            }
            DataViewModel.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.selection.DataViewModel", config, extraArgs);
            };
            return DataViewModel;
        }());
        selection.DataViewModel = DataViewModel;
    })(selection = TypExt.selection || (TypExt.selection = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var selection;
    (function (selection) {
        var Model = (function () {
            function Model() {
            }
            Model.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.selection.Model", config, extraArgs);
            };
            return Model;
        }());
        selection.Model = Model;
    })(selection = TypExt.selection || (TypExt.selection = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var AbstractSelectionModel = (function () {
        function AbstractSelectionModel() {
        }
        AbstractSelectionModel.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.AbstractSelectionModel", config, extraArgs);
        };
        return AbstractSelectionModel;
    }());
    TypExt.AbstractSelectionModel = AbstractSelectionModel;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var selection;
    (function (selection) {
        var RowModel = (function () {
            function RowModel() {
            }
            RowModel.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.selection.RowModel", config, extraArgs);
            };
            return RowModel;
        }());
        selection.RowModel = RowModel;
    })(selection = TypExt.selection || (TypExt.selection = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var selection;
    (function (selection) {
        var TreeModel = (function () {
            function TreeModel() {
            }
            TreeModel.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.selection.TreeModel", config, extraArgs);
            };
            return TreeModel;
        }());
        selection.TreeModel = TreeModel;
    })(selection = TypExt.selection || (TypExt.selection = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var slider;
    (function (slider) {
        var Multi = (function () {
            function Multi() {
            }
            Multi.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.slider.Multi", config, extraArgs);
            };
            return Multi;
        }());
        slider.Multi = Multi;
    })(slider = TypExt.slider || (TypExt.slider = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var slider;
    (function (slider) {
        var MultiSlider = (function () {
            function MultiSlider() {
            }
            MultiSlider.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.slider.MultiSlider", config, extraArgs);
            };
            return MultiSlider;
        }());
        slider.MultiSlider = MultiSlider;
    })(slider = TypExt.slider || (TypExt.slider = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var slider;
    (function (slider) {
        var Single = (function () {
            function Single() {
            }
            Single.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.slider.Single", config, extraArgs);
            };
            return Single;
        }());
        slider.Single = Single;
    })(slider = TypExt.slider || (TypExt.slider = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Slider = (function () {
        function Slider() {
        }
        Slider.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Slider", config, extraArgs);
        };
        return Slider;
    }());
    TypExt.Slider = Slider;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var form;
    (function (form) {
        var SliderField = (function () {
            function SliderField() {
            }
            SliderField.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.form.SliderField", config, extraArgs);
            };
            return SliderField;
        }());
        form.SliderField = SliderField;
    })(form = TypExt.form || (TypExt.form = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var slider;
    (function (slider) {
        var SingleSlider = (function () {
            function SingleSlider() {
            }
            SingleSlider.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.slider.SingleSlider", config, extraArgs);
            };
            return SingleSlider;
        }());
        slider.SingleSlider = SingleSlider;
    })(slider = TypExt.slider || (TypExt.slider = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var slider;
    (function (slider) {
        var Slider = (function () {
            function Slider() {
            }
            Slider.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.slider.Slider", config, extraArgs);
            };
            return Slider;
        }());
        slider.Slider = Slider;
    })(slider = TypExt.slider || (TypExt.slider = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var slider;
    (function (slider) {
        var Thumb = (function () {
            function Thumb() {
            }
            Thumb.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.slider.Thumb", config, extraArgs);
            };
            return Thumb;
        }());
        slider.Thumb = Thumb;
    })(slider = TypExt.slider || (TypExt.slider = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var slider;
    (function (slider) {
        var Tip = (function () {
            function Tip() {
            }
            Tip.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.slider.Tip", config, extraArgs);
            };
            return Tip;
        }());
        slider.Tip = Tip;
    })(slider = TypExt.slider || (TypExt.slider = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var slider;
    (function (slider) {
        var Widget = (function () {
            function Widget() {
            }
            Widget.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.slider.Widget", config, extraArgs);
            };
            return Widget;
        }());
        slider.Widget = Widget;
    })(slider = TypExt.slider || (TypExt.slider = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var sparkline;
    (function (sparkline) {
        var Bar = (function () {
            function Bar() {
            }
            Bar.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.sparkline.Bar", config, extraArgs);
            };
            return Bar;
        }());
        sparkline.Bar = Bar;
    })(sparkline = TypExt.sparkline || (TypExt.sparkline = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var sparkline;
    (function (sparkline) {
        var BarBase = (function () {
            function BarBase() {
            }
            BarBase.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.sparkline.BarBase", config, extraArgs);
            };
            return BarBase;
        }());
        sparkline.BarBase = BarBase;
    })(sparkline = TypExt.sparkline || (TypExt.sparkline = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var sparkline;
    (function (sparkline) {
        var Base = (function () {
            function Base() {
            }
            Base.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.sparkline.Base", config, extraArgs);
            };
            return Base;
        }());
        sparkline.Base = Base;
    })(sparkline = TypExt.sparkline || (TypExt.sparkline = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var sparkline;
    (function (sparkline) {
        var Box = (function () {
            function Box() {
            }
            Box.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.sparkline.Box", config, extraArgs);
            };
            return Box;
        }());
        sparkline.Box = Box;
    })(sparkline = TypExt.sparkline || (TypExt.sparkline = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var sparkline;
    (function (sparkline) {
        var Bullet = (function () {
            function Bullet() {
            }
            Bullet.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.sparkline.Bullet", config, extraArgs);
            };
            return Bullet;
        }());
        sparkline.Bullet = Bullet;
    })(sparkline = TypExt.sparkline || (TypExt.sparkline = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var sparkline;
    (function (sparkline) {
        var CanvasBase = (function () {
            function CanvasBase() {
            }
            CanvasBase.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.sparkline.CanvasBase", config, extraArgs);
            };
            return CanvasBase;
        }());
        sparkline.CanvasBase = CanvasBase;
    })(sparkline = TypExt.sparkline || (TypExt.sparkline = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var sparkline;
    (function (sparkline) {
        var CanvasCanvas = (function () {
            function CanvasCanvas() {
            }
            CanvasCanvas.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.sparkline.CanvasCanvas", config, extraArgs);
            };
            return CanvasCanvas;
        }());
        sparkline.CanvasCanvas = CanvasCanvas;
    })(sparkline = TypExt.sparkline || (TypExt.sparkline = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var sparkline;
    (function (sparkline) {
        var Discrete = (function () {
            function Discrete() {
            }
            Discrete.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.sparkline.Discrete", config, extraArgs);
            };
            return Discrete;
        }());
        sparkline.Discrete = Discrete;
    })(sparkline = TypExt.sparkline || (TypExt.sparkline = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var sparkline;
    (function (sparkline) {
        var Line = (function () {
            function Line() {
            }
            Line.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.sparkline.Line", config, extraArgs);
            };
            return Line;
        }());
        sparkline.Line = Line;
    })(sparkline = TypExt.sparkline || (TypExt.sparkline = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var sparkline;
    (function (sparkline) {
        var Pie = (function () {
            function Pie() {
            }
            Pie.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.sparkline.Pie", config, extraArgs);
            };
            return Pie;
        }());
        sparkline.Pie = Pie;
    })(sparkline = TypExt.sparkline || (TypExt.sparkline = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var sparkline;
    (function (sparkline) {
        var RangeMap = (function () {
            function RangeMap() {
            }
            RangeMap.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.sparkline.RangeMap", config, extraArgs);
            };
            return RangeMap;
        }());
        sparkline.RangeMap = RangeMap;
    })(sparkline = TypExt.sparkline || (TypExt.sparkline = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var sparkline;
    (function (sparkline) {
        var Shape = (function () {
            function Shape() {
            }
            Shape.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.sparkline.Shape", config, extraArgs);
            };
            return Shape;
        }());
        sparkline.Shape = Shape;
    })(sparkline = TypExt.sparkline || (TypExt.sparkline = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var sparkline;
    (function (sparkline) {
        var TriState = (function () {
            function TriState() {
            }
            TriState.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.sparkline.TriState", config, extraArgs);
            };
            return TriState;
        }());
        sparkline.TriState = TriState;
    })(sparkline = TypExt.sparkline || (TypExt.sparkline = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var sparkline;
    (function (sparkline) {
        var VmlCanvas = (function () {
            function VmlCanvas() {
            }
            VmlCanvas.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.sparkline.VmlCanvas", config, extraArgs);
            };
            return VmlCanvas;
        }());
        sparkline.VmlCanvas = VmlCanvas;
    })(sparkline = TypExt.sparkline || (TypExt.sparkline = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var state;
    (function (state) {
        var CookieProvider = (function () {
            function CookieProvider() {
            }
            CookieProvider.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.state.CookieProvider", config, extraArgs);
            };
            return CookieProvider;
        }());
        state.CookieProvider = CookieProvider;
    })(state = TypExt.state || (TypExt.state = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var state;
    (function (state) {
        var LocalStorageProvider = (function () {
            function LocalStorageProvider() {
            }
            LocalStorageProvider.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.state.LocalStorageProvider", config, extraArgs);
            };
            return LocalStorageProvider;
        }());
        state.LocalStorageProvider = LocalStorageProvider;
    })(state = TypExt.state || (TypExt.state = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var state;
    (function (state) {
        var Manager = (function () {
            function Manager() {
            }
            Manager.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.state.Manager", config, extraArgs);
            };
            return Manager;
        }());
        state.Manager = Manager;
    })(state = TypExt.state || (TypExt.state = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var state;
    (function (state) {
        var Provider = (function () {
            function Provider() {
            }
            Provider.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.state.Provider", config, extraArgs);
            };
            return Provider;
        }());
        state.Provider = Provider;
    })(state = TypExt.state || (TypExt.state = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var state;
    (function (state) {
        var Stateful = (function () {
            function Stateful() {
            }
            Stateful.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.state.Stateful", config, extraArgs);
            };
            return Stateful;
        }());
        state.Stateful = Stateful;
    })(state = TypExt.state || (TypExt.state = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var String = (function () {
        function String() {
        }
        String.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.String", config, extraArgs);
        };
        return String;
    }());
    TypExt.String = String;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Supports = (function () {
        function Supports() {
        }
        Supports.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Supports", config, extraArgs);
        };
        return Supports;
    }());
    TypExt.Supports = Supports;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var tab;
    (function (tab) {
        var Bar = (function () {
            function Bar() {
            }
            Bar.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.tab.Bar", config, extraArgs);
            };
            return Bar;
        }());
        tab.Bar = Bar;
    })(tab = TypExt.tab || (TypExt.tab = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var tab;
    (function (tab) {
        var Panel = (function () {
            function Panel() {
            }
            Panel.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.tab.Panel", config, extraArgs);
            };
            return Panel;
        }());
        tab.Panel = Panel;
    })(tab = TypExt.tab || (TypExt.tab = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var TabPanel = (function () {
        function TabPanel() {
        }
        TabPanel.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.TabPanel", config, extraArgs);
        };
        return TabPanel;
    }());
    TypExt.TabPanel = TabPanel;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var tab;
    (function (tab) {
        var Tab = (function () {
            function Tab() {
            }
            Tab.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.tab.Tab", config, extraArgs);
            };
            return Tab;
        }());
        tab.Tab = Tab;
    })(tab = TypExt.tab || (TypExt.tab = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var TaskQueue = (function () {
        function TaskQueue() {
        }
        TaskQueue.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.TaskQueue", config, extraArgs);
        };
        return TaskQueue;
    }());
    TypExt.TaskQueue = TaskQueue;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Template = (function () {
        function Template() {
        }
        Template.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Template", config, extraArgs);
        };
        return Template;
    }());
    TypExt.Template = Template;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var tip;
    (function (tip) {
        var QuickTip = (function () {
            function QuickTip() {
            }
            QuickTip.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.tip.QuickTip", config, extraArgs);
            };
            return QuickTip;
        }());
        tip.QuickTip = QuickTip;
    })(tip = TypExt.tip || (TypExt.tip = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var QuickTip = (function () {
        function QuickTip() {
        }
        QuickTip.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.QuickTip", config, extraArgs);
        };
        return QuickTip;
    }());
    TypExt.QuickTip = QuickTip;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var tip;
    (function (tip) {
        var QuickTipManager = (function () {
            function QuickTipManager() {
            }
            QuickTipManager.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.tip.QuickTipManager", config, extraArgs);
            };
            return QuickTipManager;
        }());
        tip.QuickTipManager = QuickTipManager;
    })(tip = TypExt.tip || (TypExt.tip = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var QuickTips = (function () {
        function QuickTips() {
        }
        QuickTips.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.QuickTips", config, extraArgs);
        };
        return QuickTips;
    }());
    TypExt.QuickTips = QuickTips;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var tip;
    (function (tip) {
        var Tip = (function () {
            function Tip() {
            }
            Tip.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.tip.Tip", config, extraArgs);
            };
            return Tip;
        }());
        tip.Tip = Tip;
    })(tip = TypExt.tip || (TypExt.tip = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Tip = (function () {
        function Tip() {
        }
        Tip.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Tip", config, extraArgs);
        };
        return Tip;
    }());
    TypExt.Tip = Tip;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var tip;
    (function (tip) {
        var ToolTip = (function () {
            function ToolTip() {
            }
            ToolTip.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.tip.ToolTip", config, extraArgs);
            };
            return ToolTip;
        }());
        tip.ToolTip = ToolTip;
    })(tip = TypExt.tip || (TypExt.tip = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ToolTip = (function () {
        function ToolTip() {
        }
        ToolTip.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.ToolTip", config, extraArgs);
        };
        return ToolTip;
    }());
    TypExt.ToolTip = ToolTip;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var toolbar;
    (function (toolbar) {
        var Breadcrumb = (function () {
            function Breadcrumb() {
            }
            Breadcrumb.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.toolbar.Breadcrumb", config, extraArgs);
            };
            return Breadcrumb;
        }());
        toolbar.Breadcrumb = Breadcrumb;
    })(toolbar = TypExt.toolbar || (TypExt.toolbar = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var toolbar;
    (function (toolbar) {
        var Fill = (function () {
            function Fill() {
            }
            Fill.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.toolbar.Fill", config, extraArgs);
            };
            return Fill;
        }());
        toolbar.Fill = Fill;
    })(toolbar = TypExt.toolbar || (TypExt.toolbar = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var toolbar;
    (function (toolbar) {
        var Item = (function () {
            function Item() {
            }
            Item.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.toolbar.Item", config, extraArgs);
            };
            return Item;
        }());
        toolbar.Item = Item;
    })(toolbar = TypExt.toolbar || (TypExt.toolbar = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var toolbar;
    (function (toolbar) {
        var Paging = (function () {
            function Paging() {
            }
            Paging.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.toolbar.Paging", config, extraArgs);
            };
            return Paging;
        }());
        toolbar.Paging = Paging;
    })(toolbar = TypExt.toolbar || (TypExt.toolbar = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var PagingToolbar = (function () {
        function PagingToolbar() {
        }
        PagingToolbar.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.PagingToolbar", config, extraArgs);
        };
        return PagingToolbar;
    }());
    TypExt.PagingToolbar = PagingToolbar;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var toolbar;
    (function (toolbar) {
        var Separator = (function () {
            function Separator() {
            }
            Separator.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.toolbar.Separator", config, extraArgs);
            };
            return Separator;
        }());
        toolbar.Separator = Separator;
    })(toolbar = TypExt.toolbar || (TypExt.toolbar = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var toolbar;
    (function (toolbar) {
        var Spacer = (function () {
            function Spacer() {
            }
            Spacer.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.toolbar.Spacer", config, extraArgs);
            };
            return Spacer;
        }());
        toolbar.Spacer = Spacer;
    })(toolbar = TypExt.toolbar || (TypExt.toolbar = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var toolbar;
    (function (toolbar) {
        var TextItem = (function () {
            function TextItem() {
            }
            TextItem.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.toolbar.TextItem", config, extraArgs);
            };
            return TextItem;
        }());
        toolbar.TextItem = TextItem;
    })(toolbar = TypExt.toolbar || (TypExt.toolbar = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var toolbar;
    (function (toolbar) {
        var Toolbar = (function () {
            function Toolbar() {
            }
            Toolbar.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.toolbar.Toolbar", config, extraArgs);
            };
            return Toolbar;
        }());
        toolbar.Toolbar = Toolbar;
    })(toolbar = TypExt.toolbar || (TypExt.toolbar = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Toolbar = (function () {
        function Toolbar() {
        }
        Toolbar.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Toolbar", config, extraArgs);
        };
        return Toolbar;
    }());
    TypExt.Toolbar = Toolbar;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var tree;
    (function (tree) {
        var Column = (function () {
            function Column() {
            }
            Column.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.tree.Column", config, extraArgs);
            };
            return Column;
        }());
        tree.Column = Column;
    })(tree = TypExt.tree || (TypExt.tree = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var tree;
    (function (tree) {
        var NavigationModel = (function () {
            function NavigationModel() {
            }
            NavigationModel.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.tree.NavigationModel", config, extraArgs);
            };
            return NavigationModel;
        }());
        tree.NavigationModel = NavigationModel;
    })(tree = TypExt.tree || (TypExt.tree = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var tree;
    (function (tree) {
        var Panel = (function () {
            function Panel() {
            }
            Panel.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.tree.Panel", config, extraArgs);
            };
            return Panel;
        }());
        tree.Panel = Panel;
    })(tree = TypExt.tree || (TypExt.tree = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var tree;
    (function (tree) {
        var TreePanel = (function () {
            function TreePanel() {
            }
            TreePanel.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.tree.TreePanel", config, extraArgs);
            };
            return TreePanel;
        }());
        tree.TreePanel = TreePanel;
    })(tree = TypExt.tree || (TypExt.tree = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var TreePanel = (function () {
        function TreePanel() {
        }
        TreePanel.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.TreePanel", config, extraArgs);
        };
        return TreePanel;
    }());
    TypExt.TreePanel = TreePanel;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var tree;
    (function (tree) {
        var plugin;
        (function (plugin) {
            var TreeViewDragDrop = (function () {
                function TreeViewDragDrop() {
                }
                TreeViewDragDrop.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.tree.plugin.TreeViewDragDrop", config, extraArgs);
                };
                return TreeViewDragDrop;
            }());
            plugin.TreeViewDragDrop = TreeViewDragDrop;
        })(plugin = tree.plugin || (tree.plugin = {}));
    })(tree = TypExt.tree || (TypExt.tree = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var tree;
    (function (tree) {
        var View = (function () {
            function View() {
            }
            View.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.tree.View", config, extraArgs);
            };
            return View;
        }());
        tree.View = View;
    })(tree = TypExt.tree || (TypExt.tree = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var tree;
    (function (tree) {
        var ViewDragZone = (function () {
            function ViewDragZone() {
            }
            ViewDragZone.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.tree.ViewDragZone", config, extraArgs);
            };
            return ViewDragZone;
        }());
        tree.ViewDragZone = ViewDragZone;
    })(tree = TypExt.tree || (TypExt.tree = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var tree;
    (function (tree) {
        var ViewDropZone = (function () {
            function ViewDropZone() {
            }
            ViewDropZone.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.tree.ViewDropZone", config, extraArgs);
            };
            return ViewDropZone;
        }());
        tree.ViewDropZone = ViewDropZone;
    })(tree = TypExt.tree || (TypExt.tree = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var AbstractMixedCollection = (function () {
            function AbstractMixedCollection() {
            }
            AbstractMixedCollection.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.AbstractMixedCollection", config, extraArgs);
            };
            return AbstractMixedCollection;
        }());
        util.AbstractMixedCollection = AbstractMixedCollection;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Animate = (function () {
            function Animate() {
            }
            Animate.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Animate", config, extraArgs);
            };
            return Animate;
        }());
        util.Animate = Animate;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Bag = (function () {
            function Bag() {
            }
            Bag.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Bag", config, extraArgs);
            };
            return Bag;
        }());
        util.Bag = Bag;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Base64 = (function () {
            function Base64() {
            }
            Base64.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Base64", config, extraArgs);
            };
            return Base64;
        }());
        util.Base64 = Base64;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Cache = (function () {
            function Cache() {
            }
            Cache.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Cache", config, extraArgs);
            };
            return Cache;
        }());
        util.Cache = Cache;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var ClickRepeater = (function () {
            function ClickRepeater() {
            }
            ClickRepeater.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.ClickRepeater", config, extraArgs);
            };
            return ClickRepeater;
        }());
        util.ClickRepeater = ClickRepeater;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Collection = (function () {
            function Collection() {
            }
            Collection.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Collection", config, extraArgs);
            };
            return Collection;
        }());
        util.Collection = Collection;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var CollectionKey = (function () {
            function CollectionKey() {
            }
            CollectionKey.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.CollectionKey", config, extraArgs);
            };
            return CollectionKey;
        }());
        util.CollectionKey = CollectionKey;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var ComponentDragger = (function () {
            function ComponentDragger() {
            }
            ComponentDragger.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.ComponentDragger", config, extraArgs);
            };
            return ComponentDragger;
        }());
        util.ComponentDragger = ComponentDragger;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Cookies = (function () {
            function Cookies() {
            }
            Cookies.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Cookies", config, extraArgs);
            };
            return Cookies;
        }());
        util.Cookies = Cookies;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var CSS = (function () {
            function CSS() {
            }
            CSS.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.CSS", config, extraArgs);
            };
            return CSS;
        }());
        util.CSS = CSS;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var CSV = (function () {
            function CSV() {
            }
            CSV.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.CSV", config, extraArgs);
            };
            return CSV;
        }());
        util.CSV = CSV;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var DelayedTask = (function () {
            function DelayedTask() {
            }
            DelayedTask.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.DelayedTask", config, extraArgs);
            };
            return DelayedTask;
        }());
        util.DelayedTask = DelayedTask;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var DelimitedValue = (function () {
            function DelimitedValue() {
            }
            DelimitedValue.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.DelimitedValue", config, extraArgs);
            };
            return DelimitedValue;
        }());
        util.DelimitedValue = DelimitedValue;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var ElementContainer = (function () {
            function ElementContainer() {
            }
            ElementContainer.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.ElementContainer", config, extraArgs);
            };
            return ElementContainer;
        }());
        util.ElementContainer = ElementContainer;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Event = (function () {
            function Event() {
            }
            Event.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Event", config, extraArgs);
            };
            return Event;
        }());
        util.Event = Event;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Filter = (function () {
            function Filter() {
            }
            Filter.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Filter", config, extraArgs);
            };
            return Filter;
        }());
        util.Filter = Filter;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var FilterCollection = (function () {
            function FilterCollection() {
            }
            FilterCollection.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.FilterCollection", config, extraArgs);
            };
            return FilterCollection;
        }());
        util.FilterCollection = FilterCollection;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Floating = (function () {
            function Floating() {
            }
            Floating.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Floating", config, extraArgs);
            };
            return Floating;
        }());
        util.Floating = Floating;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Focusable = (function () {
            function Focusable() {
            }
            Focusable.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Focusable", config, extraArgs);
            };
            return Focusable;
        }());
        util.Focusable = Focusable;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var FocusableContainer = (function () {
            function FocusableContainer() {
            }
            FocusableContainer.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.FocusableContainer", config, extraArgs);
            };
            return FocusableContainer;
        }());
        util.FocusableContainer = FocusableContainer;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Format = (function () {
            function Format() {
            }
            Format.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Format", config, extraArgs);
            };
            return Format;
        }());
        util.Format = Format;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Group = (function () {
            function Group() {
            }
            Group.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Group", config, extraArgs);
            };
            return Group;
        }());
        util.Group = Group;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var GroupCollection = (function () {
            function GroupCollection() {
            }
            GroupCollection.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.GroupCollection", config, extraArgs);
            };
            return GroupCollection;
        }());
        util.GroupCollection = GroupCollection;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Grouper = (function () {
            function Grouper() {
            }
            Grouper.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Grouper", config, extraArgs);
            };
            return Grouper;
        }());
        util.Grouper = Grouper;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var HashMap = (function () {
            function HashMap() {
            }
            HashMap.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.HashMap", config, extraArgs);
            };
            return HashMap;
        }());
        util.HashMap = HashMap;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var History = (function () {
            function History() {
            }
            History.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.History", config, extraArgs);
            };
            return History;
        }());
        util.History = History;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var History = (function () {
        function History() {
        }
        History.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.History", config, extraArgs);
        };
        return History;
    }());
    TypExt.History = History;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Inflector = (function () {
            function Inflector() {
            }
            Inflector.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Inflector", config, extraArgs);
            };
            return Inflector;
        }());
        util.Inflector = Inflector;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var KeyMap = (function () {
            function KeyMap() {
            }
            KeyMap.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.KeyMap", config, extraArgs);
            };
            return KeyMap;
        }());
        util.KeyMap = KeyMap;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var KeyMap = (function () {
        function KeyMap() {
        }
        KeyMap.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.KeyMap", config, extraArgs);
        };
        return KeyMap;
    }());
    TypExt.KeyMap = KeyMap;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var KeyNav = (function () {
            function KeyNav() {
            }
            KeyNav.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.KeyNav", config, extraArgs);
            };
            return KeyNav;
        }());
        util.KeyNav = KeyNav;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var KeyNav = (function () {
        function KeyNav() {
        }
        KeyNav.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.KeyNav", config, extraArgs);
        };
        return KeyNav;
    }());
    TypExt.KeyNav = KeyNav;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var LocalStorage = (function () {
            function LocalStorage() {
            }
            LocalStorage.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.LocalStorage", config, extraArgs);
            };
            return LocalStorage;
        }());
        util.LocalStorage = LocalStorage;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var LruCache = (function () {
            function LruCache() {
            }
            LruCache.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.LruCache", config, extraArgs);
            };
            return LruCache;
        }());
        util.LruCache = LruCache;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Memento = (function () {
            function Memento() {
            }
            Memento.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Memento", config, extraArgs);
            };
            return Memento;
        }());
        util.Memento = Memento;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var MixedCollection = (function () {
            function MixedCollection() {
            }
            MixedCollection.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.MixedCollection", config, extraArgs);
            };
            return MixedCollection;
        }());
        util.MixedCollection = MixedCollection;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var ObjectTemplate = (function () {
            function ObjectTemplate() {
            }
            ObjectTemplate.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.ObjectTemplate", config, extraArgs);
            };
            return ObjectTemplate;
        }());
        util.ObjectTemplate = ObjectTemplate;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Observable = (function () {
            function Observable() {
            }
            Observable.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Observable", config, extraArgs);
            };
            return Observable;
        }());
        util.Observable = Observable;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Offset = (function () {
            function Offset() {
            }
            Offset.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Offset", config, extraArgs);
            };
            return Offset;
        }());
        util.Offset = Offset;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Operators = (function () {
            function Operators() {
            }
            Operators.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Operators", config, extraArgs);
            };
            return Operators;
        }());
        util.Operators = Operators;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var paintmonitor;
        (function (paintmonitor) {
            var Abstract = (function () {
                function Abstract() {
                }
                Abstract.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.util.paintmonitor.Abstract", config, extraArgs);
                };
                return Abstract;
            }());
            paintmonitor.Abstract = Abstract;
        })(paintmonitor = util.paintmonitor || (util.paintmonitor = {}));
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var paintmonitor;
        (function (paintmonitor) {
            var CssAnimation = (function () {
                function CssAnimation() {
                }
                CssAnimation.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.util.paintmonitor.CssAnimation", config, extraArgs);
                };
                return CssAnimation;
            }());
            paintmonitor.CssAnimation = CssAnimation;
        })(paintmonitor = util.paintmonitor || (util.paintmonitor = {}));
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var PaintMonitor = (function () {
            function PaintMonitor() {
            }
            PaintMonitor.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.PaintMonitor", config, extraArgs);
            };
            return PaintMonitor;
        }());
        util.PaintMonitor = PaintMonitor;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var paintmonitor;
        (function (paintmonitor) {
            var OverflowChange = (function () {
                function OverflowChange() {
                }
                OverflowChange.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.util.paintmonitor.OverflowChange", config, extraArgs);
                };
                return OverflowChange;
            }());
            paintmonitor.OverflowChange = OverflowChange;
        })(paintmonitor = util.paintmonitor || (util.paintmonitor = {}));
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Point = (function () {
            function Point() {
            }
            Point.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Point", config, extraArgs);
            };
            return Point;
        }());
        util.Point = Point;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Positionable = (function () {
            function Positionable() {
            }
            Positionable.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Positionable", config, extraArgs);
            };
            return Positionable;
        }());
        util.Positionable = Positionable;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var ProtoElement = (function () {
            function ProtoElement() {
            }
            ProtoElement.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.ProtoElement", config, extraArgs);
            };
            return ProtoElement;
        }());
        util.ProtoElement = ProtoElement;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Queue = (function () {
            function Queue() {
            }
            Queue.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Queue", config, extraArgs);
            };
            return Queue;
        }());
        util.Queue = Queue;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Region = (function () {
            function Region() {
            }
            Region.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Region", config, extraArgs);
            };
            return Region;
        }());
        util.Region = Region;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Renderable = (function () {
            function Renderable() {
            }
            Renderable.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Renderable", config, extraArgs);
            };
            return Renderable;
        }());
        util.Renderable = Renderable;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Schedulable = (function () {
            function Schedulable() {
            }
            Schedulable.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Schedulable", config, extraArgs);
            };
            return Schedulable;
        }());
        util.Schedulable = Schedulable;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Scheduler = (function () {
            function Scheduler() {
            }
            Scheduler.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Scheduler", config, extraArgs);
            };
            return Scheduler;
        }());
        util.Scheduler = Scheduler;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var sizemonitor;
        (function (sizemonitor) {
            var Abstract = (function () {
                function Abstract() {
                }
                Abstract.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.util.sizemonitor.Abstract", config, extraArgs);
                };
                return Abstract;
            }());
            sizemonitor.Abstract = Abstract;
        })(sizemonitor = util.sizemonitor || (util.sizemonitor = {}));
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var sizemonitor;
        (function (sizemonitor) {
            var Default = (function () {
                function Default() {
                }
                Default.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.util.sizemonitor.Default", config, extraArgs);
                };
                return Default;
            }());
            sizemonitor.Default = Default;
        })(sizemonitor = util.sizemonitor || (util.sizemonitor = {}));
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var SizeMonitor = (function () {
            function SizeMonitor() {
            }
            SizeMonitor.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.SizeMonitor", config, extraArgs);
            };
            return SizeMonitor;
        }());
        util.SizeMonitor = SizeMonitor;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var sizemonitor;
        (function (sizemonitor) {
            var OverflowChange = (function () {
                function OverflowChange() {
                }
                OverflowChange.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.util.sizemonitor.OverflowChange", config, extraArgs);
                };
                return OverflowChange;
            }());
            sizemonitor.OverflowChange = OverflowChange;
        })(sizemonitor = util.sizemonitor || (util.sizemonitor = {}));
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var sizemonitor;
        (function (sizemonitor) {
            var Scroll = (function () {
                function Scroll() {
                }
                Scroll.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.util.sizemonitor.Scroll", config, extraArgs);
                };
                return Scroll;
            }());
            sizemonitor.Scroll = Scroll;
        })(sizemonitor = util.sizemonitor || (util.sizemonitor = {}));
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Sortable = (function () {
            function Sortable() {
            }
            Sortable.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Sortable", config, extraArgs);
            };
            return Sortable;
        }());
        util.Sortable = Sortable;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Sorter = (function () {
            function Sorter() {
            }
            Sorter.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Sorter", config, extraArgs);
            };
            return Sorter;
        }());
        util.Sorter = Sorter;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var SorterCollection = (function () {
            function SorterCollection() {
            }
            SorterCollection.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.SorterCollection", config, extraArgs);
            };
            return SorterCollection;
        }());
        util.SorterCollection = SorterCollection;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var StoreHolder = (function () {
            function StoreHolder() {
            }
            StoreHolder.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.StoreHolder", config, extraArgs);
            };
            return StoreHolder;
        }());
        util.StoreHolder = StoreHolder;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var TaskManager = (function () {
            function TaskManager() {
            }
            TaskManager.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.TaskManager", config, extraArgs);
            };
            return TaskManager;
        }());
        util.TaskManager = TaskManager;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var TaskManager = (function () {
        function TaskManager() {
        }
        TaskManager.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.TaskManager", config, extraArgs);
        };
        return TaskManager;
    }());
    TypExt.TaskManager = TaskManager;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var TaskRunner = (function () {
            function TaskRunner() {
            }
            TaskRunner.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.TaskRunner", config, extraArgs);
            };
            return TaskRunner;
        }());
        util.TaskRunner = TaskRunner;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var taskrunner;
        (function (taskrunner) {
            var Task = (function () {
                function Task() {
                }
                Task.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.util.taskrunner.Task", config, extraArgs);
                };
                return Task;
            }());
            taskrunner.Task = Task;
        })(taskrunner = util.taskrunner || (util.taskrunner = {}));
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var TextMetrics = (function () {
            function TextMetrics() {
            }
            TextMetrics.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.TextMetrics", config, extraArgs);
            };
            return TextMetrics;
        }());
        util.TextMetrics = TextMetrics;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var translatable;
        (function (translatable) {
            var Abstract = (function () {
                function Abstract() {
                }
                Abstract.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.util.translatable.Abstract", config, extraArgs);
                };
                return Abstract;
            }());
            translatable.Abstract = Abstract;
        })(translatable = util.translatable || (util.translatable = {}));
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var translatable;
        (function (translatable) {
            var CssPosition = (function () {
                function CssPosition() {
                }
                CssPosition.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.util.translatable.CssPosition", config, extraArgs);
                };
                return CssPosition;
            }());
            translatable.CssPosition = CssPosition;
        })(translatable = util.translatable || (util.translatable = {}));
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var translatable;
        (function (translatable) {
            var CssTransform = (function () {
                function CssTransform() {
                }
                CssTransform.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.util.translatable.CssTransform", config, extraArgs);
                };
                return CssTransform;
            }());
            translatable.CssTransform = CssTransform;
        })(translatable = util.translatable || (util.translatable = {}));
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var translatable;
        (function (translatable) {
            var Dom = (function () {
                function Dom() {
                }
                Dom.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.util.translatable.Dom", config, extraArgs);
                };
                return Dom;
            }());
            translatable.Dom = Dom;
        })(translatable = util.translatable || (util.translatable = {}));
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var Translatable = (function () {
            function Translatable() {
            }
            Translatable.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.Translatable", config, extraArgs);
            };
            return Translatable;
        }());
        util.Translatable = Translatable;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var translatable;
        (function (translatable) {
            var ScrollParent = (function () {
                function ScrollParent() {
                }
                ScrollParent.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.util.translatable.ScrollParent", config, extraArgs);
                };
                return ScrollParent;
            }());
            translatable.ScrollParent = ScrollParent;
        })(translatable = util.translatable || (util.translatable = {}));
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var translatable;
        (function (translatable) {
            var ScrollPosition = (function () {
                function ScrollPosition() {
                }
                ScrollPosition.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.util.translatable.ScrollPosition", config, extraArgs);
                };
                return ScrollPosition;
            }());
            translatable.ScrollPosition = ScrollPosition;
        })(translatable = util.translatable || (util.translatable = {}));
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var TSV = (function () {
            function TSV() {
            }
            TSV.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.TSV", config, extraArgs);
            };
            return TSV;
        }());
        util.TSV = TSV;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var XTemplateCompiler = (function () {
            function XTemplateCompiler() {
            }
            XTemplateCompiler.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.XTemplateCompiler", config, extraArgs);
            };
            return XTemplateCompiler;
        }());
        util.XTemplateCompiler = XTemplateCompiler;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var util;
    (function (util) {
        var XTemplateParser = (function () {
            function XTemplateParser() {
            }
            XTemplateParser.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.util.XTemplateParser", config, extraArgs);
            };
            return XTemplateParser;
        }());
        util.XTemplateParser = XTemplateParser;
    })(util = TypExt.util || (TypExt.util = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ux;
    (function (ux) {
        var colorpick;
        (function (colorpick) {
            var Button = (function () {
                function Button() {
                }
                Button.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.ux.colorpick.Button", config, extraArgs);
                };
                return Button;
            }());
            colorpick.Button = Button;
        })(colorpick = ux.colorpick || (ux.colorpick = {}));
    })(ux = TypExt.ux || (TypExt.ux = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ux;
    (function (ux) {
        var colorpick;
        (function (colorpick) {
            var ColorMap = (function () {
                function ColorMap() {
                }
                ColorMap.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.ux.colorpick.ColorMap", config, extraArgs);
                };
                return ColorMap;
            }());
            colorpick.ColorMap = ColorMap;
        })(colorpick = ux.colorpick || (ux.colorpick = {}));
    })(ux = TypExt.ux || (TypExt.ux = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ux;
    (function (ux) {
        var colorpick;
        (function (colorpick) {
            var ColorPreview = (function () {
                function ColorPreview() {
                }
                ColorPreview.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.ux.colorpick.ColorPreview", config, extraArgs);
                };
                return ColorPreview;
            }());
            colorpick.ColorPreview = ColorPreview;
        })(colorpick = ux.colorpick || (ux.colorpick = {}));
    })(ux = TypExt.ux || (TypExt.ux = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ux;
    (function (ux) {
        var colorpick;
        (function (colorpick) {
            var Field = (function () {
                function Field() {
                }
                Field.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.ux.colorpick.Field", config, extraArgs);
                };
                return Field;
            }());
            colorpick.Field = Field;
        })(colorpick = ux.colorpick || (ux.colorpick = {}));
    })(ux = TypExt.ux || (TypExt.ux = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ux;
    (function (ux) {
        var colorpick;
        (function (colorpick) {
            var Selector = (function () {
                function Selector() {
                }
                Selector.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.ux.colorpick.Selector", config, extraArgs);
                };
                return Selector;
            }());
            colorpick.Selector = Selector;
        })(colorpick = ux.colorpick || (ux.colorpick = {}));
    })(ux = TypExt.ux || (TypExt.ux = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ux;
    (function (ux) {
        var colorpick;
        (function (colorpick) {
            var SelectorModel = (function () {
                function SelectorModel() {
                }
                SelectorModel.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.ux.colorpick.SelectorModel", config, extraArgs);
                };
                return SelectorModel;
            }());
            colorpick.SelectorModel = SelectorModel;
        })(colorpick = ux.colorpick || (ux.colorpick = {}));
    })(ux = TypExt.ux || (TypExt.ux = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ux;
    (function (ux) {
        var colorpick;
        (function (colorpick) {
            var Slider = (function () {
                function Slider() {
                }
                Slider.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.ux.colorpick.Slider", config, extraArgs);
                };
                return Slider;
            }());
            colorpick.Slider = Slider;
        })(colorpick = ux.colorpick || (ux.colorpick = {}));
    })(ux = TypExt.ux || (TypExt.ux = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ux;
    (function (ux) {
        var colorpick;
        (function (colorpick) {
            var SliderAlpha = (function () {
                function SliderAlpha() {
                }
                SliderAlpha.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.ux.colorpick.SliderAlpha", config, extraArgs);
                };
                return SliderAlpha;
            }());
            colorpick.SliderAlpha = SliderAlpha;
        })(colorpick = ux.colorpick || (ux.colorpick = {}));
    })(ux = TypExt.ux || (TypExt.ux = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ux;
    (function (ux) {
        var colorpick;
        (function (colorpick) {
            var SliderHue = (function () {
                function SliderHue() {
                }
                SliderHue.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.ux.colorpick.SliderHue", config, extraArgs);
                };
                return SliderHue;
            }());
            colorpick.SliderHue = SliderHue;
        })(colorpick = ux.colorpick || (ux.colorpick = {}));
    })(ux = TypExt.ux || (TypExt.ux = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ux;
    (function (ux) {
        var colorpick;
        (function (colorpick) {
            var SliderSaturation = (function () {
                function SliderSaturation() {
                }
                SliderSaturation.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.ux.colorpick.SliderSaturation", config, extraArgs);
                };
                return SliderSaturation;
            }());
            colorpick.SliderSaturation = SliderSaturation;
        })(colorpick = ux.colorpick || (ux.colorpick = {}));
    })(ux = TypExt.ux || (TypExt.ux = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ux;
    (function (ux) {
        var colorpick;
        (function (colorpick) {
            var SliderValue = (function () {
                function SliderValue() {
                }
                SliderValue.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.ux.colorpick.SliderValue", config, extraArgs);
                };
                return SliderValue;
            }());
            colorpick.SliderValue = SliderValue;
        })(colorpick = ux.colorpick || (ux.colorpick = {}));
    })(ux = TypExt.ux || (TypExt.ux = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ux;
    (function (ux) {
        var rating;
        (function (rating) {
            var Picker = (function () {
                function Picker() {
                }
                Picker.create = function (config, extraArgs) {
                    return TypExt.Object.create("Ext.ux.rating.Picker", config, extraArgs);
                };
                return Picker;
            }());
            rating.Picker = Picker;
        })(rating = ux.rating || (ux.rating = {}));
    })(ux = TypExt.ux || (TypExt.ux = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Version = (function () {
        function Version() {
        }
        Version.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Version", config, extraArgs);
        };
        return Version;
    }());
    TypExt.Version = Version;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var view;
    (function (view) {
        var AbstractView = (function () {
            function AbstractView() {
            }
            AbstractView.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.view.AbstractView", config, extraArgs);
            };
            return AbstractView;
        }());
        view.AbstractView = AbstractView;
    })(view = TypExt.view || (TypExt.view = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var view;
    (function (view) {
        var BoundList = (function () {
            function BoundList() {
            }
            BoundList.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.view.BoundList", config, extraArgs);
            };
            return BoundList;
        }());
        view.BoundList = BoundList;
    })(view = TypExt.view || (TypExt.view = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var BoundList = (function () {
        function BoundList() {
        }
        BoundList.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.BoundList", config, extraArgs);
        };
        return BoundList;
    }());
    TypExt.BoundList = BoundList;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var view;
    (function (view) {
        var BoundListKeyNav = (function () {
            function BoundListKeyNav() {
            }
            BoundListKeyNav.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.view.BoundListKeyNav", config, extraArgs);
            };
            return BoundListKeyNav;
        }());
        view.BoundListKeyNav = BoundListKeyNav;
    })(view = TypExt.view || (TypExt.view = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var view;
    (function (view) {
        var DragZone = (function () {
            function DragZone() {
            }
            DragZone.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.view.DragZone", config, extraArgs);
            };
            return DragZone;
        }());
        view.DragZone = DragZone;
    })(view = TypExt.view || (TypExt.view = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var view;
    (function (view) {
        var DropZone = (function () {
            function DropZone() {
            }
            DropZone.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.view.DropZone", config, extraArgs);
            };
            return DropZone;
        }());
        view.DropZone = DropZone;
    })(view = TypExt.view || (TypExt.view = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var view;
    (function (view) {
        var MultiSelector = (function () {
            function MultiSelector() {
            }
            MultiSelector.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.view.MultiSelector", config, extraArgs);
            };
            return MultiSelector;
        }());
        view.MultiSelector = MultiSelector;
    })(view = TypExt.view || (TypExt.view = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var view;
    (function (view) {
        var MultiSelectorSearch = (function () {
            function MultiSelectorSearch() {
            }
            MultiSelectorSearch.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.view.MultiSelectorSearch", config, extraArgs);
            };
            return MultiSelectorSearch;
        }());
        view.MultiSelectorSearch = MultiSelectorSearch;
    })(view = TypExt.view || (TypExt.view = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var view;
    (function (view) {
        var NavigationModel = (function () {
            function NavigationModel() {
            }
            NavigationModel.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.view.NavigationModel", config, extraArgs);
            };
            return NavigationModel;
        }());
        view.NavigationModel = NavigationModel;
    })(view = TypExt.view || (TypExt.view = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var view;
    (function (view) {
        var NodeCache = (function () {
            function NodeCache() {
            }
            NodeCache.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.view.NodeCache", config, extraArgs);
            };
            return NodeCache;
        }());
        view.NodeCache = NodeCache;
    })(view = TypExt.view || (TypExt.view = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var view;
    (function (view) {
        var Table = (function () {
            function Table() {
            }
            Table.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.view.Table", config, extraArgs);
            };
            return Table;
        }());
        view.Table = Table;
    })(view = TypExt.view || (TypExt.view = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var grid;
    (function (grid) {
        var View = (function () {
            function View() {
            }
            View.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.grid.View", config, extraArgs);
            };
            return View;
        }());
        grid.View = View;
    })(grid = TypExt.grid || (TypExt.grid = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var view;
    (function (view) {
        var TableLayout = (function () {
            function TableLayout() {
            }
            TableLayout.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.view.TableLayout", config, extraArgs);
            };
            return TableLayout;
        }());
        view.TableLayout = TableLayout;
    })(view = TypExt.view || (TypExt.view = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var view;
    (function (view) {
        var View = (function () {
            function View() {
            }
            View.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.view.View", config, extraArgs);
            };
            return View;
        }());
        view.View = View;
    })(view = TypExt.view || (TypExt.view = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var DataView = (function () {
        function DataView() {
        }
        DataView.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.DataView", config, extraArgs);
        };
        return DataView;
    }());
    TypExt.DataView = DataView;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Widget = (function () {
        function Widget() {
        }
        Widget.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Widget", config, extraArgs);
        };
        return Widget;
    }());
    TypExt.Widget = Widget;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var window;
    (function (window) {
        var MessageBox = (function () {
            function MessageBox() {
            }
            MessageBox.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.window.MessageBox", config, extraArgs);
            };
            return MessageBox;
        }());
        window.MessageBox = MessageBox;
    })(window = TypExt.window || (TypExt.window = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var window;
    (function (window) {
        var Toast = (function () {
            function Toast() {
            }
            Toast.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.window.Toast", config, extraArgs);
            };
            return Toast;
        }());
        window.Toast = Toast;
    })(window = TypExt.window || (TypExt.window = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var window;
    (function (window) {
        var Window = (function () {
            function Window() {
            }
            Window.create = function (config, extraArgs) {
                return TypExt.Object.create("Ext.window.Window", config, extraArgs);
            };
            return Window;
        }());
        window.Window = Window;
    })(window = TypExt.window || (TypExt.window = {}));
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var Window = (function () {
        function Window() {
        }
        Window.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.Window", config, extraArgs);
        };
        return Window;
    }());
    TypExt.Window = Window;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var WindowManager = (function () {
        function WindowManager() {
        }
        WindowManager.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.WindowManager", config, extraArgs);
        };
        return WindowManager;
    }());
    TypExt.WindowManager = WindowManager;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var XTemplate = (function () {
        function XTemplate() {
        }
        XTemplate.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.XTemplate", config, extraArgs);
        };
        return XTemplate;
    }());
    TypExt.XTemplate = XTemplate;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var ZIndexManager = (function () {
        function ZIndexManager() {
        }
        ZIndexManager.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.ZIndexManager", config, extraArgs);
        };
        return ZIndexManager;
    }());
    TypExt.ZIndexManager = ZIndexManager;
})(TypExt || (TypExt = {}));
var TypExt;
(function (TypExt) {
    var WindowGroup = (function () {
        function WindowGroup() {
        }
        WindowGroup.create = function (config, extraArgs) {
            return TypExt.Object.create("Ext.WindowGroup", config, extraArgs);
        };
        return WindowGroup;
    }());
    TypExt.WindowGroup = WindowGroup;
})(TypExt || (TypExt = {}));
// Some addons: Ajax class, extend Container and Panel
var TypExt;
(function (TypExt) {
    var addon;
    (function (addon) {
        var Ajax = (function () {
            function Ajax() {
            }
            /** [Method] Sends an HTTP request to a remote server.
            * @param options Object The request configuration.
            * @returns Object The request object. This may be used to cancel the request.
            */
            Ajax.request = function (options, extraArgs) {
                if (extraArgs == null)
                    return Ext.Ajax.request(options);
                else
                    return Ext.Ajax.request(Ext.Object.merge(options, extraArgs));
            };
            Ajax.httpGet = function (options, extraArgs) {
                options.method = "GET";
                return TypExt.addon.Ajax.request(options, extraArgs);
            };
            Ajax.httpPost = function (options, extraArgs) {
                options.method = "POST";
                return TypExt.addon.Ajax.request(options, extraArgs);
            };
            return Ajax;
        }());
        addon.Ajax = Ajax;
    })(addon = TypExt.addon || (TypExt.addon = {}));
})(TypExt || (TypExt = {}));
var JsObject = Object;
var JsError = Error;
var TypExt;
(function (TypExt) {
    var addon;
    (function (addon) {
        var data;
        (function (data) {
            var AbstractModelFactory = (function () {
                function AbstractModelFactory() {
                }
                AbstractModelFactory.prototype.buildModelConfig = function (extendedClass, extraConfig) {
                    if (extendedClass === void 0) { extendedClass = 'Ext.data.Model'; }
                    this.checkModel();
                    var config = {
                        extend: extendedClass,
                        fields: this.getFields()
                    };
                    if (extraConfig != null) {
                        config = Ext.Object.merge(config, extraConfig);
                    }
                    return config;
                };
                AbstractModelFactory.prototype.defineModel = function (extendedClass, extraConfig) {
                    if (extendedClass === void 0) { extendedClass = 'Ext.data.Model'; }
                    if (AbstractModelFactory.definedModels[this.getClassName()]) {
                        throw new JsError("The model '" + this.getClassName() + "' can't be defined multiple times");
                    }
                    var config = this.buildModelConfig(extendedClass, extraConfig);
                    Ext.define(this.getClassName(), config);
                    AbstractModelFactory.definedModels[this.getClassName()] = true;
                };
                AbstractModelFactory.prototype.requireModel = function (extendedClass, extraConfig) {
                    if (extendedClass === void 0) { extendedClass = 'Ext.data.Model'; }
                    if (AbstractModelFactory.definedModels[this.getClassName()] == false) {
                        this.defineModel(extendedClass, extraConfig);
                    }
                };
                // Fields reflection
                AbstractModelFactory.prototype.getFields = function () {
                    var fields = [];
                    for (var _i = 0, _a = JsObject.keys(this); _i < _a.length; _i++) {
                        var key = _a[_i];
                        var keyType = typeof (key);
                        if (keyType == 'string' || keyType == 'object') {
                            fields.push(this[key]);
                        }
                        else {
                            throw 'Invalid field JS type, must be string or object';
                        }
                    }
                    return fields;
                };
                AbstractModelFactory.prototype.checkModel = function () {
                    var fieldNames = [];
                    var fieldNameSet = {};
                    for (var _i = 0, _a = this.getFields(); _i < _a.length; _i++) {
                        var field = _a[_i];
                        var fieldName = typeof (field) == 'string' ? field : field.name;
                        fieldNames.push(fieldName);
                        fieldNameSet[fieldName] = true;
                        if (!this[fieldName]) {
                            throw "Inconsistent ExtJS model definition, field '" + fieldName + "' is not named correctly !";
                        }
                    }
                    var fieldsCount = fieldNames.length;
                    var distinctFieldsCount = JsObject.keys(fieldNameSet).length;
                    if (fieldsCount != distinctFieldsCount) {
                        throw "Inconsistent ExtJS model definition, expected " + fieldsCount + " distinct fields but has only " + distinctFieldsCount + " !";
                    }
                };
                // Definie static instance to check we don't instantiate the class multiple times
                /*private static instance: AbstractModelFactory;
                constructor() {
                  if (AbstractModelFactory.instance) {
                    throw new JsError("Can't instantiate this class multiple times");
                  }
                  
                   AbstractModelFactory.instance = this;
                }*/
                AbstractModelFactory.definedModels = {};
                return AbstractModelFactory;
            }());
            data.AbstractModelFactory = AbstractModelFactory;
        })(data = addon.data || (addon.data = {}));
        var dd;
        (function (dd) {
            var DropTarget = (function () {
                function DropTarget() {
                }
                DropTarget.create = function (el, config) {
                    return Ext.create('Ext.dd.DropTarget', el, config);
                };
                return DropTarget;
            }());
            dd.DropTarget = DropTarget;
        })(dd = addon.dd || (addon.dd = {}));
        var Container = (function () {
            function Container() {
            }
            Container.extend = function (extContainer) {
                extContainer.getItems = function () {
                    this.items.items.forEach(function (item) {
                        TypExt.addon.Panel.extend(item);
                    });
                    return this.items.items;
                };
                extContainer.getItem = function (index) {
                    var item = this.items.items[index];
                    if (item === undefined) {
                        throw "can't find item at index " + index;
                    }
                    return TypExt.addon.Panel.extend(item);
                };
                return extContainer;
            };
            return Container;
        }());
        addon.Container = Container;
        var Panel = (function () {
            function Panel() {
            }
            Panel.createAndExtend = function (config, extraArgs) {
                return TypExt.addon.Panel.extend(TypExt.panel.Panel.create(config, extraArgs));
            };
            Panel.extend = function (extPanel) {
                return TypExt.addon.Container.extend(extPanel);
            };
            return Panel;
        }());
        addon.Panel = Panel;
    })(addon = TypExt.addon || (TypExt.addon = {}));
})(TypExt || (TypExt = {}));
//# sourceMappingURL=typext.js.map